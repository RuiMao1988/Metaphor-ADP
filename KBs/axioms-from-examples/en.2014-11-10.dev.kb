(B (name x) (=> (S#ABYSS e0 :0.96) (^ (abysmal-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (abyss-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (black-adj s2 s1) (hole-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (black-adj s2 x0) (hole-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (bottomless-adj s2 x0) (pit-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (bottomless-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (cave-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (chasm-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (climb-nn e0 x0) (out-in e0 x0 x1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (climb-vb e0 x0 u0 u1) (of-in e1 e0 x0) (out-in e1 e0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (crawl-nn e0 x0) (of-in e0 x0 x1) (out-in e0 x0 x1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (deepen-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (deepen-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (deepen-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (depth-adj e0 s2))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (depth-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (depth-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (depths-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (descend-nn e0 x0) (into-in e0 x0 x1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (dig-vb e0 x0 u0 u1) (of-in e0 x0 x1) (of-in e1 e0 x0) (out-in e1 e0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (dug-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (dug-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (entrench-adj s2 s1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (extreme-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (hell-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (hole-nn e0 x0) (sink-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (hole-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (infinite-adj s2 s1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (infinite-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (into-in e1 e0 x0) (push-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (into-in e1 e0 x0) (throw-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (into-in e1 e0 x0) (tumble-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (maw-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (narrow-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (narrowing-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (of-in e0 s1 x0) (out-in e0 s1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (of-in e1 e0 x0) (out-in e1 e0) (pull-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (out-rb e1 e0) (take-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (penetrated-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (penetration-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (pit-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (precipice-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (push-nn e0 x0 e1 u0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (rift-nn e0 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (sinkhole-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (slip-vb e0 s1 u0 u1))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (void-adj s2 x0))))
(B (name x) (=> (S#ABYSS e0 :0.96) (^ (well-rb s2 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (accident-nn e0 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (accidental-adj s2 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (accidentally-rb e0 s2))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (collide-nn e0 x0) (with-in e0 x0 x1))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (crash-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (derailment-nn e0 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (fatally-rb e0 s2))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (mishap-adj s2 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (mishap-nn e0 x0))))
(B (name x) (=> (S#ACCIDENT e0 :0.96) (^ (train-nn e0 x0) (wreck-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addict-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addict-nn e0 x0) (drug-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addict-vb e0 u0 x0 s5))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addict-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addicted-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0) (break-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0) (break-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (addictive-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (booze-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (cocaine-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (compel-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (crave-vb e0 s1 u1 u0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (crave-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (dealer-nn e0 x0) (drug-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (dependency-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (dependent-adj s2 x0) (on-in e0 s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (drug-nn e0 x0) (gateway-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (drug-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (drug-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (drunk-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (get-vb e0 x0 x1 u0) (high-adj s3 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (habit-nn e0 x0) (kick-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (habit-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (hangover-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (heroin-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (high-adj s2 x0) (on-in e0 s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (imbibe-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (intoxicate-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (intoxicated-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (narcotic-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (opium-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (overdose-adj e0 s2))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (overdose-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (overdose-nn e0 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (sober-adj s2 x0))))
(B (name x) (=> (S#ADDICTION e0 :0.96) (^ (sober-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (aggressive-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (ass-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (bark-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (bark-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (bear-nn e0 x0) (claw-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (beastofburden-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (beaver-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (beget-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (behave-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (bovine-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (breed-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (breed-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (breeding-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (carapace-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (cash-nn e0 x0) (cow-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (cattle-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (chase-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (claw-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (concieved-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (cow-nn e0 x0) (milk-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (die-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (dog-nn e0 x0) (fight-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (dog-nn e0 x0) (guard-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (dog-nn e0 x0) (watch-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (domesticated-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (donkey-rb e0 s2))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (down-in e0 x0 x1) (hunt-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (elephant-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (engender-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (fang-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (feather-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (fledging-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (fledgling-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (goad-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (goat-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (grasshopper-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (greedy-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (hatch-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (have-vb e0 x0 x1 u0) (sex-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (herded-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (hibernation-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (horse-nn e0 x0) (trojan-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (howl-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (instinct-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (instinct-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (interact-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (left-adj s2 x0) (wing-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (longstanding-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (maul-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (mauled-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (peck-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (pet-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (pony-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (predator-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (predatory-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (prey-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (prey-nn e0 x0) (upon-in e0 x0 x1))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (prodded-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (reproduce-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (roar-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (roar-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (sheep-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (spawn-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (species-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (stampede-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (stand-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (stare-nn e0 x0) (starvation-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (stillborn-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (stung-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (talon-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (tame-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (tentacle-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (tiger-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (toadying-adj s2 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (watchdog-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (wing-nn e0 x0))))
(B (name x) (=> (S#ANIMAL e0 :0.96) (^ (wing-vb e0 x0 u0 u1))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (adulation-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (agnostic-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (almighty-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (altar-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (apotheosize-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (baptize-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (believer-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (cultism-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (deified-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (deify-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (deity-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (demigod-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (demigod-nn e0 x0) (democracy-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (devotee-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (devotion-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (divine-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (divine-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (enshrine-vb e0 u0 s1 u1))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (faith-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (god-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (goddess-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (godly-rb s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (grace-nn e0 x0) (save-vb e0 x0 u0 u1))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (heresy-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (idol-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (idol-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (idolatry-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (idolize-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (idolize-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (incarnation-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (missionary-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (omnipresence-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (pantheon-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (powerful-adj s3 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (propitiate-adj s2 s1))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (propitiate-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (religion-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (ritual-adj e0 s2))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (tribute-adj s2 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (veneration-nn e0 x0))))
(B (name x) (=> (S#A_GOD e0 :0.96) (^ (worship-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (allow-vb e0 u0 x0 u1) (for-in e1 e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (allow-vb e0 u0 x0 u1))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (allow-vb e0 x0 x1 u0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (birthright-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (claim-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (grant-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (infringement-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (inviolable-adj s2 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (lien-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (permit-vb e0 u0 x0 u1))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (permit-vb e0 x0 x1 u0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (recognised-adj s2 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (recognize-vb e0 x0 x1 u0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (right-adj s2 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (right-rb e0 s2))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (right-rb s2 s1))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (right-rb s2 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (rights-nn e0 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (tolerate-adj s2 x0))))
(B (name x) (=> (S#A_RIGHT e0 :0.96) (^ (tolerate-vb s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (around-in e0 x0 x1) (turn-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (backing-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (backlash-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (backward-rb s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (on-in e0 s2 x0) (retrogression-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (overturn-adj s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (recall-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (restore-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (retract-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (retreat-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (reversal-nn e0 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (reverse-adj s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (reversed-adj s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (subversion-adj s2 x0))))
(B (name x) (=> (S#BACKWARD_MOVEMENT e0 :0.96) (^ (withdraw-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (bar-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (barrier-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (block-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (curtain-adj s2 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (curtain-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (hindered-adj s2 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (impediment-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (partially-rb e0 s2))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (recovery-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (resolution-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (separate-adj s2 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (setback-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (shutter-nn e0 x0))))
(B (name x) (=> (S#BARRIER e0 :0.96) (^ (stacked-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (arterial-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (artery-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleeding-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (blood-nn e0 x0) (life-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (blood-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bloodstream-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bloodstream-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (circulation-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (coagulate-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (heartbeat-adj s2 s1))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (heartbeat-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (hemorrhage-nn e0 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (oxygenated-adj s2 x0))))
(B (name x) (=> (S#BLOOD_STREAM e0 :0.96) (^ (transfusion-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boil-nn e0 x0) (down-in e0 x0 x1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boil-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boiling-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (cesspool-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (current-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (current-adj s3 x0) (rip-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (divert-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (drown-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (drown-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (drowned-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (engulf-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporate-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporation-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flow-nn e0 x0) (from-in e0 x0 x1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flow-nn e0 x0) (out-in e0 x0 x1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flow-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (fountain-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (froze-adj s2 s1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (funnel-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ground-nn e0 x0) (swell-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ice-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (immersed-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inflow-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (into-in e0 x0 x1) (sink-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (into-in e1 e0 x0) (sink-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inundate-vb e1 x0 e0 u0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inundation-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (liquefy-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (liquidation-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (melt-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (melt-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (melted-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (mire-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (offshore-rb s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (pool-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (pour-vb e0 u0 s1 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ripple-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (sea-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (siphon-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (spill-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (spout-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stagnant-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stagnate-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (steam-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (steam-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stream-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stream-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tide-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tide-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tide-rb e0 s2))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tread-vb e0 x0 u0 u1) (water-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (trickle-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (trickled-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (undercurrent-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (undertow-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (undertow-rb e0 s2))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (unfathomable-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (vapor-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (vast-adj s2 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (vastness-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (water-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (waterfall-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (waters-nn e0 x0))))
(B (name x) (=> (S#BODY_OF_WATER e0 :0.96) (^ (wave-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (architect-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (architecture-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (art-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (assemble-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (barn-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (block-nn e0 x0) (building-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (blueprint-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (bolster-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (braced-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (buckle-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (build-vb e0 u0 x0 u1) (on-in e1 e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (build-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (build-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (build-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (build-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (building-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (bulldoze-vb e0 u0 s1 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (bulldoze-vb e0 x0 s5 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (bulldoze-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (buttress-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (capstone-nn e0 x0) (to-in e1 e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (ceiling-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (collapse-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (collapsed-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (compose-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (consolidation-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (constitute-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (construct-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (construct-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (construction-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (cornerstone-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (create-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (create-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (creation-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (demolish-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (demolished-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (demolition-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (design-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (design-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (dismantle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (dismantling-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (down-in e0 x0 x1) (nail-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (down-rb e1 e0) (tear-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (edifice-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (elevator-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (engineer-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (engineered-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (erect-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (erected-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (establishment-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (form-nn e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (formation-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (formed-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (found-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (foundation-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (foundational-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (founding-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (frame-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (framework-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (framework-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (hammer-nn e0 x0) (out-in e0 x0 x1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (house-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (housing-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (infrastructure-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (install-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (install-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (installed-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (lay-vb e0 x0 x1 u0) (out-rb e1 e0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (lay-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (mainstay-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (mainstay-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (newlyformed-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (organize-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (pillar-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (pillar-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (plaster-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (plumbing-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (power-nn e0 x0) (structure-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (prop-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (put-vb e1 x0 e0 u0) (together-rb s7 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (reform-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (reinforce-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (reinforce-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (reinforce-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (restoration-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (restructure-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (restructure-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (set-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (setup-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (shore-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (stability-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (structural-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (structure-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (structured-adj s2 s1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (structured-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (support-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (support-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (supporting-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (theater-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (threshold-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (threshold-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (topple-vb e0 s1 u1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (topple-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (topple-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (toppling-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (underly-rb s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (underpin-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (underpin-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (underpinning-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (underpinning-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (wall-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (warehouse-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (wellfounded-adj s2 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (windowdress-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (wreck-nn e0 x0))))
(B (name x) (=> (S#BUILDING e0 :0.96) (^ (wreck-vb e0 s1 u1 u0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (achieve-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (act-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (business-nn e0 x0) (show-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (business-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (commercial-adj s2 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (corporation-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (corporatize-adj s2 s1))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (corporatize-adj s2 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (downsize-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (employ-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (employee-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (employment-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (enterprise-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (globalize-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (globalize-vb e0 x0 u0 u1))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (job-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (jog-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (man-nn e0 x0) (middle-adj s2 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (manage-vb e0 u0 x0 u1))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (market-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (marketing-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (monopoly-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (music-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (opera-nn e0 x0) (soap-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (partner-nn e0 x0) (silent-adj s2 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (promote-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (promotion-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (provide-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (rebrand-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (remitted-adj s2 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (restaurant-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (salesman-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (sell-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (sell-vb e0 x0 x1 u0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (store-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (symphony-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (underwrite-nn e0 x0))))
(B (name x) (=> (S#BUSINESS e0 :0.96) (^ (worker-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (accessorize-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (alteration-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (armor-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (baggy-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (baggy-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (belt-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (bling-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (blue-adj s2 x0) (collar-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (blue-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (bonnet-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (boot-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (boot-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (boots-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (brassiere-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (britch-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (cloak-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (cloak-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (clothed-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (clothes-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (clothing-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (coat-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (collared-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (cover-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (cuffed-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (diaper-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (dress-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (fashionable-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (garment-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (glass-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (glove-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (glove-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (gown-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (hat-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (jackboot-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (jacket-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (launderer-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (mantle-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (mask-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (pocket-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (pocketbook-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (robe-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (sewed-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (shirt-nn e0 x0) (stuffed-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (shirt-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (shoe-nn e0 x0) (walking-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (shoe-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (skirt-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (sock-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (stitch-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (stitch-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (straightjacket-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (style-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (sweater-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (tailor-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (tailor-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (tailored-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (tailoring-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (tightcollared-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (trappings-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (underwear-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (uniform-adj s2 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (veil-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (vestment-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (wardrobe-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (wear-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (wear-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (westernstyle-nn e0 x0))))
(B (name x) (=> (S#CLOTHING e0 :0.96) (^ (wig-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (beating-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (bid-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (challenge-nn e0 x0 x1 u0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (challenge-vb e0 u0 x0 u1))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (challenger-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (compete-vb e0 x0 x1 u0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (competition-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (competitive-adj s2 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (contender-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (contest-nn e0 x0) (popularity-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (contest-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (fail-vb e0 u0 x0 u1))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (failure-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (for-in e0 e1 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (horse-nn e0 x0) (race-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (hurdle-nn e0 x0) (race-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (in-in e0 x0 x1) (win-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (marathon-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (race-nn e0 x0) (relay-adj s2 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (race-nn e0 x0) (relay-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (race-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (raced-adj s2 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (racing-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (rival-adj s2 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (round-adj s2 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (team-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (triumph-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (win-nn e0 x0 x1 u0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (win-vb e0 x0 u0 u1))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (winner-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (won-nn e0 x0 x1 u0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (won-nn e0 x0))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (wrestle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#COMPETITION e0 :0.96) (^ (wrestling-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (back-rb s3 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (ball-nn e0 x0) (chain-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (ballandchain-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (bind-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (bind-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (binding-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (bond-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (break-nn e0 x0) (out-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (break-vb e0 x0 x1 u0) (out-rb e1 e0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (breakout-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (bridle-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (bubble-adj e0 s2))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (cage-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (capture-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (capture-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (capture-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (chain-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (chain-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (circle-nn e0 x0) (closed-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (confine-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (confine-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (confinement-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (confines-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (constrain-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (constrained-adj s2 x0) (inequality-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (constrained-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (containment-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (cover-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (curb-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (curb-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (dungeon-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-nn e0 x0) (from-in e0 x0 x1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-nn e0 x0) (hatch-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (exemption-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (fleeing-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (free-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (freedom-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hamper-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hobble-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hobble-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hobbled-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hold-nn e0 x0) (take-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (hold-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (imprison-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (imprisoned-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (inhibited-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (inhibiting-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (jail-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (jailed-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (liberate-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (liberated-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (liberation-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (lifeline-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (lock-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (lock-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (muzzle-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (prison-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (recapture-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (release-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (release-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (released-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restrain-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restrained-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restrict-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restricted-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restriction-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (restrictive-adj s3 x0) (trade-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (shackle-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (suspend-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (tie-vb e0 u0 x0 u1) (up-rb e1 e0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (trap-nn e0 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (trapped-adj s2 x0))))
(B (name x) (=> (S#CONFINEMENT e0 :0.96) (^ (unfettered-adj s2 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (bag-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (bathtub-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (bottle-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (box-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (bucket-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (cabinet-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (carton-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (chest-nn e0 x0) (hope-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (cover-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (cupboard-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (fill-nn e0 x0 x1 u0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (fill-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (hold-nn e0 x0 x1 u0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (package-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (pot-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (quiver-nn e0 x0))))
(B (name x) (=> (S#CONTAINER e0 :0.96) (^ (tank-nn e0 x0) (think-vb e0 x0 s6 u0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (clean-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (clean-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (clean-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (contaminate-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (contamination-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupt-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupt-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupted-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (corruption-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (corruptly-rb e0 s2))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (defilement-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (disposal-nn e0 x0) (garbage-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (dust-nn e0 x0) (of-in e0 x0 x1) (off-in e0 x0 x1))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (impure-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (impurely-rb e0 s2))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (outhouse-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (purge-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (scum-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (sewer-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (stain-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (taint-nn e0 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (tainted-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (toxic-adj s2 x0))))
(B (name x) (=> (S#CONTAMINATION e0 :0.96) (^ (untainted-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (accomplice-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (accusation-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (atrocity-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (bailout-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (betrayal-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (blackmail-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (blackmail-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (blame-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (breach-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (chastened-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (con-adj s2 x0) (game-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (condemn-vb e0 u0 s1 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (condemn-vb e0 u0 x0 u1) (democracy-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (condemn-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (condemn-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (condemnation-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (crack-vb e0 x0 x1 u0) (down-rb e1 e0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (crime-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (criminal-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (criminal-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (criminalization-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (cursed-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (deceived-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (deception-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (defrauded-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (denounce-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (execute-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (exoneration-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (fine-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (gang-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (guilt-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (guilty-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (hijack-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (hijacker-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (hit-nn e0 x0) (man-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (hostage-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (in-in e0 x0 x1) (indictment-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (judge-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (lawlessness-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (murder-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (murderer-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (of-in e0 x0 x1) (ripoff-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (penalty-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (perpetrate-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (perpetrate-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (perpetrator-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (persecute-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (pimp-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punish-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punish-vb e0 x0 e1 u0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punished-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punishing-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punishment-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (punitive-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (rape-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (rogue-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (scandal-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (scapegoat-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (sin-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (terrorist-adj s2 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (thuggery-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (verdict-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (victim-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (victimize-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (violate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (violation-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (violator-nn e0 x0))))
(B (name x) (=> (S#CRIME e0 :0.96) (^ (witnessed-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (bed-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (blight-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (blight-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (blighted-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (bumper-nn e0 x0) (crop-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (collect-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (cultivate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (drought-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (fertilize-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (foster-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (fostering-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (garden-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (garner-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (garnered-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (ground-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (grow-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (harvest-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (irrigated-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (locust-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (plant-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (plow-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (pruned-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (reap-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (reaped-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (rotinfested-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (rottentothecore-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (seeded-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (sow-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (sow-vb e0 x0 u0 u1))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (sow-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (sown-adj s2 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (sustain-vb e0 x0 x1 u0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (vineyard-nn e0 x0))))
(B (name x) (=> (S#CROP e0 :0.96) (^ (weed-vb e0 x0 s5 u0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (benighted-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (black-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (cast-vb e0 x0 x1 u0) (shadow-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (cloud-nn e0 x0) (dark-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (clouded-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (dark-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (darken-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (darken-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (darkness-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (dim-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (eclipse-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (eclipsed-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (enlightened-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (enlightenment-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (everdarkening-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (extinguish-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (extinguish-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (gloom-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (gloomy-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (grope-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (obscure-adj s2 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (overshadow-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (shades-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (shadow-nn e0 x0))))
(B (name x) (=> (S#DARKNESS e0 :0.96) (^ (twilight-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (abscess-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (afflict-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (afflict-vb e0 u0 x0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (afflict-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (affliction-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (alleviate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (alleviates-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (anemia-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (anguish-nn e0 x0) (mental-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (ass-nn e0 x0) (in-in e0 x0 x1) (in-in e0 x1 x0) (pain-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (bandage-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (bandaged-adj x0 u0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (bandaid-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (cancer-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (choke-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (chronic-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (chronic-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (congress-nn e0 s1) (convuls-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (constipation-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (contagious-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (cripple-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (crippled-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (crippling-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (debilitate-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (debilitate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (debilitating-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (diagnose-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (disease-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (dislocation-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (eliminate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (eliminate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (eliminate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (elimination-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (eradicate-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (far-rb x0 u0) (sighted-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (farsighted-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (fever-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (form-nn e0 x0) (government-nn e0 x0) (of-in e0 x0 x1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (get-vb e0 x0 x1 u0) (worse-adj s3 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (healing-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (infect-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (infection-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (leprosy-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (myopia-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (myopic-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (numb-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (pain-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (panacea-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (pandemic-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (persistent-adj s2 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (plague-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (plague-vb e0 u0 x0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (plague-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (relieve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (symptom-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (tumor-nn e0 x0))))
(B (name x) (=> (S#DISEASE e0 :0.96) (^ (up-in e0 x0 x1) (vomit-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (abatement-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (cutback-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decline-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decline-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decline-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decrease-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decrease-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (deducted-adj s2 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (deduction-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (deescalate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (devalue-vb e0 u0 x0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (down-rb e1 e0) (plunk-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (down-rb s6 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (downward-adj s2 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fallen-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fell-adj s2 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (for-in e1 e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (halved-adj s2 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (into-in e0 x0 x1) (plunge-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (into-in e1 e0 x0) (slide-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-vb e0 u0 x0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-vb e0 x0 u0 u1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (plummet-nn e0 x0) (to-in e0 x0 x1))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (plummet-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (plummet-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (slash-vb e0 x0 x1 u0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (slide-nn e0 x0))))
(B (name x) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (slump-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (alarm-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (ambition-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (approval-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (avarice-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (avarice-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (benevolent-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (bigotry-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (bitterness-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (blissfully-rb e0 s2))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (care-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (celebrate-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (celebration-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (concern-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (courageous-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (covet-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (covet-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (coveted-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (cowardly-rb e0 s2))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (desire-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (despise-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (despise-vb e0 x0 u0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (disdain-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (disposed-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (distrust-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (distrusted-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (doldrums-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (encouraged-adj e1 x0 e0 x1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (enjoy-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (enjoy-vb e0 x0 u0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (enjoy-vb e0 x0 x1 u0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (enjoyment-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (envy-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (evoke-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (expect-vb e0 x0 x1 u0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (favor-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (favour-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (for-in e1 e0 x0) (yearn-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (gree-vb e0 u0 x0 s5))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (greed-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (greedy-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (hate-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (hatr-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (hatred-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (humor-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (impact-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (interest-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (jealousy-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (largesse-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (like-in e1 e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (loathe-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (love-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (love-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (lust-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (mistrust-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (nonsensitive-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (orgy-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (paranoia-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (passion-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (prejudice-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (rage-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (relish-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (relish-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (relish-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (resentment-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (resolutely-rb e0 s2))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (respect-vb e0 x0 u0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (respects-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (savored-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (seductive-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (selfish-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (selfishness-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (shame-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (subdue-vb e0 u0 x0 u1))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (unified-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (whiff-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (willingness-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (wished-adj s2 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (wished-nn e0 x0))))
(B (name x) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (yearning-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (ability-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (blister-vb e0 x0 u0 u1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (boil-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (boost-nn e0 x0 x1 u0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (effect-nn e0 x0 x1 u0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (effect-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (effort-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (energetic-adj s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (energize-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (energize-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (energized-adj s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (energy-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (exert-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (explosion-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (force-vb e0 u0 x0 u1) (into-in e1 e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (force-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (fuel-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (fuelled-adj s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (fuse-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (heat-nn e0 x0) (up-in e0 x0 x1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (hotly-rb e0 s2))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (initiative-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (intense-adj s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (nuclear-adj s2 s1))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (reinvigoration-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (revitalization-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (stimulate-vb s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (swelter-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (vibrant-adj s2 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (vigor-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (warm-nn e0 x0))))
(B (name x) (=> (S#ENERGY e0 :0.96) (^ (warmed-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (chattel-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (dominate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (dominate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (domination-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslave-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslave-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslave-vb e0 x0 x1 u0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslaved-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslavement-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (govern-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (hamasdominate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (harassment-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (help-nn e0 x0 e1 u0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (obey-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppress-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppress-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressed-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppression-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressive-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (owner-nn e0 x0) (slave-adj s2 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (reign-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (repression-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-nn e0 x0))))
(B (name x) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slavery-nn e0 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (blanket-nn e0 x0) (wet-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (carpet-nn e0 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (layer-nn e0 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (pattern-nn e0 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (quilted-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (rug-nn e0 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (rumpled-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (shrink-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (threadbare-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (unravel-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (unraveling-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (weave-adj s2 x0))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (weave-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FABRIC e0 :0.96) (^ (weaving-adj s2 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (clock-nn e0 x0) (out-in e0 x0 x1))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (fabricate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (fabricated-adj s2 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (fabrication-nn e0 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (forge-nn e0 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (industrialized-adj s2 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (molded-adj s2 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (produce-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (produce-vb e0 x1 x0 u0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (product-nn e0 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (shutdown-nn e0 x0))))
(B (name x) (=> (S#FACTORY e0 :0.96) (^ (yield-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (adopt-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (adopt-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (adopted-adj s2 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (adoption-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (big-adj s2 x0) (brother-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (brother-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (conversation-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (daddy-adj s2 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (family-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (father-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (friend-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (inherit-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (kiss-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (little-nn e0 x0) (sisters-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (mother-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (offspr-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (relation-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (sister-nn e0 x0))))
(B (name x) (=> (S#FAMILY e0 :0.96) (^ (tribe-nn e0 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (ash-nn e0 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (catalyst-nn e0 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (defuse-nn e0 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (ignite-adj s2 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (out-in e0 x0 x1) (stamp-nn e0 x0))))
(B (name x) (=> (S#FIRE e0 :0.96) (^ (smothered-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (aftertaste-rb e0 s2))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (ambrosia-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (appetizer-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (aroma-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (away-rb e1 e0) (eat-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (banquet-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (beef-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (bitter-adj s2 x0) (taste-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (bread-nn e0 x0) (butter-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (bread-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (brew-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (buffet-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (carrot-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (combine-vb s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (consume-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (consume-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (consume-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (consumption-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (cook-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (crave-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (devour-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (diet-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (dinner-nn e0 x0) (table-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (dish-nn e0 x0) (main-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (drink-vb e0 x0 u0 u1) (up-rb e1 e0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (eat-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (eat-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (expire-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (expire-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (flavor-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (fodder-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (food-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (fresh-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (grill-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (halfbaked-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (ingredient-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (leftovers-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (luscious-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (meaty-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (nibbled-adj s2 s1))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (pie-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (pint-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (plan-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (savor-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (savor-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (savor-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (slice-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (smell-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (soup-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (sour-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (swallow-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (swallow-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (table-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (taste-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (tasted-adj s2 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (twinkie-nn e0 x0))))
(B (name x) (=> (S#FOOD e0 :0.96) (^ (wine-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (bloodsucker-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (exact-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (exact-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (extract-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (extraction-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleece-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleece-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleeced-adj s2 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleecing-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (gouge-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (gouge-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (hoover-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (milk-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (milk-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (milked-adj s2 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (milking-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (out-rb e1 e0) (pull-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (pluck-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (pull-vb e0 x0 x1 u0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-nn e0 x0 x1 u0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-nn e0 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (tap-vb s2 x0))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (wrench-vb e0 u0 x0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (wrench-vb e0 x0 u0 u1))))
(B (name x) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (wring-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (advance-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (advanced-adj s2 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (advanced-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (advancement-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (breakthrough-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (continuation-nn e0 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (expedite-adj s2 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (progressive-adj s2 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (thriving-adj s2 x0))))
(B (name x) (=> (S#FORWARD_MOVEMENT e0 :0.96) (^ (well-rb s5 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (ace-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (aceinthehole-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (advantage-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (aim-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (ante-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (ball-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (bat-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (beat-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (bluff-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (call-vb e0 x0 x1 u0) (shot-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (capitulate-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (card-nn e0 x0) (trump-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (card-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (chance-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (checkers-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (chess-adj s2 x0) (game-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (chess-nn e0 x0) (game-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (coach-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (concede-vb s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (dice-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (field-nn e0 x0) (play-vb e0 x0 u0 u1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (football-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (forfeit-vb e0 u0 x0 u1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (forfeiture-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (gamble-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (gambled-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (game-nn e0 x0) (poker-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (game-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (goal-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (goalie-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (hail-nn e0 x0) (mary-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (highstake-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (home-nn e0 x0) (run-nn e0 x0 x1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (home-nn e0 x0) (run-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (inning-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (join-vb e0 x0 x1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (lose-vb e0 u0 x0 u1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (lose-vb e0 x0 x1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (loss-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (mound-adj s3 x0) (pitcher-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (participate-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (pawn-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (play-vb e0 s1 u1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (play-vb e0 x0 x1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (player-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (playing-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (punt-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (puzzle-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (referee-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (role-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (sack-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (score-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (score-vb e0 u0 s1 u1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (scorecard-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (spectator-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (tackle-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (tackle-vb e0 x0 x1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (team-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (tee-vb e0 x0 x1 u0) (up-rb e0 e1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (throw-vb e0 s1 u1 u0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (trump-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (umpire-adj s2 s1))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (umpire-adj s2 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (win-nn e0 x0))))
(B (name x) (=> (S#GAME e0 :0.96) (^ (win-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (cliff-adj s2 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (desert-nn e0 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (fault-nn e0 x0) (inequality-nn e0 x0) (line-nn e0 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (forest-nn e0 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (mountain-nn e0 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (pitfall-nn e0 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (quicksand-adj s2 x0))))
(B (name x) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (wasteland-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (above-in e0 s1 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (above-in e0 x0 x1))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (amount-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apex-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apex-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apex-rb x0 u0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apogee-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (extreme-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (greater-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (height-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (high-adj s2 x0) (level-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (high-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (high-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (higher-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (highest-adj e0 x0 x1))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (maximal-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (maximize-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (maximize-vb s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peak-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peak-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peaked-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (pinnacle-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (priority-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (strata-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (summit-nn e0 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (top-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (ultimate-adj s2 x0))))
(B (name x) (=> (S#HIGH_LOCATION e0 :0.96) (^ (upperincome-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (achilles-nn e0 x0) (heel-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (alive-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (anus-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (arm-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (armpit-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (back-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (backbone-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (blink-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (blink-vb e0 u0 s1 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (body-nn e0 x0) (dead-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (body-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (brain-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (down-in e0 x0 x1) (hand-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (embodiment-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (embrace-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (embrace-vb e0 x0 u0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (exercise-vb e0 u0 x0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (eye-nn e0 x0) (keep-vb e0 x0 x1 u0) (on-in e1 e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (eye-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyeball-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (face-nn e0 x0) (lift-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (footdragging-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (gene-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (grasp-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (grasp-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (grip-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (hand-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (hand-vb e0 u0 x0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (handsoff-nn e0 x0) (of-in e0 x0 x1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (head-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (headon-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (heads-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (heart-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (hold-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (into-in e0 x0 x1) (muscle-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (lady-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (localbody-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (look-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (man-nn e0 x0) (white-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (manipulate-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (manipulate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (manipulate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (manipulated-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (muscle-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (of-in e0 x0 x1) (profile-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (out-rb e1 e0) (reach-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (profile-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (racial-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (reach-vb e0 x0 u0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (see-vb e0 u0 x0 u1))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (see-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (sing-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (skin-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (stand-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (stomach-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (strength-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (strongarm-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (strongarm-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (strongarmed-adj s2 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (view-vb e0 x0 x1 u0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (voice-nn e0 x0))))
(B (name x) (=> (S#HUMAN_BODY e0 :0.96) (^ (weakening-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (change-nn e0 x0 x1 x2) (course-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (destination-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (embark-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (journey-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (mission-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (out-rb e1 e0) (set-vb e0 x0 x1 u0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (pilgrimage-nn e0 x0))))
(B (name x) (=> (S#JOURNEY e0 :0.96) (^ (traverse-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (authorize-vb s2 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (boss-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (choreograph-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (control-vb e0 u0 s1 u1))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (controlled-adj s2 s1))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (czar-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (direction-nn e0 x0) (stage-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (indulgent-adj s2 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (intention-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (king-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (leader-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (management-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (over-rb e1 e0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (position-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (queen-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (representative-nn e0 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (sovereign-adj s2 x0))))
(B (name x) (=> (S#LEADER e0 :0.96) (^ (vision-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (age-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (alive-adj s3 x0) (come-vb e0 x0 x1 u0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (baby-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (begin-vb e0 s1 u0 u1))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (begin-vb e0 x0 u0 u1))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (beginning-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (birth-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (birthplace-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (chronology-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (dead-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (death-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (embryonic-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (end-vb e0 x0 u0 u1))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (end-vb e0 x0 x1 u0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (existence-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (experience-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (fate-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (feeble-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (fullfledged-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (immature-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (in-in e0 x0 x1) (phase-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (infant-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (life-nn e0 x0) (of-in e0 x0 x1) (way-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (life-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (maturation-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (maturity-nn e0 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (modern-adj s2 x0))))
(B (name x) (=> (S#LIFE_STAGE e0 :0.96) (^ (regress-vb e0 u0 x0 u1))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (aurora-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (beacon-nn e0 x0) (congress-nn e0 s1))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (beacon-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (brighten-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (brilliance-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (candle-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (dawn-adj e0 s2))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (dawn-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (dazzle-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (dimmed-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (emanate-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (flash-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (flash-vb e0 x0 u0 u1))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (flashed-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (focus-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (glare-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (gleam-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (glisten-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (glow-adj e0 s2))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (glow-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (highlight-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (highlighted-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (highlighting-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (ignite-adj x0 u0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (illuminate-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (illumination-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (image-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (lamp-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (like-in e0 x0 x1) (look-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (limelight-adj e0 s2))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (limelight-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (limelight-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (luminous-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (moon-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (propagate-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (reflect-vb e0 x0 x1 u0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (reflection-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (reflective-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (shine-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (shine-vb e0 x0 u0 u1))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (shine-vb e1 x0 e0 u0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (shootingstar-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (splendor-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (spotlight-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (star-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (sun-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (sunlight-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (sunny-adj s2 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (sunshine-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (transmission-nn e0 x0))))
(B (name x) (=> (S#LIGHT e0 :0.96) (^ (transparency-nn e0 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (base-nn e0 x0) (line-nn e0 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (baseline-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (bedrock-nn e0 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-adj s2 x0) (line-nn e0 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-nn e0 x0) (rock-nn e0 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (level-nn e0 x0) (low-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (level-nn e0 x0) (lowest-adj e0 x0 x1))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (low-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (low-nn e0 x0) (of-in e0 x0 x1))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (lowest-adj e0 x0 x1))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (minimum-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (shallow-adj s2 x0))))
(B (name x) (=> (S#LOW_LOCATION e0 :0.96) (^ (wellgrounded-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (adjust-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (adjust-vb s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (adjusted-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (alignment-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (apparatus-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (bulldozer-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (calibration-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (circuit-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (clock-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (cog-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (connect-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (enable-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (engine-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (facilitate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (fix-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (flawed-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (function-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (function-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (function-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (functional-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (furnace-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (gauge-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (gear-nn e0 x0) (up-in e0 x0 x1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (generator-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (grease-nn e0 x0) (wheel-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (grease-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (greasy-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (hack-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (instrument-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (interconnect-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (interconnect-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (keyboard-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lawn-nn e0 x0) (mower-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lever-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lever-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (light-adj s2 x0) (switch-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (link-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (linkage-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (links-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lubricant-adj e0 s2))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lubricant-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lubricant-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (lubricate-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (machine-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (maintenance-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (mechanic-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (mechanical-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (mechanism-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (mechanistic-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (mouthpiece-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (oil-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (operate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (operation-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (overhaul-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (pump-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (regulator-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (repair-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (rocket-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (run-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (scale-nn e0 x0 x1 u0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (screw-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (system-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (systematize-adj s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (systems-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (tighten-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (tighten-vb s2 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (tweak-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (vote-nn e0 x0))))
(B (name x) (=> (S#MACHINE e0 :0.96) (^ (work-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (bureaucratic-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (chaos-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (confuse-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (contort-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (enmeshment-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (ensnare-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (ensnared-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (entangle-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (entangled-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (entanglement-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (find-vb e0 x0 x1 u0) (out-in e0 x0 x1) (way-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (intertwine-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (knot-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (knot-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (labyrinth-adj s2 s1))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (labyrinth-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (labyrinth-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (labyrinthine-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (labyrinthine-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (map-nn e0 x0) (road-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (maze-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (maze-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (misguided-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (morass-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (muddle-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (navigate-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (navigate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (navigation-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (negotiate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (network-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (red-adj s2 s1) (tape-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (red-adj s2 x0) (tape-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (snag-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (snarl-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (snarled-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (tangle-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (tangled-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (twist-nn e0 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (web-adj s2 x0))))
(B (name x) (=> (S#MAZE e0 :0.96) (^ (web-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (anesthetize-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (antiseptic-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (astringent-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (curing-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (dose-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (drip-nn e0 x0) (intravenous-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (heal-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (inject-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (inject-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (inject-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (injected-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (injection-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (intravenous-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (medicate-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (pill-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (prescribed-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (prescription-nn e0 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (sideeffect-adj s2 x0))))
(B (name x) (=> (S#MEDICINE e0 :0.96) (^ (treatment-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (alien-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (blood-nn e0 x0) (suck-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (clutch-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (demonize-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (demonize-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (demonize-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (demonized-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (dwarf-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (evil-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (evil-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (fairy-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (frankenstein-nn e0 x0) (monster-adj s3 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (frankenstein-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (frankensteins-nn e0 x0) (monster-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (godzilla-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (havoc-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (horror-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (malefic-adj s2 s1))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (malefic-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (mayhem-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (monster-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (monstrous-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (ogre-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (possessed-adj s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (specter-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (terrorize-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (terrorize-vb s2 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (troll-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (vampire-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (vampire-rb e0 s2))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (wreak-nn e0 x0))))
(B (name x) (=> (S#MONSTER e0 :0.96) (^ (wreak-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (commitment-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (duty-nn e0 x0) (moral-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (duty-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (ethic-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (financial-adj s2 x0) (obligation-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (for-in e0 s2 x0) (responsible-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (moral-adj s2 x0) (obligation-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (norm-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligatory-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (oblige-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (oblige-vb e0 u0 x1 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (obliged-adj s2 s1))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (obliged-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (onus-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (owe-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (principle-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (remit-adj s2 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (value-nn e0 x0))))
(B (name x) (=> (S#MORAL_DUTY e0 :0.96) (^ (virtue-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (action-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (ahead-rb e1 e0) (move-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (alter-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (animate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (approach-nn e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (approach-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (avoid-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (avoid-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (away-rb e1 e0) (go-vb e0 x0 s5 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (bring-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (bypass-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (carry-vb e0 x0 x1 u0) (out-rb e1 e0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (carry-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (churn-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (churning-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 u0 u1) (in-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 u0 u1) (out-rb e1 e0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 u0 u1) (to-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 x1 u0) (out-rb e1 e0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (conversion-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (dance-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (direction-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (entry-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (evade-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (everchange-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (expand-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (expansion-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (flip-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (flurry-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (follow-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (followed-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (follows-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (forthcoming-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (further-adj s3 x0) (go-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u0 u1) (in-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u0 u1) (motion-nn e0 x0) (through-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u0 u1) (to-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u1 u0) (to-in e1 e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb e0 x0 x1 u0) (long-adj s3 x0) (way-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb s2 x0) (to-in e0 s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (home-nn e0 x0) (leaf-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (income-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (interchangeable-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (introduce-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (introduction-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (maneuvered-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (migrate-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (migrating-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (mobilize-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (move-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (move-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (move-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (movement-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (moving-nn e0 x0) (slow-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (off-rb s6 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (offset-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (on-in e0 s2 x0) (transition-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (out-rb e1 e0) (spread-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (over-in e1 e0 x0) (skip-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (perform-vb s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (period-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (pick-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (push-nn e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (replace-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (rightturn-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (roll-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (rotation-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (separate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (slowmove-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (smooth-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (spinning-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (spiral-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (spiraled-adj s2 x0) (upward-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (spread-nn e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stay-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stay-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stirred-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stirring-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stop-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stratification-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (stretch-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (supersede-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (sway-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (swept-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (swept-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (swing-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (swing-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (tilt-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (tilted-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (tip-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (tip-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (tipped-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (trajectory-adj s2 s1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (trajectory-adj s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transform-vb e0 u0 x0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transform-vb e0 x0 u0 u1))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transform-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transform-vb s2 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transformation-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (transition-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (turn-nn e0 x0 e1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (turn-vb e0 u0 x1 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (turn-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (walk-vb e0 x0 x1 u0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (walks-nn e0 x0))))
(B (name x) (=> (S#MOVEMENT e0 :0.96) (^ (zigzag-vb e0 x0 x1 u0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (avalanche-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (cataclysm-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (catastrophe-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (create-vb e0 u0 x0 u1) (haven-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (cyclone-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (destruction-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (destructiveness-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (devastating-adj s2 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (devastation-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (disaster-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (disastrous-adj s2 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (drizzle-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (erupt-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (erupt-vb e0 u0 x0 u1))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (fog-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (gust-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (hurricane-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (ice-nn e0 x0) (storm-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (landslide-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (lightning-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (natural-adj s2 x0) (phenomenon-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (protect-vb e0 x0 x1 u0) (shelter-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (rain-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (sheltered-adj s2 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (spew-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (starve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (storm-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (stormed-adj s2 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (stormy-adj s2 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (surge-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (thunder-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tornado-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tragedy-nn e0 x0))))
(B (name x) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (wind-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (binge-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (bloat-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (bloated-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (bulk-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (corpulence-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (fat-adj e0 s2))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (fat-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (fatten-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (fatten-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (fatten-vb e0 x0 u0 u1))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (gain-nn e0 x0) (in-in e0 x0 x1))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (gain-vb e0 x0 s5 u0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (gluttonous-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (gluttony-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (gluttony-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (grant-vb e0 x0 u0 u1))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (implication-nn e0 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (insatiable-adj s2 s1))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (marked-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (obese-adj s2 x0))))
(B (name x) (=> (S#OBESITY e0 :0.96) (^ (obesity-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (bloodsuck-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (fungus-adj s2 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (infest-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (infested-adj s2 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (leech-nn e0 x0) (off-in e0 x0 x1))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (leech-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (leech-vb e0 x0 x1 u0) (off-rb e1 e0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (lifesucking-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (of-in e0 s2 x0) (off-in s2 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (parasite-adj e0 s2))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (parasite-adj s2 x0) (party-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (parasite-adj s2 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (parasite-nn e0 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (parasitic-adj s2 x0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (suck-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#PARASITE e0 :0.96) (^ (tapeworm-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (alley-nn e0 x0) (blind-adj s2 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (alley-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (avenue-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (belgian-adj s4 x0) (blog-nn e0 x0) (election-nn e0 x0) (in-in e0 x0 x1) (of-in e0 x0 x1) (of-in e0 x1 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (blockade-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (bridge-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (bridge-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (broad-adj s2 x0) (highway-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (clear-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (fast-rb s2 x0) (lane-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (gate-nn e0 x0) (toll-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (high-adj s2 x0) (road-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (highway-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (lockdown-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (mislead-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (obstruct-adj s2 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (obstruct-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (on-in e0 s1 x0) (road-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (open-adj s2 x0) (road-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (paper-nn e0 x0) (trail-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (pass-vb e0 u0 s1 u1))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (path-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (record-nn e0 x0) (track-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (road-nn e0 s1) (to-in e0 s1 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (road-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (track-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (trail-nn e0 x0))))
(B (name x) (=> (S#PATHWAY e0 :0.96) (^ (unimpeded-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (add-vb e0 u0 s1 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (backed-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (baggage-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-nn e0 x0) (bureaucracy-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burdens-in e0 x0 x1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (bury-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (carry-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (counterweight-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (deadweight-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (down-rb e1 e0) (weigh-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (down-rb s6 x0) (weigh-vb e0 x0 e1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (ease-nn e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (ease-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (encumber-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (encumbrance-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (endure-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (hardpressed-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (heaviness-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (heavy-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (impose-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (impose-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (impose-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (imposition-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (lighten-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (load-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (minimization-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (off-rb e1 e0) (shake-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (off-rb e1 e0) (throw-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pile-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (press-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressing-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressure-nn e0 x0) (relieve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressure-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (red-adj s3 x0) (reduce-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reduce-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reliefreduction-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieve-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieve-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieved-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (soulcrushing-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (strain-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (stress-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (unsustainable-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (unwieldy-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weigh-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weight-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weighty-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (yoke-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abuse-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abuse-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (affected-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (beaten-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (blinded-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (break-nn e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (break-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (bully-vb e0 u0 s1 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (care-nn e0 x0) (take-vb s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (compromised-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crack-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cut-vb e0 s1 u1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (damage-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (danger-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (dangerous-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroy-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroyer-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (devastate-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (disintegrated-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (dismembered-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (dismemberment-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (eradicate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (erode-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (erode-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (exacerbate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (exposure-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flatten-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flatten-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (fragile-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (fragment-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (gouge-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (grind-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hamstring-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hamstrung-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hardest-adj e0 x0 x1) (strike-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (harm-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (harmed-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (harmful-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hit-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hit-vb s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-nn e0 s1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-nn e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (impair-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (jeopardize-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (killing-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (knee-nn e0 x0) (to-in e0 e1 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (maim-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (maimed-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (menace-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (overwhelmed-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (pinch-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (poison-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (preserve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (punch-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (ransack-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (restrain-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (risk-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (risky-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (rupture-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (ruptured-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (rust-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (sabotage-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (save-in e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (sever-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shred-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shredded-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (slap-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (slash-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (split-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (squeeze-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (stab-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (stifle-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (stifle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (strangle-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (strike-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (target-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (threaten-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (threatened-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (village-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (wound-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (wound-vb e0 u1 s1 u0))))
(B (name x) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (wrack-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (archipelago-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (area-nn e0 x0) (populated-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (area-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (arrival-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (away-rb e0 x0) (draw-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (boundary-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (boundary-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (bypass-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (centreright-adj s2 s1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (centreright-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (community-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (cross-vb e0 u0 s1 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (departure-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (district-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (drag-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (edge-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exit-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exit-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exodus-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (explore-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (fringe-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (fringe-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (global-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-in e1 e0 x0) (live-adj e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (inhabit-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (inhabit-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (into-in e0 x0 x1) (move-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (into-in e1 e0 x0) (move-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (into-nn e0 x0) (slip-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (intrusion-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (landscape-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (left-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (live-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (map-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (map-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (neighborhood-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (out-rb e1 e0) (push-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (outskirts-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (pathways-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (place-nn e0 x0 e1 u0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (place-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (place-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (plat-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (realm-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (region-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (regional-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (removal-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (remove-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (reside-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (return-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (return-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (revisited-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (run-nn e0 x0 x1 u0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (school-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (separation-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (set-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (sit-vb e0 s1 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (site-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (stand-vb e0 x0 s5 u0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (suburb-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (surround-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (universal-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (walk-nn e0 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (wide-adj s2 x0))))
(B (name x) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (wonderland-rb e0 s2))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (bear-nn e0 x0) (fruit-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (bloom-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (blossom-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (bore-nn e0 x0) (fruit-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (bore-rb e0 s2))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (branch-nn e0 x0) (executive-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (branch-nn e0 x0) (legislative-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (branch-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (bud-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (coconut-nn e0 x0) (tree-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (decay-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (desiccation-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (dormant-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (flourish-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (flourished-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (flower-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (flower-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (fruit-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (germination-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (graft-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (hybrid-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (languish-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (out-rb e1 e0) (weed-vb e0 u0 x1 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (out-rb e1 e0) (weed-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (perennial-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (prune-adj s2 s1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (prune-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (prune-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (prune-vb e0 x0 s5 u0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (recessionwithered-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (ripened-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0) (take-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (shriveled-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (sprout-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (thorn-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (thorn-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (tree-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (trim-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (trim-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (unpicked-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (vine-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (weed-adj s2 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (weed-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (weed-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (wilt-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (wither-nn e0 x0))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (wither-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PLANT e0 :0.96) (^ (withers-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (access-nn e0 x0) (s-vb e0 x0 s5 u0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (access-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (access-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (accessibility-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (close-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (close-rb s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (close-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (closed-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (open-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (revolving-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (doorway-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (enter-vb e0 x0 u0 u1) (through-in e1 e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (enter-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (exclude-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (expose-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (gate-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (gateway-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-adj s2 s1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-vb e0 x0 s5 u0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-vb e0 x0 x1 u0) (up-rb e1 e0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (open-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (portal-adj s2 s1))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (portal-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (portal-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (portcullis-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (reopen-vb s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (revolvingdoor-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (slam-nn e0 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (turnstile-adj e0 s2))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (unlock-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (unlocked-adj s2 x0))))
(B (name x) (=> (S#PORTAL e0 :0.96) (^ (way-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (bastion-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (buffered-adj s2 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (bulwark-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (crusader-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (cushion-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (defender-vb e0 x0 x1 u0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (guarantee-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (guarateed-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (guardian-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (haven-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (insurance-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (off-in e0 x0 x1) (ward-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (pillow-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (preservation-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (prevent-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (pro-adj s2 x0) (tection-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (proof-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (protect-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (protect-vb e0 s1 u0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (protect-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (protect-vb e0 x0 u0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (protected-adj s2 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (refuge-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (rock-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (safeguard-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (safeguard-rb x0 u0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (save-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (save-vb e0 u0 x0 u1))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (savior-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (secure-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (security-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (shield-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (shields-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (survive-vb s2 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (umbrella-nn e0 x0))))
(B (name x) (=> (S#PROTECTION e0 :0.96) (^ (veneer-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (abound-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (absorb-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (abundance-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (abundance-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (accumulate-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (accumulation-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (acquire-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (acquire-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (acquisition-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (allocate-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (allocate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (allotted-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (amass-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (amass-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (asset-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (assign-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (away-rb e1 e0) (throw-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (buy-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (buying-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (collecting-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (concentrated-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (concentration-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (contribute-vb e0 x0 s5 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (critical-adj s2 x0) (mass-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deliver-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deliver-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (delivery-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deny-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deplete-adj s2 s1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deplete-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (deplete-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (depleted-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (depletion-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (develop-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (develop-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (developed-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (development-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (dig-vb e0 x0 u0 u1) (for-in e1 e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (dilute-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (dilute-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (disbursement-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (disperse-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (distill-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (distillation-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (distribution-nn e0 x0) (equitable-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (distribution-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (distributive-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (divide-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (double-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (drill-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (element-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (enormous-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (entrusted-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (equal-adj s2 x0) (to-in e0 s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (exchange-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (exhaust-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (expensive-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (exploit-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (exploitation-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (extend-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (foster-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (gain-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (gold-nn e0 x0) (mine-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (heaping-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (highvolume-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (in-in s4 x0) (mining-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (inequality-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (inherit-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (itemize-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (large-adj s2 s1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (lots-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (lump-adj s2 x0) (sum-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (magnitude-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (mass-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (mass-rb e0 s2))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (massive-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (mine-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (mine-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (modicum-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (multiple-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (multiplicity-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (number-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (onequarter-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (overestimation-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (partition-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (piece-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (portion-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (possession-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (pound-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (proportion-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (proportioned-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (prospects-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (quantity-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (rare-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (rate-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (reallocate-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (receive-vb e0 u0 x0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (receive-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (redistribute-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (redistribute-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (redistribution-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (refine-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (refined-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (refinement-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (resource-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (scatter-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (scatter-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (segment-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (sell-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (series-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (share-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (shift-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (shrink-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (shrink-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (single-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (size-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (small-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (source-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (squander-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (substance-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (supply-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (surplus-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (ton-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (transfer-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (transference-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (treasure-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (treasure-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (unequal-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (unit-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (unlimited-adj s2 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (volume-nn e0 x0))))
(B (name x) (=> (S#RESOURCE e0 :0.96) (^ (wield-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (catch-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (condemn-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (conduct-nn e0 x0 x1 u0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (damned-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (enforced-adj s2 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (enforcement-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (enforcer-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (forbid-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (mandate-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (monitor-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (override-vb e0 x0 u0 u1))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (penalize-nn e0 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (prohibit-vb e0 x0 x1 u0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (regulated-adj s2 x0))))
(B (name x) (=> (S#RULE_ENFORCER e0 :0.96) (^ (suspended-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (analysis-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (analyze-vb s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (atmosphere-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (balance-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (basic-adj s2 x0) (principle-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (calculated-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (calculus-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (calculus-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (chemistry-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (demonstrate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (economic-adj s2 x0) (theory-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (equation-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (examination-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (examine-vb e0 x0 x1 u0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (experiment-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (experiment-vb e0 u0 x0 u1))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (experimental-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (experimentation-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (find-vb e0 x0 x1 u0) (out-rb e1 e0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (forcast-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (forecast-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (forecast-vb e0 x0 u0 u1))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (formulate-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (formulate-vb e0 u0 s1 u1))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (genetic-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (geometry-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (hypothesize-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (invention-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (laboratory-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (measured-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (measuring-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (method-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (pathology-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (season-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (sociology-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (study-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (theoretical-adj s2 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (theorize-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (theory-nn e0 x0))))
(B (name x) (=> (S#SCIENCE e0 :0.96) (^ (titration-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (accomplish-vb e0 x0 x1 u0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (assist-vb e0 x0 x1 u0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (caretaker-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (civil-adj s2 x0) (servant-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (compliance-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (for-in e0 s1 x0) (works-nn e0 s1))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (genie-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (menially-rb e0 s2))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (selfserve-vb e0 x0 u0 u1))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (servant-adj s2 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (servant-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (serves-nn e0 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (servile-adj s2 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (steward-adj s2 x0))))
(B (name x) (=> (S#SERVANT e0 :0.96) (^ (submission-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (activist-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (adversary-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (advocate-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (against-in e0 x0 x1) (fight-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (agreement-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (allied-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (answer-nn e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (arbitration-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (argue-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (argument-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (argumentative-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (assert-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (compromise-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (concede-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (conflict-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (conquer-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (consequence-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (consequences-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (contend-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (controversial-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (damages-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defamation-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-vb e0 u0 x0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defeated-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defence-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defend-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defend-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (defy-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (discouragement-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (enemy-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (feud-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (fight-nn e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (fight-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (fight-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (foe-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (gain-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (harmonize-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (issue-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (oppose-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (overcame-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (overcome-vb e0 u0 x0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (overcome-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (overthrow-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (polarize-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (problem-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (protest-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (protested-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (pursuit-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (rank-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (reconcile-vb e0 u0 x0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (resist-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (resist-vb e0 u0 x0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (resist-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (resist-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (roughandtumble-adj s2 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (row-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (solution-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (solve-vb e0 x0 x1 u0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (stand-nn e0 x0) (up-in s3 s1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (stand-vb e0 x0 u0 u1) (up-in e1 e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (struggle-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (struggle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (surrender-nn e0 x0))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (tackle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#STRUGGLE e0 :0.96) (^ (victorious-adj s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (chilling-adj s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (chilly-rb s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (climate-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (coldness-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (cooling-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (freeze-vb e0 x0 u0 u1))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (frigid-adj s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (frosty-adj s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (frozen-adj s2 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (melt-vb e0 x0 x1 u0) (off-rb e1 e0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (scalding-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (temperature-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (thaw-rb e0 s2))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (thermometer-nn e0 x0))))
(B (name x) (=> (S#TEMPERATURE e0 :0.96) (^ (torrid-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (bilk-vb e0 u0 x0 u1))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (burglar-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (cheat-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (defraud-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (embezzle-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (extort-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (extorted-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (extortion-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (from-in e0 x0 x1) (steal-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (larcenous-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (larceny-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (nab-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (people-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (piracy-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (plundered-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (rob-vb e0 u0 x0 u1))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (robbery-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (steal-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (steal-vb e0 x0 u0 u1))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (steal-vb s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (stealing-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (stole-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (stole-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (stolen-adj s2 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (theft-nn e0 x0))))
(B (name x) (=> (S#THEFT e0 :0.96) (^ (thief-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascend-nn e0 x0) (from-in e0 x0 x1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascend-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascended-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascent-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (augmented-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (boost-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (climb-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (climb-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (elevate-vb e0 u0 s1 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (emerge-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (escalate-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (escalation-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u0 u1) (up-rb e1 e0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (go-vb e0 x0 u1 u0) (up-in e1 e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hiking-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0) (increase-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (in-in e0 x0 x1) (increase-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (income-nn e0 x0) (increase-nn e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (income-nn e0 x0) (increase-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (income-nn e0 x0) (increased-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 u0 x0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increment-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jack-nn e0 x0) (up-in e0 x0 x1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jack-vb e0 u0 x0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jump-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jump-vb e0 x0 u1 u0) (to-in e1 e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jump-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ladder-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (mobility-nn e0 x0) (upward-rb s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raises-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (reach-vb e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-nn e0 x0 x1 u0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-vb e0 u0 x0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rocket-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (skyrocket-vb e0 x0 u0 u1))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (skyrocketed-adj s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (soar-nn e0 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (soar-vb s2 x0))))
(B (name x) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (upsurge-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (accelerate-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (accelerate-vb e0 u0 x0 u1))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (accelerate-vb e0 x0 x1 u0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (ballast-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (brake-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (commandeered-adj s2 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (drive-vb e0 x0 u0 u1))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (driver-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (helm-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (manoeuvre-vb e0 x0 s5 u0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (sail-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (scuttle-vb e0 x0 x1 u0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (steer-nn e0 x0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (steer-vb e0 x0 x1 u0))))
(B (name x) (=> (S#VEHICLE e0 :0.96) (^ (wake-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (act-nn e0 x0) (of-in e0 x0 x1) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (ambush-adj e0 s2))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (ambush-adj s2 s1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (ambush-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (ambushed-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (arrow-rb e0 s2))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (artillery-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (attack-vb e0 u0 x0 s5))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (attack-vb e0 x0 u0 u1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (barrel-nn e0 x0) (gun-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (bat-vb e0 x0 u0 u1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (battle-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (battle-vb e0 x0 u0 u1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (battleground-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (battleground-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (blitzkrieg-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (bludgeon-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (bomb-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (brandish-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (bullet-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (civil-adj s2 x0) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (cold-adj s2 x0) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (combat-vb e0 x0 u0 u1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (infiltrated-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (invade-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (invasion-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (launching-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (onslaught-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (raid-vb e0 x0 u0 u1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (rankandfile-adj s2 s1))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (rebellion-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (revolution-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (revolutionary-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (revolutionary-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (target-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (torpedo-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (torpedoed-adj s2 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (victor-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (wage-nn e0 x0) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (wage-vb e0 x0 u0 u1) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (wages-nn e0 x0) (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (war-nn e0 x0))))
(B (name x) (=> (S#WAR e0 :0.96) (^ (weapon-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (accountability-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (act-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-nn e0 x0) (transfer-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrative-adj s5 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrator-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (agency-nn e0 x0) (generate-vb e0 x0 x1 u0) (government-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (agency-nn e0 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (army-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (authority-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (board-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (body-nn e0 x0) (govern-vb e0 x0 x1 u0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (body-nn e0 x0) (governing-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (burden-nn e0 x0) (bureaucracy-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureau-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucracy-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucracy-nn e0 x0) (race-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucracy-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucrat-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj s2 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj s3 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj s4 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj s5 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (check-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (civil-adj s3 x0) (servant-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (civil-adj s3 x0) (service-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (commission-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (committee-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (counterpart-nn e0 x0) (john-nn e0 x0) (kerry-nn e0 x0) (lavrov-nn e0 x0) (russian-adj s8 x0) (sergey-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (department-nn e0 s1) (treasury-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (department-nn e0 x0) (fire-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (department-nn e0 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomacy-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj s2 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj s3 x0) (resolution-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj s3 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj s5 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (elect-vb e0 u0 x0 u1) (of-in e0 x0 x1) (official-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (elect-vb e0 u0 x0 u1) (official-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (establishment-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (exploration-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (fed-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (force-nn e0 x0) (police-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (g-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (government-nn e0 x0) (of-in e0 x0 x1) (official-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (government-nn e0 x0) (policy-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (government-nn e0 x0) (regulation-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (imf-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (impose-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (institution-nn e0 x0) (public-adj s3 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (investigation-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (leadership-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legalbureaucratic-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legality-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (managerial-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (municipal-nn e0 x0 u0 u1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (nonregulation-nn e0 x0) (on-in e1 e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (obamacare-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (of-in e0 s1 x0) (office-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (of-in e0 x0 x1) (official-nn e0 x0) (us-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (of-in e0 x0 x1) (official-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (of-in e0 x0 x1) (officialdom-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officer-nn e0 x0) (preside-vb e0 x0 x1 u0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officer-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (official-nn e0 x0) (us-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (official-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officialdom-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (ordinance-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (policymaking-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-adj s3 x0) (sector-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-adj s3 x0) (service-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-nn e0 x0) (sector-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-nn e0 x0) (service-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-adj s3 x0) (reduce-vb e0 x0 x1 u0) (tape-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-adj s3 x0) (tape-nn e0 x0 u0 u1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-adj s3 x0) (tape-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-nn e0 x0) (tape-nn e0 s1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (redtape-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (redtape-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulate-vb e0 u0 x0 u1))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (selfregulation-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (service-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (sheriff-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (statute-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (supervisory-nn e0 x0))))
(B (name x) (=> (TS#BUREAUCRACY e0 :0.96) (^ (terrorize-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj s3 x0) (liberty-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj s3 x0) (right-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj s3 x0) (rights-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-nn e0 x0) (liberties-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-nn e0 x0) (rights-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (common-adj s3 x0) (man-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (cradle-nn e0 x0) (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (cradle-nn e0 x0) (democratic-adj s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (crash-nn e0 x0) (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (crave-adj s2 x0) (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (crave-nn e0 x0) (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (demigod-nn e0 x0) (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (direct-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (direct-adj s4 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (liberal-adj s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (liberal-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (raced-adj s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (racial-adj s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (representative-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (representative-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (representative-vb e0 x0 x1 u0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (social-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracywise-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrat-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrat-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrat-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s3 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s3 x0) (process-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s4 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj s6 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrats-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (directdemocracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (due-adj s3 x0) (process-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (due-adj s4 x0) (process-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (enterprise-nn e0 x0) (free-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (entrusted-adj s2 x0) (selfgovernment-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (equality-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (ersatzdemocracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (free-adj s3 x0) (market-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (freedom-nn e0 x0) (of-in e0 x0 x1) (religion-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (freedom-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (government-nn e0 x0) (representative-adj s3 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (government-nn e0 x0) (representative-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-adj s3 x0) (right-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-adj s3 x0) (rights-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-nn e0 x0) (rights-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-nn e0 x0) (rights-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (majority-nn e0 x0) (rule-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (minority-nn e0 x0) (rights-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (of-in e1 e0 x0) (people-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (prodemocracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (protest-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (reinforce-nn e0 x0) (sovereignty-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (representative-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (republic-nn e0 s1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (republic-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (revolutionary-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-adj s4 x0) (vote-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-nn e0 x0) (vote-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-rb s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (selfgovern-vb s2 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (selfgovernance-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (selfgovernment-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (selfrule-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (socialdemocracy-nn e0 x0))))
(B (name x) (=> (TS#DEMOCRACY e0 :0.96) (^ (socialdemocratic-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-nn e0 x0) (box-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-nn e0 x0) (secret-adj s2 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-nn e0 x0) (secret-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-nn e0 x0) (secret-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (election-nn e0 x0) (general-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (election-nn e0 x0) (presidential-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (election-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (political-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (specialelection-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (campaigning-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (candidacy-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (candidate-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (challenger-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (college-electoral-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (college-nn e0 s1) (electoral-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (college-nn e0 x0) (electoral-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (college-nn e0 x0) (electoral-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (convention-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (delegate-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (democrats-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (elect-vb e0 u0 x0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (free-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (of-in e0 x0 x1) (official-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (presidential-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (presidential-adj s4 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (presidential-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (recount-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (result-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (state-nn e0 x0) (system-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (system-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (system-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (elections-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (elector-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (electoral-adj s4 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (electorate-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (for-in e0 x0 x1) (vote-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (for-in e0 x0 x1) (vote-nn s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (for-in e1 e0 x0) (right-nn e0 x0) (vote-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (framework-adj s2 x0) (suffrage-nn e0 x0) (universal-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (generalelection-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (in-in s4 x0) (vote-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (incumbent-adj s2 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (parasite-adj s2 x0) (party-nn e0 x0) (republican-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (party-nn e0 x0) (platform-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (party-nn e0 x0) (political-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (platform-nn e0 x0) (political-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (politicking-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (poll-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (poroshenko-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (postelection-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (preelection-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (presidential-adj s3 x0) (primary-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (primaries-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (primary-nn e0 x0) (republican-adj s3 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (primary-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (register-vb e0 x0 x1 u0) (voter-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (registered-adj s3 x0) (voter-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (republicans-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (result-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (right-rb s5 x0) (vote-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (romney-mitt-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (vote-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (vote-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (voter-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (voting-nn e0 s1))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (voting-nn e0 x0))))
(B (name x) (=> (TS#ELECTIONS e0 :0.96) (^ (writein-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (10th-adj s7 x0) (amendment-nn e0 x0) (bill-nn e0 x0) (by-in e1 e0) (constitution-nn e0 x0) (delegate-vb e0 x1 x0 u0) (of-in e0 s1 x0) (page-nn e0 x0) (power-nn e0 x0) (prohibit-vb e0 u0 x0 u1) (prohibit-vb e0 x0 x07 u0) (read-vb e0 x1 x0 u0) (rights-nn e0 x0) (s6136-nn e0 s1) (states-nn e0 x0) (to-in e1 e0 x0) (united-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (antigovernment-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (authoritarian-adj s3 x0) (regime-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (british-nn e0 x0) (empire-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (china-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (china-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (citizenship-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (city-nn e0 x0) (council-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (city-nn e0 x0) (councils-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (city-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (code-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (communism-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congress-nn e0 s1) (convuls-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congress-nn e0 s1) (us-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congress-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congress-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congressional-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (congressman-nn e0 x0) (grease-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitution-nn e0 s1) (us-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitution-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitution-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitutional-adj s2 x0) (on-in e0 s2 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitutional-adj s2 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitutional-adj s4 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (constitutional-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (council-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (council-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (councilman-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (court-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (courthouse-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (democratic-nn e0 x0) (party-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (despotic-adj s2 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (dictatorship-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (empire-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (enterprise-nn e0 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (entrance-nn e0 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (european-nn e0 x0) (union-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (european-nn e0 x0) (union-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (fascist-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (federal-adj s3 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (federal-nn e0 x0) (government-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (federal-nn e0 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (federation-nn e0 s1) (russian-adj s3 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (go-vb s2 x0) (government-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (gop-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (govern-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governance-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 s1) (state-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (local-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (menace-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (new-adj s4 x0) (ukraine-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (over-in e1 e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (over-rb e1 e0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (overdose-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (overthrow-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (state-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (states-nn e0 x0) (united-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (us-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governmental-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governmental-adj s4 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governmental-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governmentalpolitical-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governmenttogovernment-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (governor-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (house-nn e0 s1) (of-in e0 s1 x0) (representatives-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (house-nn e0 x0) (of-in e0 x0 x1) (representatives-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (in-in e0 x0 x1) (lawmaking-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (incumbent-adj e1 e0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (judiciary-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (jurisdiction-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (justice-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (kerry-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (kremlin-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (landscape-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (law-nn e0 x0) (martial-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (lawmaker-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (lawmaking-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (leader-nn e0 s1) (majority-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (leader-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (legislator-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (legislature-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (legislature-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (legislature-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (maoism-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (mccain-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (minister-nn e0 s1) (prime-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (minister-nn e0 x0) (prime-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (monarchy-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (moscow-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (moscow-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (nongovernment-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (nongovernmental-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (obama-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (obama-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (of-in e0 x0 x1) (sizeofgovernment-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (parliament-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (parliament-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (political-adj s3 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (politics-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (presidency-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (president-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (putin-nn e0 s1) (vladimir-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (putin-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (reagan-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (regime-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (republican-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (republican-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (republicans-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (run-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (russia-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (russia-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (russia-nn s5 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (russian-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senate-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senate-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senate-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senator-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senator-nn e0 x0) (state-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (senator-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (soviet-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (soviet-nn e0 x0) (union-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (state-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (states-nn e0 s1) (united-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (states-nn e0 x0) (united-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (system-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (totalitarian-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (ukraine-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (ukraine-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (viktor-nn e0 x0) (yanukovych-nn e0 s1))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (wholeofgovernment-nn e0 x0))))
(B (name x) (=> (TS#GOVERNMENT e0 :0.96) (^ (yanukovych-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (americans-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (antipoverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (author-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (be-vb e0 x0) (poor-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (beggar-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (beggars-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (being-nn e0 x0) (poor-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (chronicpoverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (community-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (destitution-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (highpoverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (highpoverty-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (homeless-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (homelessness-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (homelessness-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (impoverish-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (impoverish-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (impoverishing-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (impoverishment-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (in-in e0 x0 x1) (lockedinpoverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (in-in e0 x0 x1) (poor-adj s5 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (indigent-adj s2 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (level-nn e0 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (line-nn e0 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (low-adj x0 u0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (on-in e1 e0 x0) (starvation-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overcame-adj s2 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overcome-vb e0 u0 x0 u1) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overcome-vb e0 x0 u0 u1) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overdose-adj s2 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overestimation-nn e0 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overshadow-nn e0 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (overwhelmed-adj s2 x0) (poverty-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (pauper-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (peasant-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (people-nn e0 x0) (poor-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (people-nn e0 x0) (poor-adj s4 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (people-nn e0 x0) (poor-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (people-nn e0 x0) (poorer-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj s2 x0) (very-rb e0 s2))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj s5 x0) (s-vb e0 x0 s5 u0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj s5 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poor-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poorer-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poorest-adj e0 s1 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poorest-adj s3 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0 u0 u1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (ranks-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (verge-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (povertyeducation-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (povertys-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (price-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (privation-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (problem-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (rate-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (relief-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (rise-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (scheme-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (stability-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (stare-nn e0 x0) (starvation-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (starvation-nn e0 x0))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (thepoor-nn e0 s1))))
(B (name x) (=> (TS#POVERTY e0 :0.96) (^ (want-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (accumulate-vb e0 u0 x0 u1) (earnings-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (add-vb e0 u0 x0 u1) (tax-nn e0 x0) (value-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (add-vb e0 x0 x1 u0) (tax-nn e0 x0) (value-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (aftertax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (antitax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (back-rb s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (benefit-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (benefit-vb e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (bracket-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (break-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (capital-nn e0 x0) (gain-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (capital-nn e0 x0) (gains-nn e0 x0) (taxes-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (carbon-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (collection-nn e0 x0) (property-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (collection-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (corporate-adj s2 x0) (corporate-adj s6 x0) (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (corporate-adj s3 x0) (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (corporate-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (credit-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (cut-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (death-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (debt-nn e0 s1) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (debt-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (debts-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (direct-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (duty-nn e0 x0) (export-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (duty-nn e0 x0) (import-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (estate-nn e0 x0) (real-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (estate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (evasion-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (exit-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (federal-adj s3 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (federal-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (form-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (gap-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (gasoline-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (gift-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (high-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0) (increase-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (increase-nn e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (personal-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (incometax-nn e0 x0) (rate-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (incometax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (inheritance-nn e0 x0) (tax-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (inheritance-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (internet-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (land-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (levy-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (liability-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (lien-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (lowtax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (mfn-nn e0 x0) (tariff-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (millage-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (nontariff-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (on-in e1 e0 x0) (taxation-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (pay-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (payroll-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (penalty-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (progressive-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (progressive-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (property-nn e0 x0) (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (property-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (property-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (protective-adj s3 x0) (tariff-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (rate-nn e0 x0) (sale-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (rebate-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (reform-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (refund-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (resource-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (revenue-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (sale-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (sales-adj s3 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (saletax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (section-nn e0 s1) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (story-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (system-nn e0 s1) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (system-nn e0 x0) (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (tariff-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (tariff-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (tariffs-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (tax-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (tax-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxation-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxation-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxcut-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxes-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxfree-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxman-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxpayer-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxpayers-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxpaying-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxrelief-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxslavery-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (taxwelfare-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (teacher-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (vat-nn e0 s1))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (vat-nn e0 x0))))
(B (name x) (=> (TS#TAXATION e0 :0.96) (^ (wall-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (accumulation-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (affluence-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (affluent-adj s3 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (affluent-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (aid-nn e0 x0) (financial-adj s3 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (asset-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (bourgeoisie-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (cash-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (community-nn e0 x0) (lowincome-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (cycle-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (debt-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (disparity-nn e0 s1) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (disposable-adj s3 x0) (income-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (do-vb e0 x0 x1 u0) (well-rb e1 e0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (education-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (family-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (fortune-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (fortune-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (fund-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0) (increase-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0) (inequality-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (in-in e0 x0 x1) (income-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (in-in e0 x0 x1) (inequality-nn e0 x0) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (in-in e0 x0 x1) (minimum-nn e0 x0) (wage-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (increase-vb e0 x0 u0 u1) (inequality-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (increase-vb e0 x0 u0 u1) (mobility-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (increase-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (increased-adj s2 x0) (inequality-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (inequality-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (inequality-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (inequality-nn e0 s1) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (inequality-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (inequality-nn e0 x0) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (inherit-vb e0 x0 x1 u0) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (man-nn e0 x0) (wealthy-adj s3 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (management-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (middleincome-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (millionaire-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wage-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wages-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (online-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (opulence-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (opulence-vb e0 x0 u0 u1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (people-nn e0 x0) (rich-adj s3 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (people-nn e0 x0) (wealthy-adj s4 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (people-nn e0 x0) (wealthy-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (personal-adj s3 x0) (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (prosperity-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (prosperous-adj s2 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (rich-adj e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (rich-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (riches-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (salary-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (superwealthy-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wage-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealth-nn e0 s1))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealth-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthiest-nn e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj e0 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj e1 e0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj s2 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj s3 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj s4 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj s5 x0))))
(B (name x) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-nn e0 x0))))

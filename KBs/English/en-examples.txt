;; English Metaphor Axioms (Automatic, High Cost)
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (abyss-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (abyss-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (bottomless-adj e0 x0) (pit-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (bottomless-nn e0 x0) (pit-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (chasm-nn e0 x0) (grow-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (chasm-nn e0 x0) (growing-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (chasm-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (climb-nn e0 x0) (of-in e0 x1 x0) (out-in e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (climb-nn e0 x0) (of-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (climb-vb x0 x1 u0 u1) (out-in e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (climbed-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (deepen-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (deepen-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (deepens-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (deeper-adj e0 x0) (force-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (deeper-nn e0 x0) (forced-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (depth-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (depths-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (descend-nn e0 x0) (into-in e0 x1 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (descend-vb e0 u1 e1 u0) (into-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (dig-nn e0 x0) (of-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (dig-vb x0 x1 u1 u0) (of-in e0 x1 x0) (out-in e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (emerge-vb x0 x1 u0 u1) (from-in e0 x1 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (emerge-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (emerged-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (emerger-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (emerger-vb e0 x0 x1 u0) (from-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (extreme-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (extreme-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (fall-vb e0 u1 e1 u0) (into-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (fall-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (falling-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (fell-nn e0 x0) (into-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (gap-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (gap-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (get-vb e0 u0 x0 u1) (of-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (hell-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (hell-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (hole-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (infinite-adj e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (infinite-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-in e0 x1 x0) (push-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-in e0 x1 x0) (suck-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-vb e0 u0 x0 u1) (pushed-vb e0 u0 e1 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-vb e0 u0 x0 x1) (sucked-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-vb e0 x0 x1 u0) (sucked-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (into-vb e0 x1 x0 u0) (pushed-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (narrow-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (narrowed-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (narrowing-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (of-in e0 x1 x0) (out-in e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (of-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (pit-nn e0 x0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (pull-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#ABYSS e0 :0.96) (^ (pulled-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (accident-nn e0 x0))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (collide-nn e0 x0))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (collides-nn e0 x0))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (crash-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (crashing-nn e0 x0))))
(B (name ex) (=> (S#ACCIDENT e0 :0.96) (^ (wreck-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addict-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addict-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addict-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addict-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addicted-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addicted-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addicted-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addicting-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-adj e0 x0) (cure-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-money-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0) (break-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0) (cocaine-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 e1 u0 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 u1 u2 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 e1 u0) (curar-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 u0 u1) (addiction-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 x1 u0) (break-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addiction-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addictive-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (addictive-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (cocaine-addiction-financial-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (cocaine-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (compel-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (compels-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drug-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drug-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drugged-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drunk-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drunk-nn e0 x0) (on-in e0 x1 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drunk-nn e0 x0) (on-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (drunk-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (get-nn e0 x0) (high-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (get-vb x0 x2 x1 u0) (high-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (intoxicate-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (intoxicated-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (intoxicated-nn e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (intoxicated-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (intoxicates-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (overdose-adj e0 x0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (overdose-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ADDICTION e0 :0.96) (^ (overdose-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (bark-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (bark-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (beast-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breed-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breed-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breeding-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breeds-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breeds-money-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (breeds-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (claw-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (claws-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (conceived-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (conceived-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (concieved-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (conquer-vb e0 x1 x0 u0) (this-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (cow-nn e0 x0) (milk-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (dark-vb e0 u1 e1 u0) (horse-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (dog-nn e0 x0) (guard-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (domesticated-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (domesticated-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (elephant-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (feather-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (feathers-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (fledging-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (fledging-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (fledgling-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (fledgling-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (herd-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (herd-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (herding-money-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (herding-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (herds-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (kill-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (peck-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (pecks-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (pet-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (pet-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (pony-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (pony-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (prey-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (prey-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (rat-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (roar-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (roar-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (stampede-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (stampede-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (tame-adj e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (tame-vb e0 x0 x04 u0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (watchdog-nn e0 x0))))
(B (name ex) (=> (S#ANIMAL e0 :0.96) (^ (wing-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (adulation-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (almighty-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (almighty-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (deified-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (deified-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (devotee-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (devotee-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (devotion-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (devotion-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (enshrine-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (enshrined-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (god-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (goddess-democracy-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (goddess-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (grace-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (grace-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (idol-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (idol-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (idolatry-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (idolize-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (ritual-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (tribute-adj e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (tribute-democracy-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (tribute-nn e0 x0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (tribute-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#A_GOD e0 :0.96) (^ (worship-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (allow-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (allows-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (birthright-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (claim-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (claim-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (grant-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (grants-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (integrity-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (inviolable-adj e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (might-nn e0 x0) (not-nn e0 x0) (permit-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (permit-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (permit-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (permit-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (permitted-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (recognize-vb e0 u0 x0 u1) (to-nn e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (recognize-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (right-adj e0 x0))))
(B (name ex) (=> (S#A_RIGHT e0 :0.96) (^ (right-nn e0 x0))))
(B (name ex) (=> (S#BARRIER e0 :0.96) (^ (obstruct-nn e0 x0))))
(B (name ex) (=> (S#BARRIER e0 :0.96) (^ (obstructs-nn e0 x0))))
(B (name ex) (=> (S#BARRIER e0 :0.96) (^ (separate-nn e0 x0))))
(B (name ex) (=> (S#BARRIER e0 :0.96) (^ (separates-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (and-nn e0 x0) (blood-nn e0 x0) (marrow-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (arterial-adj e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (artery-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleed-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bleeds-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (blood-money-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (blood-nn e0 x0) (marrow-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (blood-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (bloodstream-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (circulation-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (circulation-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (coagulate-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (coagulates-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (heartbeat-adj e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (heartbeat-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (hemorrhage-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (hemorrhage-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (oxygenate-vb x0 u0 x1 x2))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (oxygenated-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (pump-nn e0 x0) (that-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (pump-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (transfusion-nn e0 x0))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (transfusion-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#BLOOD_STREAM e0 :0.96) (^ (transfusion-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (a-in e0 x0 x1) (t-nn e0 x0) (vast-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (bail-vb x0 x2 x1 u0) (out-rb e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (bailed-vb e0 x0 x1 u0) (out-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boil-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boil-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boiled-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (boiling-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (current-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (current-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (deep-adj e0 x0) (ocean-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (deep-nn e0 x0) (ocean-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (divert-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (down-in e0 x1 x0) (trickle-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (down-nn e0 x0) (trickles-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (engulf-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (engulfs-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporate-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporates-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporation-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (evaporation-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flood-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flood-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (flows-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (freezes-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (funnel-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (funnels-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (head-nn e0 x0) (over-in e0 x1 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (heads-nn e0 x0) (our-nn e0 x0) (over-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inflow-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inundation-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (inundation-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (liquidation-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (liquidation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (melt-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (melting-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-nn e0 x0) (of-in e0 x1 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 u0 e1 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 u0 x0 u1) (ocean-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 x0 u0 u1) (of-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 x0 x08 u0) (of-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 x0 x08 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ocean-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (pool-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (pools-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ripple-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ripple-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ripples-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (ripples-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (sea-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (sea-poverty-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (shore-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stream-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (stream-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (streaming-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamp-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamped-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamped-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (swamps-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tide-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (tide-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (undertow-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (undertow-rb e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (vapor-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (vast-adj e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (waters-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (wave-nn e0 x0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (wave-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#BODY_OF_WATER e0 :0.96) (^ (wave-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (a-nn e0 x0) (creation-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (architect-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (architecture-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (architecture-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (assemble-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (assemble-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (base-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (base-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (based-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (build-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (build-vb x0 u0 x1 x2))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (building-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (built-nn e0 x0) (not-nn e0 x0) (was-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (bulldoze-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (bulldozing-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (ceiling-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (collapse-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (create-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (create-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (create-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (create-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (creates-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (creation-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (creation-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (creation-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (demolished-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (demolished-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (demolition-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (demolition-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (design-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (dismantle-vb x0 x1 u0 u1) (management-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (dismantle-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (dismantling-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (dismantling-vb e1 e0 x0 u0) (management-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (down-nn e0 x0) (tearing-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (down-rb e0 x0) (tear-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (edifice-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (edifice-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (engineer-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (engineer-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (engineer-wealth-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (engineered-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (engineered-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (erect-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (erects-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (form-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (form-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (formation-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (formation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (formation-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (found-vb x0 u0 x1 u1) (on-in e0 x1 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (foundation-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (foundation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (foundation-wealth-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (founded-nn e0 x0) (on-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (founded-nn e0 x0) (well-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (framework-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (framework-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (hang-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (hangs-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (hire-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (hired-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (home-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (homes-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (house-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (house-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (house-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (houses-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (housing-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (install-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (install-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (install-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (installs-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (mainstay-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (producir-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (put-nn e0 x0) (together-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (put-vb x0 x1 e0 u0) (together-rb e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (reinforce-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (reinforces-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (shore-vb x0 x2 x1 u0) (up-rb e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (shores-adj e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (structure-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (structure-wealth-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (structured-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (structured-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (structures-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (support-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (support-vb e1 e0 e2 u0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (supporting-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (supporting-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (supports-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (toppling-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (toppling-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underly-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underly-rb e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underpin-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underpinning-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underpinnings-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underpins-adj e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (underpins-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (wall-nn e0 x0))))
(B (name ex) (=> (S#BUILDING e0 :0.96) (^ (well-founded-adj e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (business-nn e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (can-nn e0 x0) (provide-vb e1 x0 e0 u0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (commercial-adj e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (employ-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (employment-nn e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (employs-nn e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (music-nn e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (opera-nn e0 x0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (operar-vb e0 x0 x05 u0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (provide-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#BUSINESS e0 :0.96) (^ (worker-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (belt-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (cover-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (mantle-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (mantle-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (pocket-adj e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (pocket-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (ring-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (rings-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (to-nn e0 x0) (unmask-nn e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (trim-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (trimmed-adj e0 x0))))
(B (name ex) (=> (S#CLOTHING e0 :0.96) (^ (unmask-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (azali-nn e0 x0) (won-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (azali-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (bid-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenge-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenge-nn x0 x1))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenge-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenge-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenged-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (challenger-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (competition-nn e0 x0) (risk-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (competition-vb e0 x0 x1 u0) (risks-adj e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (competitive-adj e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (competitive-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (contest-nn e0 x0) (popularity-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (contest-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (for-in e0 x1 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (for-nn e0 x0) (ran-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (race-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (race-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (raced-adj e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (raced-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (races-adj e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (rival-adj e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (w-nn e0 x0) (winning-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (win-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (win-nn x0 x2 x1 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (win-rb e0 u0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (win-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (winner-nn e0 x0))))
(B (name ex) (=> (S#COMPETITION e0 :0.96) (^ (winner-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (a-nn e0 x0) (escape-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (and-nn e0 x0) (ball-nn e0 x0) (chain-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (anyone-vb e0 x0 e1 u0) (exempt-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (away-nn e0 x0) (from-nn e0 x0) (get-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (away-rb e0 x0) (from-in e0 x1 x0) (get-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (ball-nn e0 x0) (chain-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (bind-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (bind-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (binds-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (break-adj e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (break-nn e0 x0) (of-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (break-vb x0 x1 u0 u1) (of-in e0 x1 x0) (out-in e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (break-vb x2 x1 x0 u0) (out-rb e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (cage-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (caging-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (capture-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (captured-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (chain-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (chains-adj e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (chains-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (chains-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (circle-nn e0 x0) (closed-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (circle-nn e0 x0) (closed-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (confine-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (confined-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (confines-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (corralled-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (corralled-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (corralled-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (dungeon-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (dungeon-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (election-nn e0 x0) (release-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escapar-vb e0 u0 x0 u1) (from-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escapar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-nn e0 x0) (from-in e0 x1 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-nn e0 x0) (from-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escape-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (escaping-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (exempt-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (exit-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (freedom-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (hold-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (impound-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (impound-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (imprisoned-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (liberate-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (liberates-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (liberation-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (liberation-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (lock-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (lock-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (of-in e0 x1 x0) (prison-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (of-nn e0 x0) (prison-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (prison-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (prison-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (released-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (released-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (restraint-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (restraints-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (restrict-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (restrict-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (shackle-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (shackles-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (tie-vb x0 u0 x1 u1) (up-rb e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (tied-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (tied-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (trap-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (trap-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (trap-wealth-nn e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (tying-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (unfettered-adj e0 x0))))
(B (name ex) (=> (S#CONFINEMENT e0 :0.96) (^ (unfettered-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#CONTAINER e0 :0.96) (^ (bucket-nn e0 x0))))
(B (name ex) (=> (S#CONTAINER e0 :0.96) (^ (fill-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (clean-elections-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (clean-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (contamination-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (contamination-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupt-adj e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupt-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (corruption-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (corruption-nn e0 x0))))
(B (name ex) (=> (S#CONTAMINATION e0 :0.96) (^ (corrupts-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (accomplice-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (accomplice-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (accusation-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (accusation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (atrocity-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (bailout-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (betrayal-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (betrayal-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (breach-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (breaches-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (chastened-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (chastened-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemn-nn e0 x0) (did-nn e0 x0) (n-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemn-vb x0 u0 x1 u1) (democracy-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemn-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemnation-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemnation-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemnation-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (condemned-vb e0 x0 u0 u1) (democracy-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (crime-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (crime-poor-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (crime-vb e0 x0 x05 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (crime-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (criminal-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (criminals-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (deceive-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (deceives-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (defrauded-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (defrauded-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (denounce-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (denouncing-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (execute-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (execute-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (finar-vb e0 u0 x0 u1) (finar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (fine-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (gestapo-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (hijacker-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (judge-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (judged-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (killed-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (lie-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (penalty-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (perpetrator-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (perpetrators-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (persecute-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (persecutes-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (pimp-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punish-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punished-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punished-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punished-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punishes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punishing-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punishment-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punitive-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (punitive-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (rape-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (rape-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (rape-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (rape-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (raped-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (raped-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (rob-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (robs-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (scapegoat-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (terrorist-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (terrorist-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (victim-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (victimize-adj e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (victimize-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (victims-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (violation-nn e0 x0))))
(B (name ex) (=> (S#CRIME e0 :0.96) (^ (violation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (bed-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (blight-adj e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (blight-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (crop-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (cultivate-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (cultivate-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (cultivation-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (cultivation-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (drought-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (fields-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (garden-candidates-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (garden-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (garner-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (garner-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (garner-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (grows-adj e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (harvest-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (harvested-adj e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (harvested-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (harvests-adj e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (irrigated-adj e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (plant-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (reap-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (reap-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (reaps-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (sow-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (sowing-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (vineyard-nn e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (vineyard-rb e0 x0))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (weed-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#CROP e0 :0.96) (^ (weeding-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (a-in e0 x0 x1) (darkness-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (a-in e0 x1 x0) (casts-nn e0 x0) (shadow-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (cast-vb x0 x2 x1 u0) (shadow-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (clouded-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (clouded-poverty-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (dark-adj e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (dark-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (dark-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (darken-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (darkens-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (darkness-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (gloom-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (obscure-adj e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (overshadow-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (overshadows-nn e0 x0))))
(B (name ex) (=> (S#DARKNESS e0 :0.96) (^ (shades-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (abscess-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (abscess-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (afflict-vb x1 x0 x2 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (afflicted-nn e0 x0) (by-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (affliction-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (affliction-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (affliction-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (anemia-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (bandaged-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (bandaged-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (cancer-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (cancer-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (cancer-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (chronic-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (chronic-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (chronic-poverty-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (contagious-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (contagious-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (corrupted-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (corrupted-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (cripple-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 u0 e1 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 u1 x0 u0) (for-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (curar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (cure-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (debilitating-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (dislocation-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (dislocations-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eliminate-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eliminate-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (elimination-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (elimination-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eradicate-vb e0 u0 e1 u1) (to-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eradicate-vb e1 x0 e0 u0) (to-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eradicate-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (eradication-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (exacerbate-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (exacerbates-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (fever-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (fever-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (hemorrhaging-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (infect-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (infects-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (leper-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (leper-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (myopia-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (myopia-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (myopia-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (myopic-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (myopic-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (pandemic-adj e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (pandemic-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (plague-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (plague-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (spell-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (spells-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (swell-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (swelling-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (symptom-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (symptoms-nn e0 x0))))
(B (name ex) (=> (S#DISEASE e0 :0.96) (^ (treat-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (a-nn e0 x0) (fell-nn e0 x0) (from-nn e0 x0) (high-nn e0 x0) (of-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (declinar-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (declinar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (declinar-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decline-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decline-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (declined-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (declined-vb e0 x0 e1 u0) (in-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decrease-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (decreasing-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (drop-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (dropped-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (dropping-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-nn e0 x0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-vb e0 x0 e1 u0) (into-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (fall-vb x0 x1 u0 u1) (into-in e0 x1 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (falling-nn e0 x0) (into-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (from-in e0 x1 x0) (high-nn e0 x0) (of-in e0 x1 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (hence-nn e0 x0) (lowering-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (hence-rb e0 x0) (lower-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lower-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lowered-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (lowering-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (plummet-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (plummets-nn e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (reduced-adj e0 x0))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (reduced-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#DOWNWARD_MOVEMENT e0 :0.96) (^ (sank-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (appeal-adj e0 x0) (nonetheless-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (appeal-vb x0 x2 x1 u0) (nonetheless-rb e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (benevolent-adj e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (benevolent-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (bigotry-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (celebrate-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (celebrates-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (distrust-nn e0 x0) (of-in e0 x1 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (distrust-nn e0 x0) (of-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (doldrums-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (enjoyment-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (greed-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (rage-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (rage-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (selfishness-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (spirit-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#EMOTION_EXPERIENCER e0 :0.96) (^ (spirit-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (a-in e0 x0 x1) (early-nn e0 x0) (earned-nn e0 x0) (efforts-adj e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (early-adj e0 x0) (effort-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (effect-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (energetic-adj e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (energetic-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (energize-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (energized-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (energy-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (exert-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (exerts-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (force-nn e0 x0) (video-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (force-vb e0 x0 x1 u0) (video-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (force-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (force-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (forced-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (fuel-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (fuel-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (fueled-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (generate-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (generate-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (generates-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (hot-adj e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (hot-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (intense-adj e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (intense-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (phenomenon-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (phenomenon-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (power-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (warmed-adj e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (warmed-nn e0 x0))))
(B (name ex) (=> (S#ENERGY e0 :0.96) (^ (warmth-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (control-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslaved-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslaved-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslavement-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslavement-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslaves-money-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (enslaves-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (govern-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (governed-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (harassment-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (help-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (help-nn x0 x1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (master-money-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (master-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (obey-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (obeys-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (of-in e0 x1 x0) (oppression-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (of-nn e0 x0) (oppression-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (on-nn e0 x0) (oppression-vb e0 u0 u1 u2) (s-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (opportunity-nn e0 x0) (oppression-vb e0 u0 x0 u1) (presidential-nn e0 x0) (resolved-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppress-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppress-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressed-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressed-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppresses-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppresses-vb e2 e0 e03 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppression-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppression-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppression-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressive-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (oppressive-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (owner-nn e0 x0) (slave-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (owner-vb e0 x0 u0 u1) (slave-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (princely-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (princely-rb e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (repression-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (repression-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (serve-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (serve-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (serves-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (serves-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (service-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (serving-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-adj e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-nn e0 x0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-vb e0 u0 x0 u1) (slave-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slave-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#ENSLAVEMENT e0 :0.96) (^ (slavery-nn e0 x0))))
(B (name ex) (=> (S#FAMILY e0 :0.96) (^ (father-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#FAMILY e0 :0.96) (^ (father-nn e0 x0))))
(B (name ex) (=> (S#FAMILY e0 :0.96) (^ (tribe-nn e0 x0))))
(B (name ex) (=> (S#FIRE e0 :0.96) (^ (ignite-adj e0 x0))))
(B (name ex) (=> (S#FIRE e0 :0.96) (^ (ignite-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#FIRE e0 :0.96) (^ (out-in e0 x0) (stamp-nn e0 x0))))
(B (name ex) (=> (S#FIRE e0 :0.96) (^ (out-nn e0 x0) (stamp-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (a-in e0 e1 x0) (a-nn e0 x0) (brew-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (appetite-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (appetite-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (appetizer-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (appetizer-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (away-nn e0 x0) (eat-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (away-rb e0 x0) (eat-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (bitter-adj e0 x0) (taste-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (bitter-nn e0 x0) (taste-vb e0 x0 x05 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (brew-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (carrot-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (consume-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (consumes-vb e0 u0 x0 u1) (consumes-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (consumption-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (consumption-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (devour-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (devours-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (eat-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (eat-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (eaten-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (eaten-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (food-adj e0 x0) (food-nn e0 x0) (food-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (food-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (fresh-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (fresh-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (grilled-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (grilled-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (luscious-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (luscious-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (pie-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (s-nn e0 x0) (slice-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (savor-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (slice-adj e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (slice-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (slice-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (smell-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (soup-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (table-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (taste-nn e0 x0))))
(B (name ex) (=> (S#FOOD e0 :0.96) (^ (tastes-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (extraction-nn e0 x0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleece-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleeced-adj e0 x0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleeced-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleeced-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (fleecing-nn e0 x0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (milk-nn e0 x0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (pluck-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (plucking-nn e0 x0))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-nn x0 x1))))
(B (name ex) (=> (S#FORCEFUL_EXTRACTION e0 :0.96) (^ (squeeze-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (a-in e1 e0 x0) (high-nn e0 x0) (stakes-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (a-nn e0 x0) (captain-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (act-nn e0 x0) (final-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (act-nn e0 x0) (final-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (ball-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (beat-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (beat-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (beat-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (beat-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (bluff-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (bluff-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (captain-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (card-nn e0 x0) (trump-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (card-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (chance-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (coach-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (concede-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (conceder-vb e0 x0 x2 x00))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (drama-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (forfeit-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (forfeited-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (forfeiture-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (forfeiture-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (game-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (game-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (goal-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (goal-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (high-stakes-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (home-nn e0 x0) (run-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (lose-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (participate-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (participates-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (pawn-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (play-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (play-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (played-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (player-adj e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (player-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (team-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (trump-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (trumps-nn e0 x0))))
(B (name ex) (=> (S#GAME e0 :0.96) (^ (win-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (desert-nn e0 x0))))
(B (name ex) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (forest-nn e0 x0))))
(B (name ex) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (mountain-nn e0 x0))))
(B (name ex) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (pitfall-nn e0 x0))))
(B (name ex) (=> (S#HAZARDOUS_GEOGRAPHIC_FEATURE e0 :0.96) (^ (pitfalls-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (a-nn e0 x0) (peak-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (above-in e0 x1 x0) (average-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (above-nn e0 x0) (average-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (amount-nn e0 x0) (high-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (amounts-nn e0 x0) (high-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apex-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (apex-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (height-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (heights-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (high-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (high-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (higher-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (higher-adj e0 x0) (than-in e0 x1 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (higher-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (higher-nn e0 x0) (than-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (maximize-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (maximize-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peak-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peak-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peak-taxation-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peaked-adj e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peaked-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (peaks-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (pinnacle-nn e0 x0))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (pinnacle-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#HIGH_LOCATION e0 :0.96) (^ (summit-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (also-nn e0 x0) (reached-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (also-rb e0 x0) (reach-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (arm-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (blind-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (blinds-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (bodies-nn e0 x0) (dead-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (body-nn e0 x0) (dead-adj e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (body-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (brain-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (change-vb x0 x1 u0 u1) (face-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (changing-nn e0 x0) (facer-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (down-in e0 x1 x0) (hand-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (down-nn e0 x0) (hand-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (embodies-vb e0 u1 e1 u0) (that-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (embody-vb x1 x0 x2 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (exercise-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (exercised-adj e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eye-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyeball-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyes-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyes-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyes-vb e0 x0 x1 u0) (s-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (eyes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (face-nn e0 x0) (lift-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (face-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (faced-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (facer-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (facer-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (facer-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (facer-vb e0 x0 x06 u0) (lift-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (facer-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (faces-adj e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (hand-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (hands-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (head-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (head-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (headed-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (heart-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (muscle-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (profile-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (profile-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (see-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (see-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (seen-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (sees-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (sees-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (sees-vb e0 x0 x2 x1))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (sing-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (sings-adj e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (skin-nn e0 x0))))
(B (name ex) (=> (S#HUMAN_BODY e0 :0.96) (^ (weakening-nn e0 x0))))
(B (name ex) (=> (S#JOURNEY e0 :0.96) (^ (phase-nn e0 x0))))
(B (name ex) (=> (S#JOURNEY e0 :0.96) (^ (traverse-nn e0 x0))))
(B (name ex) (=> (S#JOURNEY e0 :0.96) (^ (traverse-vb e0 x0 x05 u0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (choreograph-nn e0 x0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (choreographs-nn e0 x0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (lead-adj e0 x0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (lead-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (over-nn e0 x0) (took-nn e0 x0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (over-rb e0 x0))))
(B (name ex) (=> (S#LEADER e0 :0.96) (^ (status-nn e0 x0))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (all-nn e0 x0) (baby-nn e0 x0))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (baby-nn e0 x0))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (chronology-nn e0 x0) (detailed-adj e0 x0) (of-in e0 x0 x1))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (chronology-nn e0 x0) (detailed-nn e0 x0) (of-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (cradle-nn e0 x0))))
(B (name ex) (=> (S#LIFE_STAGE e0 :0.96) (^ (cradle-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (beacon-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (beacon-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (brighten-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (brightened-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (brightness-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (brilliance-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dawn-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dawn-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dazzle-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dazzles-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dazzling-adj e0 x0) (light-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (dazzling-nn e0 x0) (light-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (distort-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (distorts-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (emanate-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (emanates-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (focus-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (gleam-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (gleams-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (image-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (image-vb e0 x0 x08 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (light-nn e0 x0) (of-in e0 x1 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (light-nn e0 x0) (of-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (limelight-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (limelight-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (propagate-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (propagates-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (reflect-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (reflect-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (reflection-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (reflection-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (reflects-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (shine-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (shines-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (shines-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (spotlight-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (spotlight-nn e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (sunny-adj e0 x0))))
(B (name ex) (=> (S#LIGHT e0 :0.96) (^ (sunny-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (baseline-adj e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (baseline-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-adj e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottom-vb x0 x2 x1 u0) (out-rb e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottomed-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (bottomed-vb e0 u0 x0 u1) (out-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (climb-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (climbed-nn e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (deeper-adj e0 x0))))
(B (name ex) (=> (S#LOW_LOCATION e0 :0.96) (^ (deeper-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (adjust-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (adjusts-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (apparatus-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (cog-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (cogs-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (cycle-nn e0 x0) (destructive-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (cycles-nn e0 x0) (destructive-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (engine-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (engine-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (engine-vb e0 x0 x09 u0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (function-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (functions-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (grease-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (greases-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (instrument-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (interconnect-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (interconnect-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (is-nn e0 x0) (performing-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lever-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lever-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (linkage-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (linkages-vb e0 x0 x1 u0) (the-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lubricant-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lubricant-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lubricate-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (lubricates-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (machine-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (maintain-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (maintain-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (maintenance-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (manipulated-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (manipulated-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanic-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanics-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanism-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanisms-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanistic-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (mechanistic-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (perform-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (producir-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (system-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (tighten-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (tighten-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (tool-nn e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (works-adj e0 x0))))
(B (name ex) (=> (S#MACHINE e0 :0.96) (^ (works-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (a-in e0 u0 x0) (a-nn e0 x0) (finds-adj e0 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (a-in e1 e0 x0) (entanglement-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (bureaucratic-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (bureaucratic-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (chaos-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (confuse-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (confuses-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (enmeshment-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (ensnare-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangle-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangle-vb x0 u0 x1 u1) (in-in e0 x1 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangled-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangled-vb e0 x0 u0 u1) (in-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangled-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entanglement-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangles-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (entangles-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (find-vb x0 x2 x1 u0) (way-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (its-nn e0 x0) (negotiating-nn e0 x0) (through-nn e0 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (knot-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (labyrinth-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (labyrinth-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (labyrinthine-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (labyrinthine-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (maze-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (maze-nn e0 x0) (navigate-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (maze-nn e0 x0) (navigate-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (maze-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (maze-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (misguided-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (misguided-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (muddle-adj e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (muddle-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (negotiate-vb x2 x1 x0 u0) (through-in e0 x1 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (network-nn e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (tangle-vb x0 x2 x1 u0) (up-rb e0 x0))))
(B (name ex) (=> (S#MAZE e0 :0.96) (^ (tangled-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (alleviate-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (alleviate-poverty-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (alleviates-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (balm-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (curar-vb e0 x0 x03 u0) (for-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (dose-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (dose-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (heal-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (heals-adj e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (inject-adj e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (inject-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (injection-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (injection-vb e07 e0 x0 u0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (intravenous-adj e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (intravenous-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (prescribed-adj e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (prescribed-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (prescription-nn e0 x0))))
(B (name ex) (=> (S#MEDICINE e0 :0.96) (^ (prescription-vb e0 u0 u1 u2) (prescription-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (a-in e0 x0 x1) (frankenstein-nn e0 x0) (monster-nn e0 x0) (s-nn e0 x0) (steam-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (a-in e1 e0 x0) (frankenstein-nn e0 x0) (in-nn e0 x0) (in-rb e0 e1) (monster-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (clutch-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (clutches-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (demonize-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (demonize-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (dwarf-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (dwarfs-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (evil-adj e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (evil-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (evils-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (frankenstein-nn e0 x0) (monster-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (frankenstein-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (godzilla-adj e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (godzilla-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (godzillum-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (monster-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (possessed-adj e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (possessed-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (specter-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (terrorize-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (terrorizes-adj e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (vampire-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (wreak-nn e0 x0))))
(B (name ex) (=> (S#MONSTER e0 :0.96) (^ (wreaks-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-nn e0 x0) (primary-adj e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-vb e0 u0 u1 u2) (primary-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-vb e0 x0 x1 u0) (the-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obligations-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obliged-adj e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (obliged-nn e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (owe-adj e0 x0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (owe-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (owes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MORAL_DUTY e0 :0.96) (^ (owes-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (action-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (action-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (action-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (advance-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (advancing-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (avoid-vb e0 u0 u1 u2) (to-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (avoid-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (away-nn e0 x0) (go-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (away-rb e0 x0) (go-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (carried-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (carry-vb x0 x2 x1 u0) (out-rb e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (come-vb x0 x2 x1 u0) (up-rb e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (coming-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (cycle-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (cycles-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (extension-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (follow-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (follow-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (forthcoming-adj e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (forthcoming-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (go-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (goes-adj e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (goes-adj e1 e0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (going-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (income-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (incoming-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (migrating-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (move-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (movement-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (movement-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (moves-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (moves-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (moving-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (off-nn e0 x0) (went-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (off-rb e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (spread-nn x0 x1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (spread-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (spread-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (spread-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (spreading-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (stirred-adj e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (stirred-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (stirring-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (stirrings-adj e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (trajectory-adj e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (trajectory-nn e0 x0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (walk-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#MOVEMENT e0 :0.96) (^ (walks-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (crisis-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (destroy-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (destroyed-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (devastation-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (devastation-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (disastrous-adj e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (disastrous-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (erupt-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (erupted-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (hit-nn e0 x0) (tsunami-adj e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (hits-nn e0 x0) (tsunami-adj e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (hurricane-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (hurricane-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (level-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (spew-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (spews-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (starve-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (starving-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (storm-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (surge-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (surgir-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (surgir-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tragedy-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tsunami-adj e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tsunami-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tsunami-taxes-nn e0 x0))))
(B (name ex) (=> (S#NATURAL_PHYSICAL_FORCE e0 :0.96) (^ (tsunami-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (bloated-adj e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (bloated-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (bulk-adj e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (crave-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (gluttonous-adj e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (gluttonous-nn e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (gluttony-adj e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (gluttony-nn e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (implication-nn e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (implication-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (obesity-nn e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (voracious-adj e0 x0))))
(B (name ex) (=> (S#OBESITY e0 :0.96) (^ (voracious-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (fungus-adj e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (fungus-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (infestation-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (infestation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (leech-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (leeches-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (live-adj e0 x0) (of-nn e0 x0) (off-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (live-vb x0 x1 u0 u1) (of-in e0 x1 x0) (off-in e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (lives-adj e0 x0) (of-nn e0 x0) (off-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (of-in e0 e1 x0) (off-in e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-adj e0 x0) (party-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-adj e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-vb e0 u0 x0 u1) (party-nn e0 x0))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PARASITE e0 :0.96) (^ (parasite-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (]-nn e0 x0) (belgian-adj e0 x0) (blog-nn e0 x0) (election-nn e0 x0) (in-in e0 x0 x1) (of-in e0 x0 x1) (of-in e0 x1 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (a-in e1 e0 x0) (a-nn e0 x0) (leads-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (are-nn e0 x0) (facing-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (at-nn e0 x0) (clear-nn e0 x0) (path-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (belgian-nn e0 x0) (blog-nn e0 x0) (election-vb e0 u0 x0 u1) (election-vb e0 x1 x0 u0) (in-nn e0 x0) (of-nn e0 x0) (on-nn e0 x0) (our-nn e0 x0) (the-nn e0 x0) (tracking-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (bridge-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (bridged-adj e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (bridged-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (clear-adj e0 x0) (path-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (clear-nn e0 x0) (path-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (end-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (fast-nn e0 x0) (lane-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (fast-rb e0 x0) (lane-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (highway-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (highway-wealth-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (juncture-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (juncture-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (lead-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (lead-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (leading-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (leads-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (mislead-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (misleads-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (obstruction-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (open-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (path-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (pave-vb x1 x0 u0 u1) (way-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (paves-adj e0 x0) (the-nn e0 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-nn e0 x0) (to-in e0 x0 x1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (road-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (roadblock-nn e0 x0))))
(B (name ex) (=> (S#PATHWAY e0 :0.96) (^ (trail-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (alleviate-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-nn e0 x0) (painful-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-nn e0 x0) (relief-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u0 u1 u2) (burden-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u0 x0 u1) (relief-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u1 u2 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 u0 u1) (painful-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x06 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x07 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x08 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x1 u0) (u-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burden-vb x1 x0 x2 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burdened-adj e0 x0) (by-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burdens-in e0 x1 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burdens-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (burdens-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (crushes-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (deadweight-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (endure-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (enduring-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (heaviness-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (heavy-adj e0 x0) (weigh-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (heavy-nn e0 x0) (weigh-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (help-nn e0 x0) (reduce-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (help-reduce-hunger-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (impose-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (imposing-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (load-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (load-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (overloaded-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (overloaded-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressing-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressing-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressure-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pressure-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (push-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (pushing-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reduce-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reduce-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reduced-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reduces-vb e0 x0 x05 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (reducing-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (released-adj e0 x0) (relief-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relief-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relief-poor-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relief-poverty-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relief-thepoor-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieve-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieve-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieve-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieved-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieved-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieves-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (relieving-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (remove-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (removes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (screw-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (screw-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (strain-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (stress-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (unwieldy-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (unwieldy-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weigh-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weighs-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_BURDEN e0 :0.96) (^ (weight-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (a-nn e0 x0) (care-vb e0 u0 x0 u1) (take-rb e0 e1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abusar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abuse-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abuse-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (abused-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (ballot-nn e0 x0) (secret-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (ballot-nn e0 x0) (secret-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (beaten-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (beaten-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (break-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (breaks-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (candidacy-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (care-nn e0 x0) (take-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (constriction-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (constriction-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crack-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cracking-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crippling-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crippling-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crush-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (crushing-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cut-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cut-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cut-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cutting-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (cutting-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroy-nn e0 x0) (they-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroy-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroy-vb x1 x0 x2 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroyer-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destroys-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destruction-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destruction-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destruction-vb e0 x0 x1 u0) (n-nn e0 x0) (s-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (destructiveness-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (devastate-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (devastate-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (dismemberment-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (drown-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (drown-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (drowned-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (drowned-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (drowned-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (ensure-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (erode-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (erodes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (exacerbate-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (exacerbating-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flatten-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flatten-vb e0 x0 u0 u1) (flatten-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flatten-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (flattened-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (harm-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (harms-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (heads-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hit-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hobble-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hobbles-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (hurt-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (imperil-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (imperils-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (in-nn e0 x0) (incumbent-nn e0 x0) (incumbents-nn e0 x0) (n-nn e0 x0) (s-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (incumbent-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (inhibition-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (inhibition-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (insurance-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (insurance-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (kill-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (kills-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (maimed-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (maimed-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (on-nn e0 x0) (result-nn e0 x0) (s-nn e0 x0) (suppression-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (pain-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (pains-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (poison-adj e0 x0) (slow-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (poison-nn e0 x0) (slow-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (poison-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (preserve-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (preserve-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (preserves-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (preserving-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (protect-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (protection-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (restrain-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (restrain-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (risk-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (risks-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (rock-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (security-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shield-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shield-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shield-wealth-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shredded-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (shredded-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (snare-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (snare-vb e0 x0 x00 u0))))
(B (name ex) (=> (S#PHYSICAL_HARM e0 :0.96) (^ (suppression-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (a-in e0 x0 x1) (region-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (a-nn e0 x0) (suburb-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (archipelago-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (archipelagos-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (area-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (areas-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (areas-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (away-nn e0 x0) (draw-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (away-rb e0 x0) (draw-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-adj e0 x0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-adj e1 e0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-adj e0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-adj e0 x0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (born-nn e0 x0) (into-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (boundaries-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (boundary-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (departure-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (departure-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (departure-vb e0 x0 x09 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (departure-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (domain-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (domain-rb e0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exit-nn e0 x0) (it-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exit-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exit-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (exited-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (fringe-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (fringes-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (fringes-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (go-vb x0 x1 u0 u1) (into-in e0 x1 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (going-nn e0 x0) (into-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-in e0 x1 x0) (live-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-adj e0 x0) (live-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 x00 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 x07 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 x09 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0) (live-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (in-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (intrusion-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (intrusions-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (island-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (leave-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (leave-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (leave-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (leaves-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (leaving-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (left-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (left-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (live-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (live-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (map-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (maps-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (moves-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (neighborhood-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (of-in e0 x1 x0) (sphere-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (of-nn e0 x0) (sphere-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (outskirts-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (place-nn x0 x1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (placer-vb e0 u0 u1 u2))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (plat-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (plats-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (push-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (realm-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (region-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (region-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (regions-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (removal-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (reside-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (resides-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (suburb-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (surround-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (surrounding-adj e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (taxes-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (walk-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (walk-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (walked-nn e0 x0) (walked-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (withdraw-nn e0 x0))))
(B (name ex) (=> (S#PHYSICAL_LOCATION e0 :0.96) (^ (withdraw-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (bear-nn e0 x0) (fruit-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (bear-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (bear-vb e0 x0 x1 u0) (fruit-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (bears-nn e0 x0) (fruit-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (bears-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (blossom-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (blossoms-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (branch-nn e0 x0) (executive-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (branch-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (branches-adj e0 x0) (executive-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (evolved-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (evolved-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (fruit-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (grow-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (growing-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (languishing-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (languishing-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (nut-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (nut-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (prune-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (prunes-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0) (t-nn e0 x0) (took-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0) (take-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0) (take-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0) (took-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (root-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (seeds-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (shriveled-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (shriveled-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (thorn-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (thorn-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (tree-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (tree-vb e0 x0 x01 u0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (tree-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (trim-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (trim-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (trim-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (trimming-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (weed-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (weeds-adj e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (weeds-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (wilt-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (wilting-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (wither-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (wither-taxes-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (wither-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (withering-nn e0 x0))))
(B (name ex) (=> (S#PLANT e0 :0.96) (^ (withers-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (access-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (breeze-vb x0 u0 x1 u1) (through-in e0 x1 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (breezed-nn e0 x0) (through-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (close-adj e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (close-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (close-vb x1 x0 u0 u1) (door-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (closes-nn e0 x0) (door-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (open-adj e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (open-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (open-vb x1 x0 u0 u1))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (door-nn e0 x0) (opens-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (doorway-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (exclude-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (excludes-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (gateway-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (into-in e0 x1 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (into-nn e0 x0) (way-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (is-nn e0 x0) (opening-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (open-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (open-vb x0 x2 x1 u0) (up-rb e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (open-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (portal-adj e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (portal-election-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (portal-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (reduction-nn e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (reduction-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (unlock-adj e0 x0))))
(B (name ex) (=> (S#PORTAL e0 :0.96) (^ (unlock-nn e0 x0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (buffered-adj e0 x0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (buffered-nn e0 x0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (protect-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (protect-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (save-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (saved-nn e0 x0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (survive-vb e0 u1 x0 u0))))
(B (name ex) (=> (S#PROTECTION e0 :0.96) (^ (survive-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (a-in e0 x0 x1) (all-nn e0 x0) (allocation-vb e0 x0 x1 u0) (on-nn e0 x0) (re-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (abundance-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (abundance-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (abundance-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulate-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulate-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulation-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulation-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulation-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (accumulation-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (acquire-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (acquires-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (acquisition-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (acquisition-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (aid-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (aid-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (amass-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (amass-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (asset-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (build-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (built-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (bulks-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (buying-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (capacity-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (capacity-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (collecting-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (concentration-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (concentrations-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deliver-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (delivered-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (delivers-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (delivery-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deny-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deny-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deplete-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deplete-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (deplete-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (depletion-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (depletion-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (developed-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (developed-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (development-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (dilute-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (dilute-vb e0 u0 e1 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (dilute-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (dilutes-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (diminish-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (disbursement-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distill-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distribution-nn e0 x0) (equitable-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distribution-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distribution-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distribution-vb e0 x0 x1 u0) (equitable-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (distribution-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (double-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (double-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (drill-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (entrusted-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (entrusted-vb e0 x0 x1 u0) (us-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (expansion-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (exploitation-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (extend-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (extending-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (fabricate-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (fabricated-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (gain-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (gained-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (give-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (gives-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (greatest-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (growth-adj e0 x0) (growth-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improve-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improved-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (improving-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (inherit-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (inherit-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (itemize-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (itemize-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (lump-adj e0 x0) (sum-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (lump-nn e0 x0) (sum-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (magnitude-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (mass-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (mine-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (mine-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (mine-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (possession-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (possession-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (purchase-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (quantity-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (re-allocation-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (receive-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (receive-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (refine-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (refine-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (refine-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (refinement-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (resource-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (resources-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (resources-vb e0 u0 e1 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (resources-vb e0 x0 x06 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (scatter-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (scatter-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (scattering-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (serie-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (series-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (shift-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (shifting-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (sift-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (sift-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (size-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (substance-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (supply-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (to-nn e0 x0) (waste-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (ton-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (ton-rb e0 e1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (transfer-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (transfer-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (transferred-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (transferring-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (treasure-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (treasuring-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (unit-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (unlimited-adj e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (unlimited-nn e0 x0))))
(B (name ex) (=> (S#RESOURCE e0 :0.96) (^ (waste-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#RULE_ENFORCER e0 :0.96) (^ (regulate-vb e0 x1 x0 u0) (to-nn e0 x0))))
(B (name ex) (=> (S#RULE_ENFORCER e0 :0.96) (^ (regulate-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (analyze-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (analyze-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (calculus-adj e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (calculus-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (find-nn e0 x0) (out-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (find-vb x0 x2 x1 u0) (out-rb e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (measured-adj e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (measured-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (measured-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (measuring-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (season-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (season-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (study-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (survey-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (titration-nn e0 x0))))
(B (name ex) (=> (S#SCIENCE e0 :0.96) (^ (titrations-nn e0 x0))))
(B (name ex) (=> (S#SERVANT e0 :0.96) (^ (mainly-nn e0 x0) (served-nn e0 x0))))
(B (name ex) (=> (S#SERVANT e0 :0.96) (^ (mainly-rb e0 x0) (serve-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#SERVANT e0 :0.96) (^ (steward-adj e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (adversary-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (adversary-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (advocate-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (advocate-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (argue-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (argue-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (assert-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (asserts-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (combats-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (concede-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (conceder-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (conflict-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-poverty-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defeat-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defeated-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defeats-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defence-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defend-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defend-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defense-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defies-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (defy-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (dramatic-adj e0 x0) (gain-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (dramatic-nn e0 x0) (gains-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (duel-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (enemy-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (fight-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (fight-nn x0 x1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (fights-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (foe-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (force-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (harmonize-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (harmonizing-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (oppose-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (oppose-vb x2 x1 x0 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (opposes-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (overthrow-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (protest-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (protested-adj e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (protested-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (pursuit-lower-taxes-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (pursuit-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (resist-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (resists-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (solve-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (solve-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (stand-nn e0 x0) (up-in e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (stand-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (stand-vb x0 x1 u0 u1) (up-in e0 x1 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (standing-nn e0 x0) (up-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (struggle-adj e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (struggle-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (struggle-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (struggling-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (victorious-adj e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (victorious-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (wrestle-nn e0 x0))))
(B (name ex) (=> (S#STRUGGLE e0 :0.96) (^ (wrestles-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#TEMPERATURE e0 :0.96) (^ (climate-nn e0 x0))))
(B (name ex) (=> (S#TEMPERATURE e0 :0.96) (^ (degree-nn e0 x0))))
(B (name ex) (=> (S#TEMPERATURE e0 :0.96) (^ (frozen-adj e0 x0))))
(B (name ex) (=> (S#TEMPERATURE e0 :0.96) (^ (frozen-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (bilk-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (bilked-adj e0 x0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (burglar-adj e0 x0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (burglar-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (extorted-adj e0 x0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (extorted-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (steal-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (steal-nn e0 x0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (steal-vb e0 x0 x1 x2))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (steal-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (steal-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#THEFT e0 :0.96) (^ (stealing-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascended-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (ascended-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (boost-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (boosting-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (can-nn e0 x0) (rise-vb e0 u1 e1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (climb-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (climbs-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (does-nn e0 x0) (n-nn e0 x0) (raise-vb e0 x1 x0 u0) (t-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (escalate-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (escalating-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (from-in e0 x1 x0) (rise-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (from-nn e0 x0) (rise-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (hike-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (income-adj e0 x0) (income-nn e0 x0) (increase-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (income-nn e0 x0) (increase-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-nn x0 x1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 u0 x0 u1) (increase-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb e1 e0 x0 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increase-vb x1 x0 x2 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increased-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increases-vb e0 x0 x1 u0) (it-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increases-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increasing-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (increment-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jack-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (jacked-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (only-nn e0 x0) (raised-adj e0 x0) (raised-nn e0 x0) (raised-vb e0 x0 x02 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (only-rb e0 x0) (raise-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raise-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raised-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raised-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (raising-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-government-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-nn x0 x1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-vb x0 u0 x1 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rise-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (risen-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rises-adj e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rising-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (rose-nn e0 x0))))
(B (name ex) (=> (S#UPWARD_MOVEMENT e0 :0.96) (^ (upsurge-nn e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (ballast-nn e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (commandeered-adj e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (drive-nn e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (drive-rb e1 e0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (drive-vb e0 x0 x03 u0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (drive-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (drive-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (driving-nn e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (driving-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (manoeuvre-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (manoeuvring-nn e0 x0))))
(B (name ex) (=> (S#VEHICLE e0 :0.96) (^ (navigate-adj e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (attack-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (attacks-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battle-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battle-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battle-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battleground-adj e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battleground-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battles-vb e0 x0 e1 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (battling-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (bludgeon-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (brandish-adj e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (brandish-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (civil-adj e0 x0) (war-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (civil-nn e0 x0) (war-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combat-nn e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combat-poverty-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combat-vb e0 u0 e1 u1) (to-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combat-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combat-vb x0 x2 x1 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (combating-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (further-adj e0 x0) (war-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (further-vb e0 u1 e1 u0) (war-vb e0 x0 x1 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (infiltrated-adj e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (infiltrated-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (invasion-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (raid-vb x0 x1 u0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (raiding-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (revolutionary-democracy-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (revolutionary-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (target-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (wage-nn e0 x0) (war-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (wage-vb e0 u1 e1 u0) (war-vb e0 x0 u0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (war-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (war-vb e0 u0 x0 u1))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (war-vb e0 x0 u1 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (war-vb e0 x1 x0 u0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (weapon-nn e0 x0))))
(B (name ex) (=> (S#WAR e0 :0.96) (^ (weapon-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (accountability-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administer-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administered-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrate-vb e0 u1 e1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrate-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-nn e0 x0) (transfer-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 u0 x0 u1) (transfer-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 u1 e1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 x0 x1 u0) (administration-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administration-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrations-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrative-rb e1 e0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrator-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (administrators-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (agencies-vb e0 x0 x1 u0) (government-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (agency-nn e0 x0) (government-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (armies-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (army-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (authorities-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (authority-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureau-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucracy-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucrat-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucratic-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaucrats-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (bureaus-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (civil-adj e0 x0) (servant-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (civil-nn e0 x0) (servants-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (civil-nn e0 x0) (servants-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (commission-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (commission-vb e1 x0 e0 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (congressman-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (congressman-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (deduction-vb e0 u0 u1 u2) (tax-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (diplomatic-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (director-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (directors-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (e-nn e0 x0) (regulation-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (fed-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (fed-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (force-nn e0 x0) (police-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (force-vb e0 x0 x00 u0) (police-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (governments-nn e0 x0) (local-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (health-nn e0 x0) (public-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (health-nn e0 x0) (public-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (law-nn e0 x0) (tax-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (law-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legality-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-nn x0 x1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 e1 u0) (legislation-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 e1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 x00 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 x03 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 x09 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (legislation-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (manage-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (management-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (managerial-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (managing-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officer-nn e0 x0) (preside-vb x0 x2 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officer-vb e0 u0 u1 u2) (presiding-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (official-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officialdom-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officials-adj e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (officials-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (ordinance-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (policy-rb e1 e0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-nn e0 x0) (service-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (public-nn e0 x0) (services-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-adj e0 x0) (tape-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (red-nn e0 x0) (tape-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-vb e0 u1 e1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-vb e0 x0 x04 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulation-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulations-nn e0 x0) (regulations-vb e0 x0 e1 u0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulations-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (regulatory-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (rights-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (statute-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (system-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (TS#BUREAUCRACY e0 :0.96) (^ (system-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-in e0 e1 u0) (a-in e1 e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-in e0 u0 x0) (a-nn e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-in e0 x0 x1) (democracy-nn e0 x0) (race-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-in e0 x0 x1) (democracy-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-in e1 e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-nn e0 x0) (campaign-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (a-nn e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (ballot-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (ballots-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj e0 x0) (liberties-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj e0 x0) (liberties-vb e0 u1 u2 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj e0 x0) (liberty-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-adj e0 x0) (rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-nn e0 x0) (liberty-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-nn e0 x0) (rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (civil-rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (convention-nn e0 x0) (democratic-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (convention-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (convention-vb e0 x0 x1 u0) (democratic-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (convention-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (cradle-nn e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (cradle-vb e0 x0 u0 u1) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (crave-nn e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (crave-vb x0 x1 u0 u1) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (craves-adj e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (craving-nn e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (delegate-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (delegates-vb e0 x0 e1 u0) (delegates-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracies-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-adj e0 x0) (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (democracy-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (liberal-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (raced-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (raced-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (representative-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (representative-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0) (social-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democracy-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrat-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrat-vb x1 x0 u0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj e0 x0) (process-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-nn e0 x0) (processes-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democratic-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (democrats-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (electoral-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (entrusted-adj e0 x0) (self-government-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (entrusted-vb e0 x0 x1 u0) (government-nn e0 x0) (overspread-vb e0 x0 x09 u0) (self-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (free-adj e0 x0) (market-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (free-nn e0 x0) (markets-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (freedom-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (freedoms-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (government-nn e0 x0) (m-nn e0 x0) (self-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (government-nn e0 x0) (s-nn e0 x0) (self-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-adj e0 x0) (right-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-adj e0 x0) (rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-nn e0 x0) (rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (human-vb e0 x0 x08 u0) (right-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (incumbent-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (incumbent-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (minority-nn e0 x0) (rights-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (party-nn e0 x0) (tea-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-vb e0 u0 u1 u2) (the-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-vb e0 u0 x0 u1) (the-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-vb e0 x0 x03 u0) (the-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (people-vb e1 x0 e0 u0) (the-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (primary-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (protection-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (referendum-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (republic-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-nn e0 x0) (to-nn e0 x0) (votar-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-nn e0 x0) (vote-vb x1 x0 u0 u1))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (right-rb e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (risky-adj e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (s-nn e0 x0) (security-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (security-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (self-government-nn e0 x0))))
(B (name ex) (=> (TS#DEMOCRACY e0 :0.96) (^ (tea-party-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (a-nn e0 x0) (candidacy-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (ballot-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (balloting-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (election-adj e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (election-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (campaign-nn e0 x0) (political-adj e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (candidacy-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (challenger-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (challenger-vb e1 e0 x0 x1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elect-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-adj e0 x0) (election-nn e0 x0) (election-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (free-adj e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (result-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (result-nn x0 x1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (results-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-nn e0 x0) (system-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-rb e0 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 u0 x0 u1) (election-vb e0 x1 x0 u0) (on-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 u1 e1 u0) (election-vb e0 x0 x03 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 u1 e1 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 x0 x01 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 x0 x05 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e1 e0 x0 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (election-vb e1 e0 x1 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elections-nn e0 x0) (free-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elections-nn e0 x0) (results-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elections-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elector-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (electorate-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (electors-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (elects-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (for-in e0 x1 x0) (vote-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (for-nn e0 x0) (votar-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (framework-adj e0 x0) (suffrage-nn e0 x0) (universal-adj e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (framework-nn e0 x0) (suffrage-nn e0 x0) (universal-adj e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (politicking-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (presidential-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (presidential-vb e0 x0 x00 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (primaries-vb e0 x0 x04 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (primaries-vb e0 x0 x07 u0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (register-vb x0 x2 x1 u0) (voter-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (registered-nn e0 x0) (voters-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (vote-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (voter-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (voters-nn e0 x0))))
(B (name ex) (=> (TS#ELECTIONS e0 :0.96) (^ (votes-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (county-nn e0 x0) (government-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (dictatorship-nn e0 x0) (military-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (dictatorship-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (dictatorships-adj e0 x0) (military-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (fascist-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (federal-adj e0 x0) (government-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (governance-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (governance-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (local-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (n-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (over-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (over-rb e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (government-nn e0 x0) (overthrow-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (governments-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (governments-nn e0 x0) (local-adj e0 x0) (local-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (judiciary-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (jurisdiction-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (jurisdictions-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (laws-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (legislation-vb e1 x0 e0 u0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (loyalty-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (maoism-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (minister-nn e0 x0) (prime-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (policies-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (presidency-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (rule-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (rule-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (totalitarian-nn e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (totalitarian-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (valid-adj e0 x0))))
(B (name ex) (=> (TS#GOVERNMENT e0 :0.96) (^ (valid-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (be-nn e0 x0) (poor-adj e0 x0) (to-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (beggar-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (beggar-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (child-nn e0 x0) (poverty-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (child-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (class-nn e0 x0) (work-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (class-nn e0 x0) (working-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (extreme-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (homeless-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (homeless-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (homelessness-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0) (hunger-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0) (last-adj e0 x0) (price-nn e0 x0) (wheat-nn e0 x0) (year-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0) (last-nn e0 x0) (prices-nn e0 x0) (wheat-nn e0 x0) (year-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0) (problem-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-problem-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-vb e0 x0 x02 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (hunger-vb e0 x0 x08 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (impoverish-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (impoverishes-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (impoverishing-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (inequalities-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (inequalities-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (inequality-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (level-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overcome-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overcome-vb x0 u0 x1 u1) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overdose-adj e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overdose-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overshadow-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (overshadows-nn e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (pauper-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (paupers-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (people-adj e0 x0) (poor-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (people-adj e0 x0) (poor-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (people-nn e0 x0) (poor-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (people-vb e0 x0 u1 u0) (poor-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (people-vb e0 x0 x1 u0) (poor-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj e0 x0) (poor-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poor-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poor-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poor-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poorer-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poorer-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poorest-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poorest-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-adj e0 x0) (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-adj e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (poverty-rb e1 e0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (s-nn e0 x0) (t-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (s-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (threshold-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (threshold-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (verge-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0) (world-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-rb e0 e1))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-rb e0 u0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (poverty-rb e1 e0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (privation-nn e0 x0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (privation-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (starvation-adj e1 e0))))
(B (name ex) (=> (TS#POVERTY e0 :0.96) (^ (starvation-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-in e0 u0 e1) (s-nn e0 x0) (taxpayers-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-in e0 x0 x1) (cuts-adj e0 x0) (s-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-in e1 e0 x0) (penalties-vb e0 u0 x0 u1) (s-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-in e1 e0 x0) (slavery-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-nn e0 x0) (flat-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (a-nn e0 x0) (income-nn e0 x0) (t-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (all-nn e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (business-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (carbon-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (carbon-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (collection-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (collections-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (continues-nn e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (corporate-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (corporate-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (cut-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (debt-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (debt-vb e0 u1 x0 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (deductions-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (duties-nn e0 x0) (import-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (duty-nn e0 x0) (import-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (end-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (estate-nn e0 x0) (millionaire-nn e0 x0) (s-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (estate-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (estate-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (estate-tax-nn e0 x0) (millionaire-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (evasion-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (evasion-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (exited-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (flat-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (flat-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (form-nn e0 x0) (irs-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (forms-nn e0 x0) (irs-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (gap-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (gap-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (gas-nn e0 x0) (tax-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (gas-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (in-nn e0 x0) (income-nn e0 x0) (s-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (incentive-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (incentives-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (tax-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (taxes-adj e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (income-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (income-vb e0 u0 x0 u1) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (inheritance-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (inheritance-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (internet-nn e0 x0) (taxation-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (internet-nn e0 x0) (taxation-vb e1 x0 e0 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (land-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (land-nn e0 x0) (taxation-nn e0 x0) (value-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (land-nn e0 x0) (taxation-vb e0 x0 x1 u0) (value-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (land-vb e03 e0 x0 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (levies-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (levy-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (lien-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (lien-rb e0 e1) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (lower-nn e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (p-nn e0 x0) (property-adj e0 x0) (property-nn e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (penalty-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (property-adj e0 x0) (property-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (property-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (property-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (property-nn e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (protesting-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (rate-nn e0 x0) (tax-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (rate-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (rates-nn e0 x0) (rates-vb e0 x0 u0 u1) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (rates-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (rates-vb e0 x0 x1 u0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (resource-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (resources-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sal-nn e0 x0) (salar-vb e0 u0 x0 u1) (taxes-adj e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sal-nn e0 x0) (salar-vb e0 u1 x0 u0) (tax-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sal-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sal-nn e0 x0) (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (salar-vb e0 u0 x0 u1) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sale-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (sales-nn e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tariff-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tariffs-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-adj e0 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-adj e0 x0) (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-debt-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-nn e0 x0) (teacher-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-nn e0 x0) (tobacco-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (tax-slavery-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u0 u1 u2) (taxation-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u0 u1 u2))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u0 x0 u1) (taxation-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u1 e1 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u1 u2 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 x0 e1 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 x0 x02 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 x0 x05 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e04 e0 u0 u1))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxation-vb e1 u0 e0 u1))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxes-adj e0 x0) (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxes-adj e0 x0) (tobacco-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxes-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxes-adj e1 e0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxes-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxpayer-adj e0 x0) (taxpayer-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxpayer-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxpayers-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxpaying-nn e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxs-adj e0 x0))))
(B (name ex) (=> (TS#TAXATION e0 :0.96) (^ (taxs-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (a-nn e0 x0) (affluence-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (accumulation-nn e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (accumulation-vb e0 u0 x0 u1) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (affluence-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (affluence-vb e0 u0 e1 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (affluence-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (affluent-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (aid-nn e0 x0) (financial-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (aid-vb e0 x0 u0 u1) (financial-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (although-nn e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (and-nn e0 x0) (poor-nn e0 x0) (rich-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (asset-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (assets-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (bourgeoisie-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (bourgeoisie-vb e0 x0 x06 u0) (bourgeoisie-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (building-nn e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (cash-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (clerical-adj e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (clerical-nn e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (debt-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (debts-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (do-nn e0 x0) (to-nn e0 x0) (well-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (do-vb x1 x0 x2 u0) (well-rb e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (door-adj e0 x0) (door-nn e0 x0) (money-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (door-nn e0 x0) (money-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (families-nn e0 x0) (wealthy-nn e0 x0) (white-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (family-nn e0 x0) (wealthy-adj e0 x0) (white-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (financial-adj e0 x0) (wealth-nn e0 x0) (wealth-vb e0 u0 e1 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (financial-adj e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (financial-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (financial-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-adj e0 x0) (income-nn e0 x0) (increase-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (increase-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (inequalities-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0) (inequality-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (income-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (inequality-nn e0 x0) (wage-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (man-nn e0 x0) (wealthy-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (man-nn e0 x0) (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (millionaire-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (millionaires-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wage-nn e0 x0) (wage-vb e0 u0 x0 u1) (wage-vb e0 x0 e1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wage-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wage-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wage-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wages-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (minimum-nn e0 x0) (wages-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 x0) (money-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 x0) (old-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 x0) (old-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-vb e0 u0 x0 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (money-vb e0 x0 u0 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (moneys-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (oil-nn e0 x0) (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (opulence-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (opulence-vb x0 x1 u0 u1))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (people-adj e0 x0) (rich-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (people-nn e0 x0) (rich-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (people-nn e0 x0) (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (people-vb e0 u1 e1 u0) (people-vb e0 x0 x02 u0) (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (poor-adj e0 x0) (rich-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (prosperity-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (rich-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (rich-nn e0 x0) (the-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (rich-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (riches-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (salaries-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (salaries-vb e0 x0 x02 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (salary-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (t-nn e0 x0) (wealth-nn e0 x0) (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (the-nn e0 x0) (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wage-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wage-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-nn e0 x0) (wealth-vb e0 x1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-vb e0 u1 x0 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-vb e0 x0 u1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealth-vb e0 x0 x1 u0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-adj e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-nn e0 x0))))
(B (name ex) (=> (TS#WEALTH e0 :0.96) (^ (wealthy-vb e0 u0 u1 u2))))

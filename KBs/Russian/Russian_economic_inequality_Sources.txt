;;
;; Economic Inequality
;; Russian Source Words
;;

;; Disease

(B (name bolezn) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (болезнь-nn e0 x)))
(B (name zabolevanie) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (заболевание-nn e0 x)))
(B (name nedug) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (недуг-nn e0 x)))
(B (name nedrorovje) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (нездоровье-nn e0 x)))

(B (name nasmork) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (насморк-nn e0 x)))
(B (name rak) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (рак-nn e0 x)))
(B (name chuma) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (чума-nn e0 x)))
(B (name paralich) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (паралич-nn e0 x)))
(B (name prokaza) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (проказа-nn e0 x)))
(B (name jazva) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (язва-nn e0 x)))
(B (name opuhol) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (опухоль-nn e0 x)))
(B (name opuhol) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (ущербность-nn e0 x)))
(B (name nasmork) (=> (^ (S#DISEASE e0 :0.45) (SS#DISEASE%TYPE x e0 :0.45)) (инфаркт-nn e0 x)))


;; Disease: Sick

(B (name bolnoj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (больной-adj e0 y)))
(B (name bolnojn) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (больной-nn e0 y)))
(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (нездоровый-adj e0 y)))
(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (невменяемый-adj e0 y)))
(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (вымирающий-adj e0 y)))

(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (парализованный-adj e0 y)))

(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (хронический-adj e0 y)))
(B (name nezdorovyj) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (хронически-rb e0 e1)))

(B (name invalid) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE x e0 :0.3) (R#SICK y e0 :0.3)) (инвалид-nn e0 y)))
(B (name pacient) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE x e0 :0.3) (R#SICK y e0 :0.3)) (пациент-nn e0 y)))

;; Of - Disease
(B (name of-disease) (=> (R#SICK y x :0.9) (^ (S#DISEASE x) (of-in e1 x y))))


;; Disease: Become Sick

(B (name bolet) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (болеть-vb e0 y u1 u2)))
(B (name zabolet) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (заболеть-vb e0 y u1 u2)))
(B (name zabolet) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (заболевать-vb e0 y u1 u2)))
(B (name razboletsja) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (разболеться-vb e0 y u1 u2)))
(B (name pribolet) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (приболеть-vb e0 y u1 u2)))
(B (name zaneduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (занедужить-vb e0 y u1 u2)))
(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (недужить-vb e0 y u1 u2)))
(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (вымирать-vb e0 y u1 u2)))

(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (изнемогать-vb e0 y u1 u2)))
(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (изнемочь-vb e0 y u1 u2)))

(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (ослабить-vb e0 y u1 u2)))
(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (ослаблять-vb e0 y u1 u2)))

(B (name neduzhit) (=> (^ (S#DISEASE e0 :0.3) (SS#DISEASE%TYPE e0 e0 :0.3) (R#SICK y e0 :0.3)) (парализовать-vb e0 y u1 u2)))


;; Disease: Treatment

(B (name lechenie) (=> (^ (S#DISEASE u :0.45) (SS#TREATMENT x u :0.45)) (лечение-nn e0 x)))
(B (name terapija) (=> (^ (S#DISEASE u :0.45) (SS#TREATMENT x u :0.45)) (терапия-nn e0 x)))

(B (name diagnoz) (=> (^ (S#DISEASE u :0.45) (SS#TREATMENT x u :0.45)) (диагноз-nn e0 x)))
(B (name diagnostika) (=> (^ (S#DISEASE u :0.45) (SS#TREATMENT x u :0.45)) (диагностика-nn e0 x)))

(B (name doktor) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT x u :0.3) (R#CURE-AGENT y e0 :0.3)) (доктор-nn e0 x)))
(B (name vrach) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT x u :0.3) (R#CURE-AGENT y e0 :0.3)) (врач-nn e0 x)))
(B (name lekarstvo) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT x u :0.3) (R#CURE-AGENT y e0 :0.3)) (лекарство-nn e0 x)))
(B (name medikament) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT x u :0.3) (R#CURE-AGENT y e0 :0.3)) (медикамент-nn e0 x)))

(B (name lechit) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (лечить-vb e0 x y z)))
(B (name diagnostirovat) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (диагностировать-vb e0 x y z)))
(B (name propisat) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (прописать-vb e0 x y z)))

(B (name lechitsja) (=> (^ (S#DISEASE u :0.45) (SS#TREATMENT e0 u :0.45)) (лечиться-vb e0 x u1 u2)))

(B (name neizlechimyj) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT e0 u :0.3) (R#SICK y e0 :0.3)) (неизлечимый-adj e0 y)))
(B (name izlechimyj) (=> (^ (S#DISEASE u :0.3) (SS#TREATMENT e0 u :0.3) (R#SICK y e0 :0.3)) (излечимый-adj e0 y)))


;; Of - Treatment
(B (name of-treatment) (=> (S#DISEASE y :0.9) (^ (SS#TREATMENT x u) (против-in e1 x y))))

;; From - Treatment
(B (name from-treatment) (=> (S#DISEASE y :0.9) (^ (SS#TREATMENT x u) (от-in e1 x y))))


;; Disease: Cure

(B (name vylechit) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (вылечить-vb e0 x y z)))
(B (name vylechivat) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (вылечивать-vb e0 x y z)))
(B (name zalechit) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (залечить-vb e0 x y z)))
(B (name zalechit) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (залечивать-vb e0 x y z)))
(B (name vrachevat) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#CURE-AGENT x e0 :0.3)) (врачевать-vb e0 x y z)))

(B (name izlechitsja) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (излечиться-vb e0 x y z)))
(B (name izlechivatsja) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (излечиваться-vb e0 x y z)))
(B (name vylechivatsja) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (вылечиться-vb e0 x y z)))
(B (name vylechivatsja) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (вылечиваться-vb e0 x y z)))

(B (name vyzdoravlivat) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (выздоравливать-vb e0 x y z)))
(B (name vyzdorovet) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (выздороветь-vb e0 x y z)))
(B (name popravitsja) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (поправиться-vb e0 x y z)))
(B (name idti-na-popravku) (=> (^ (S#DISEASE u :0.3) (SS#CURE e0 u :0.3) (R#SICK x e0 :0.3)) (^ (идти-vb e1 x y z) (на-in e2 e1 e0) (поправка-nn e3 e0))))

(B (name vyzdorovlenie) (=> (^ (S#DISEASE x :0.3) (SS#CURE y x :0.3)) (выздоровление-nn e0 y)))
(B (name izlechenie) (=> (^ (S#DISEASE x :0.3) (SS#CURE y x :0.3)) (излечение-nn e0 y)))
(B (name popravka) (=> (^ (S#DISEASE x :0.3) (SS#CURE y x :0.3)) (поправка-nn e0 y)))

;; Of - Cure
(B (name of-cure) (=> (R#SICK y e0 :0.9) (^ (SS#CURE x u) (of-in e1 x y))))

;; From - Cure
(B (name from-cure) (=> (S#DISEASE y :0.9) (^ (SS#CURE e0 u) (от-in e1 e0 y))))


;; Disease: Epidemic

(B (name epidemija) (=> (^ (S#DISEASE x :0.45) (SS#TYPE e0 x :0.45)) (эпидемия-nn e0 y)))
(B (name pandemija) (=> (^ (S#DISEASE x :0.45) (SS#TYPE e0 x :0.45)) (пандемия-nn e0 y)))
(B (name virus) (=> (^ (S#DISEASE x :0.45) (SS#TYPE e0 x :0.45)) (вирус-nn e0 y)))
(B (name virus) (=> (^ (S#DISEASE x :0.45) (SS#TYPE e0 x :0.45)) (эпидемический-adj e0 y)))


;; Disease: Symptoms

(B (name symptom)  (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (симптом-nn e0 y)))
(B (name symptomatic)  (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS e0 x :0.45)) (симптоматический-adj e0 y)))
(B (name symptomatic)  (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS e0 x :0.45)) (симптоматически-rb e0 y)))

(B (name krovotechenie) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (кровотечение-nn e0 y)))
(B (name rana) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (рана-nn e0 y)))
(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (боль-nn e0 y)))
(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (головокружение-nn e0 y)))
(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (слабость-nn e0 y)))
(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (тошнота-nn e0 y)))
(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS y x :0.45)) (жар-nn e0 y)))

(B (name bol) (=> (^ (S#DISEASE x :0.45) (SS#SYMPTOMS e0 x :0.45)) (болезненный-adj e0 y)))

(B (name krovotochit) (=> (^ (S#DISEASE u :0.3) (SS#SYMPTOMS e0 u :0.3) (R#SICK y e0 :0.3)) (кровоточить-vb e0 y u1 u2)))
(B (name krovotochit) (=> (^ (S#DISEASE u :0.3) (SS#SYMPTOMS e0 u :0.3) (R#SICK y e0 :0.3)) (тошнить-vb e0 y u1 u2)))

;; Of - Symptom
(B (name of-symptom) (=> (S#DISEASE y :0.9) (^ (SS#SYMPTOMS x u) (of-in e1 x y))))

(B (name dismap) (=> (I#DISEASE x :0.9) (S#DISEASE x)))
(B (name dis-typemap) (=> (I#DISEASE%TYPE x y :0.9) (SS#DISEASE%TYPE x y)))
(B (name curemap) (=> (I#CURE x y :0.9) (SS#CURE x y)))
(B (name treatmentmap) (=> (I#TREATMENT x y :0.9) (SS#TREATMENT x y)))


;; Body of Water

(B (name voda) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (вода-nn e0 x)))
(B (name more) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (море-nn e0 y)))
(B (name okean) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (океан-nn e0 y)))
(B (name reka) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (река-nn e0 y)))
(B (name rucheek) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (ручей-nn e0 y)))
(B (name rucheek) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#BODY_OF_WATER%TYPE x e0 :0.45)) (ручеек-nn e0 y)))

;; Of - Body of Water
(B (name of-BODY_OF_WATER) (=> (R#MATTER x y :0.9) (^ (S#BODY_OF_WATER z) (SS#BODY_OF_WATER%TYPE y z) (of-in e1 y x))))


;; Body of Water: Large Features

(B (name voda) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#LARGE_FEATURES e0 e0 :0.45)) (безбрежный-adj e0 x)))


;; Body of Water: Movement

(B (name potok) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (поток-nn e0 y)))
(B (name potok) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (отток-nn e0 y)))
(B (name potok) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (приток-nn e0 y)))
(B (name istochnik) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (источник-nn e0 y)))
(B (name tech) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (течь-nn e0 y)))
(B (name utechka) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (утечка-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (волна-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (прилив-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (отлив-nn e0 y)))

(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#MOVEMENT y x :0.45)) (мель-nn e0 y)))

(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (течь-vb e0 x u1 u2)))
(B (name utech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (утечь-vb e0 x u1 u2)))
(B (name utekat) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (утекать-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (потечь-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (протечь-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (протекать-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (притекать-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (вытечь-vb e0 x u1 u2)))
(B (name vytekat) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (вытекать-vb e0 x u1 u2)))
(B (name vytech) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (стечь-vb e0 x u1 u2)))
(B (name vytekat) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (стекать-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (литься-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (вылиться-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (политься-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (приливать-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (отливать-vb e0 x u1 u2)))

(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (налить-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (лить-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (вылить-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (выливать-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (слить-vb e0 x u1 u2)))
(B (name litsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (сливать-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (влить-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (вливать-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (струиться-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (капать-vb e0 x u1 u2)))

(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (плавать-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (плыть-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (купаться-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (искупаться-vb e0 x u1 u2)))
(B (name struitsja) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.3) (R#STREAMING x e0 :0.3)) (выкупаться-vb e0 x u1 u2)))
(B (name pogruzitsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (погрузиться-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (погружаться-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (окунуться-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (окунаться-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (окунуть-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#BODY_OF_WATER%MOVEMENT e0 y :0.2)) (^ (окунать-vb e0 x y u) (в-in e1 e0 z))))

;; Of - Movement
(B (name of-stream) (=> (R#STREAMING y x :0.9) (^ (SS#BODY_OF_WATER%MOVEMENT x u) (of-in e1 x y))))


;; Body of Water: Danger

(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.4) (SS#DANGER y x :0.4)) (цунами-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.4) (SS#DANGER y x :0.4)) (потоп-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.4) (SS#DANGER y x :0.4)) (наводнение-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#DANGER y x :0.45)) (трясина-nn e0 y)))
(B (name volna) (=> (^ (S#BODY_OF_WATER x :0.45) (SS#DANGER y x :0.45)) (болото-nn e0 y)))

(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (потопить-vb e0 x y z)))
(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (топить-vb e0 x y z)))
(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (затопить-vb e0 x y z)))
(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (захлестнуть-vb e0 x y z)))
(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (захлестывать-vb e0 x y z)))

(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (наводнить-vb e0 x y z)))
(B (name volna) (=> (^ (S#BODY_OF_WATER e0 :0.45) (SS#DANGER e0 e0 :0.45)) (наводнять-vb e0 x y z)))

(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (захлебнуться-vb e0 x u1 u2)))
(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (захлебываться-vb e0 x u1 u2)))
(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (тонуть-vb e0 x u1 u2)))
(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (утонуть-vb e0 x u1 u2)))
(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (потонуть-vb e0 x u1 u2)))
(B (name techvb) (=> (^ (S#BODY_OF_WATER y :0.45) (SS#BODY_OF_WATER%DANGER e0 y :0.45)) (затонуть-vb e0 x u1 u2)))

;; Shoal
;(B (name mel) (=> (^ (S#ВОДА_WATER x :0.45) (SS#МЕЛЬ_SHOAL y x :0.45)) (мель-nn e0 y)))
;(B (name melkovodje) (=> (^ (S#ВОДА_WATER x :0.45) (SS#МЕЛЬ_SHOAL y x :0.45)) (мелководье-nn e0 y)))
;(B (name obmelchat) (=> (^ (S#ВОДА_WATER y :0.3) (SS#МЕЛЬ_SHOAL e0 y :0.3) (R#STREAMING x e0 :0.3)) (обмельчать-vb e0 x u1 u2)))
;(B (name melchat) (=> (^ (S#ВОДА_WATER y :0.3) (SS#МЕЛЬ_SHOAL e0 y :0.3) (R#STREAMING x e0 :0.3)) (мельчать-vb e0 x u1 u2)))

;; Drought
;(B (name vysohnut) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (высохнуть-vb e0 x u1 u2)))
;(B (name vysyhat) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (высыхать-vb e0 x u1 u2)))
;(B (name peresohnut) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (пересохнуть-vb e0 x u1 u2)))
;(B (name peresyhat) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (пересыхать-vb e0 x u1 u2)))
;(B (name zaesohnut) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (засохнуть-vb e0 x u1 u2)))
;(B (name zaresyhat) (=> (^ (S#ВОДА_WATER y :0.3) (SS#ЗАСУХА_DROUGHT e0 y :0.3) (R#STREAMING x e0 :0.3)) (засыхать-vb e0 x u1 u2)))

;; Drink
;(B (name pit) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#DRINK e0 y:0.2) (R#DRINKER x e0 :0.2) (R#MATTER y u :0.2)) (пить-vb e0 x y u2)))
;(B (name vypit) (=> (^ (S#BODY_OF_WATER y :0.2) (SS#DRINK e0 y :0.2) (R#DRINKER x e0 :0.2) (R#MATTER y u :0.2)) (выпить-vb e0 x y u2)))
;(B (name napitsja) (=> (^ (S#WATER y :0.3) (SS#DRINK e0 y :0.3) (R#DRINKER x e0 :0.3)) (напиться-vb e0 x u1 u2)))
;(B (name utolit-zhazhdu) (=> (^ (S#WATER u :0.3) (SS#DRINK e0 u :0.3) (R#DRINKER x e0 :0.3)) (^ (утолить-vb e0 x z u2) (жажда-nn e2 z))))
;(B (name utoljat-zhazhdu) (=> (^ (S#WATER u :0.3) (SS#DRINK e0 u :0.3) (R#DRINKER x e0 :0.3)) (^ (утолять-vb e0 x z u2) (жажда-nn e2 z))))

;; Thirst
;(B (name zhazhda) (=> (^ (S#BODY_OF_WATER y :0.3) (SS#THIRST x :0.3) (R#DRINKER x e0 :0.3)) (жажда-nn e0 x)))

;; Of - Thirst
;(B (name of-thirst) (=> (R#THIRST-OBJECT y x :0.9) (^ (SS#THIRST x u) (of-in e1 x y))))

(B (name watermap) (=> (I#BODY_OF_WATER x :0.9) (S#BODY_OF_WATER x)))
(B (name watertypemap) (=> (I#BODY_OF_WATER%TYPE x y :0.9) (SS#BODY_OF_WATER%TYPE x y)))
;(B (name drinkmap) (=> (I#DRINK x y y :0.9) (SS#DRINK x y y)))
;(B (name thirstmap) (=> (I#THIRST x y y :0.9) (SS#THIRST x y y)))
(B (name streammap) (=> (I#MOVEMENT x y :0.9) (SS#BODY_OF_WATER%MOVEMENT x y)))


;; Material

;; Material: Cut

;(B (name урезать) (=> (^ (S#MATERIAL y :0.3) (SS#CUT e0 y :0.3) (R#CUT-AGENT x e0 :0.3)) (урезать-vb e0 x y u2)))

;(B (name materialmap) (=> (I#MATERIAL x :0.9) (S#MATERIAL x)))
;(B (name cutmap) (=> (I#CUT x y :0.9) (SS#CUT x y)))


;; Struggle

(B (name vojna) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (война-nn e0 x)))
(B (name borba) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (борьба-nn e0 x)))
(B (name bitva) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (битва-nn e0 x)))
(B (name boj) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (бой-nn e0 x)))
(B (name srazhenie) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (сражение-nn e0 x)))
(B (name razgrom) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (разгром-nn e0 x)))
(B (name razgrom) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (драка-nn e0 x)))

(B (name ataka) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (атака-nn e0 x)))
(B (name napadenie) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (нападение-nn e0 x)))
(B (name nastuplenie) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (наступление-nn e0 x)))
(B (name shturm) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (штурм-nn e0 x)))

(B (name pobeda) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-ADVERSARY y x :0.3)) (^ (победа-nn e0 x) (над-in e1 x y))))
(B (name preodolenie) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-ADVERSARY y x :0.3)) (^ (преодоление-nn e0 x) (of-in e1 x y))))

(B (name voevat) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (воевать-vb e0 x u1 u2)))
(B (name borotsja) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (бороться-vb e0 x u1 u2)))
(B (name bitsja) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (биться-vb e0 x u1 u2)))
(B (name srazhatsja) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (сражаться-vb e0 x u1 u2)))
(B (name dratsja) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (драться-vb e0 x u1 u2)))

(B (name atakovat) (=> (^ (S#STRUGGLE e0 :0.2) (SS#STRUGGLE%TYPE x e0 :0.2) (R#STRUGGLE-AGENT x e0 :0.2) (R#STRUGGLE-ADVERSARY y e0 :0.2)) (атаковать-vb e0 x y u2)))
(B (name napadat) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (нападать-vb e0 x u1 u2)))
(B (name napast) (=> (^ (S#STRUGGLE e0 :0.3) (SS#STRUGGLE%TYPE x e0 :0.3) (R#STRUGGLE-AGENT x e0 :0.3)) (напасть-vb e0 x u1 u2)))

(B (name pobedit) (=> (^ (S#STRUGGLE e0 :0.2) (SS#STRUGGLE%TYPE x e0 :0.2) (R#STRUGGLE-AGENT x e0 :0.2) (SS#ADVERSARY y e0 :0.2)) (победить-vb e0 x y u2)))
(B (name pobezhdat) (=> (^ (S#STRUGGLE e0 :0.2) (SS#STRUGGLE%TYPE x e0 :0.2) (R#STRUGGLE-AGENT x e0 :0.2) (SS#ADVERSARY y e0 :0.2)) (побеждать-vb e0 x y u2)))
(B (name preodolet) (=> (^ (S#STRUGGLE e0 :0.2) (SS#STRUGGLE%TYPE x e0 :0.2) (R#STRUGGLE-AGENT x e0 :0.2) (SS#ADVERSARY y e0 :0.2)) (преодолеть-vb e0 x y u2)))

(B (name borba-s) (=> (R#STRUGGLE-ADVERSARY y x :0.9) (^ (SS#STRUGGLE%TYPE x e0) (с-in x y))))
(B (name borba-protiv) (=> (R#STRUGGLE-ADVERSARY y x :0.9) (^ (SS#STRUGGLE%TYPE x e0) (против-in x y))))
(B (name borba-na) (=> (R#STRUGGLE-ADVERSARY y x :0.9) (^ (SS#STRUGGLE%TYPE x e0) (на-in x y))))

(B (name vrag) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY x u :0.45)) (враг-nn e1 x)))
(B (name protivnik) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY x u :0.45)) (противник-nn e1 x)))
(B (name protivnik) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY x u :0.45)) (оппонент-nn e1 x)))
(B (name nedrug) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY x u :0.45)) (недруг-nn e1 x)))
(B (name vrazheskij) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY e1 u :0.45)) (вражеский-adj e1 x)))
(B (name vrazhdebnyj) (=> (^ (S#STRUGGLE u :0.45) (SS#ADVERSARY e1 u :0.45)) (враждебный-adj e1 x)))

(B (name vrazhdebnyj) (=> (^ (S#STRUGGLE e0 :0.45) (SS#ADVERSARY e0 e0 :0.45)) (противостоять-vb e0 x y z)))

(B (name vrag-of) (=> (R#STRUGGLE-AGENT y e0 :0.9) (^ (SS#ADVERSARY x e0) (of-in e1 x y))))

(B (name front) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (фронт-nn e0 y)))
(B (name soldat) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (солдат-nn e0 y)))
(B (name soldat) (=> (^ (S#STRUGGLE e0 :0.45) (SS#STRUGGLE%TYPE x e0 :0.45)) (армия-nn e0 y)))


(B (name oruzhie) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (оружие-nn e0 y)))
(B (name orudie) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (орудие-nn e0 y)))
(B (name pushka) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (пушка-nn e0 y)))
(B (name ruzhje) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (ружье-nn e0 y)))
(B (name ruzhje2) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (ружьё-nn e0 y)))
(B (name revolver) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (револьвер-nn e0 y)))
(B (name pistolet) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (пистолет-nn e0 y)))
(B (name bomba) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (бомба-nn e0 y)))
(B (name mina) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (мина-nn e0 y)))
(B (name nozh) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (нож-nn e0 y)))
(B (name nozhik) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (ножик-nn e0 y)))
(B (name pulemet) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (пулемет-nn e0 y)))
(B (name pulemet2) (=> (^ (S#STRUGGLE e0 :0.33) (SS#STRUGGLE%TYPE x e0 :0.33) (R#WEAPON x e0 :0.33)) (пулемёт-nn e0 y)))

(B (name strugglemap) (=> (I#STRUGGLE x :0.9) (S#STRUGGLE x)))
(B (name struggle-typemap) (=> (I#STRUGGLE%TYPE x e0 :0.9) (SS#STRUGGLE%TYPE x e0)))
(B (name adversarymap) (=> (I#ADVERSARY x u :0.9) (SS#ADVERSARY x u)))


;; School

;(B (name shkola) (=> (^ (S#ШКОЛА_SCHOOL x :0.45) (R#SCHOOL-TEACHER x x :0.45)) (школа-nn e0 x)))
;(B (name nauchit) (=> (^ (S#ШКОЛА_SCHOOL u :0.2) (SS#УЧИТЬ_TEACH e0 u :0.2) (R#SCHOOL-STUDENT y e0 :0.2) (R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (научить-vb e0 x y z)))
;(B (name uchit) (=> (^ (S#ШКОЛА_SCHOOL u :0.2) (SS#УЧИТЬ_TEACH e0 u :0.2) (R#SCHOOL-STUDENT y e0 :0.2) (R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (учить-vb e0 x y z)))
;(B (name obuchit) (=> (^ (S#ШКОЛА_SCHOOL u :0.2) (SS#УЧИТЬ_TEACH e0 u :0.2) (R#SCHOOL-STUDENT y e0 :0.2) (R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (обучить-vb e0 x y z)))
;(B (name obuchat) (=> (^ (S#ШКОЛА_SCHOOL u :0.2) (SS#УЧИТЬ_TEACH e0 u :0.2) (R#SCHOOL-STUDENT y e0 :0.2) (R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (обучать-vb e0 x y z)))
;(B (name uchitel) (=> (^ (S#ШКОЛА_SCHOOL u :0.45) (SS#УЧИТЬ_TEACH e0 u :0.45) (R#SCHOOL-TEACHER x e0)) (учитель-nn e0 x)))

;; Of - School
;(B (name of-school) (=> (R#SCHOOL-SUBJECT y x :0.9) (^ (S#ШКОЛА_SCHOOL x) (of-in e1 x y))))

;(B (name schoolmap) (=> (I#SCHOOL x :0.9) (S#ШКОЛА_SCHOOL x)))


;; Exam

;(B (name ekzamen) (=> (^ (S#ШКОЛА_SCHOOL x :0.45) (SS#ЭКЗАМЕН_EXAMINATION y x :0.45)) (экзамен-nn e0 y)))
;(B (name test) (=> (^ (S#ШКОЛА_SCHOOL x :0.45) (SS#ЭКЗАМЕН_EXAMINATION y x :0.45)) (тест-nn e0 y)))
;(B (name proverka) (=> (^ (S#ШКОЛА_SCHOOL x :0.45) (SS#ЭКЗАМЕН_EXAMINATION y x :0.45)) (проверка-nn e0 y)))
;(B (name ekzamen-na) (=> (R#SCHOOL-SUBJECT y z :0.9) (^ (SS#ЭКЗАМЕН_EXAMINATION x z) (на-in e1 x y))))


;; Crime

;; Type

(B (name prestuplenie) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (преступление-nn e0 x)))
(B (name prestuplenie) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (правонарушение-nn e0 x)))
(B (name prestuplenie) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (^ (нарушение-nn e0 x) (право-nn e1 y) (of-in e2 x y))))

(B (name grabezh) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (грабеж-nn e0 x)))
(B (name grabezh) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (грабёж-nn e0 x)))
(B (name ograblenie) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (ограбление-nn e0 x)))

(B (name krazha) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (кража-nn e0 x)))
(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (воровство-nn e0 x)))

(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (мошенничество-nn e0 x)))
(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (спекуляция-nn e0 x)))
(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (шантаж-nn e0 x)))
(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (насилие-nn e0 x)))
(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (террор-nn e0 x)))

(B (name vorovstvo) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (бандитизм-nn e0 x)))

(B (name grabitelskij) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (грабительский-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (воровской-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (преступный-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (бандитский-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (мафиозный-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (шулерский-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (спекулянтский-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (жульнический-adj e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE e0 e0 :0.45)) (убийственный-adj e0 x)))

(B (name grabit) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (грабить-vb e0 x z u2)))
(B (name ograbit) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (ограбить-vb e0 x z u2)))

(B (name krast) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (красть-vb e0 x z u2)))
(B (name ukrast) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (украсть-vb e0 x z u2)))
(B (name obokrast) (=> (^ (S#CRIME e0 :0.2) (SS#TYPE e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#CRIME-VICTIM z e0 :0.2)) (обокрасть-vb e0 x z u2)))

(B (name vorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (воровать-vb e0 x z u2)))
(B (name svorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#THEFT-THEME z e0 :0.2)) (своровать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#CRIME-VICTIM z e0 :0.2)) (обворовать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#CRIME-VICTIM z e0 :0.2)) (наворовать-vb e0 x z u2)))

(B (name obvorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#CRIME-VICTIM z e0 :0.2)) (жульничать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.2) (SS#CRIME%TYPE e0 e0 :0.2) (R#CRIME-AGENT x e0 :0.2) (R#CRIME-VICTIM z e0 :0.2)) (спекульровать-vb e0 x z u2)))

(B (name obvorovat) (=> (^ (S#CRIME e0 :0.33) (SS#CRIME%TYPE e0 e0 :0.33) (R#CRIME-AGENT x e0 :0.33)) (мошенничать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.33) (SS#CRIME%TYPE e0 e0 :0.33) (R#CRIME-AGENT x e0 :0.33)) (насиловать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.33) (SS#CRIME%TYPE e0 e0 :0.33) (R#CRIME-AGENT x e0 :0.33)) (изнасиловать-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.33) (SS#CRIME%TYPE e0 e0 :0.33) (R#CRIME-AGENT x e0 :0.33)) (убить-vb e0 x z u2)))
(B (name obvorovat) (=> (^ (S#CRIME e0 :0.33) (SS#CRIME%TYPE e0 e0 :0.33) (R#CRIME-AGENT x e0 :0.33)) (убивать-vb e0 x z u2)))


;; Crime: Perpetrator

(B (name prestupnik) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (преступник-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (бандит-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (банда-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (мафия-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (злоумышленник-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (правонарушитель-nn e0 x)))

(B (name grabitel) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (грабитель-nn e0 x)))
(B (name vor) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (вор-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (ворюга-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (воришка-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (ворье-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (ворьё-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (шулер-nn e0 x)))
(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (похититель-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (мошенник-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (насильник-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (спекулянт-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (жулик-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (жулье-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (жульё-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (шантажист-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (убийца-nn e0 x)))
(B (name bandit) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR x e0 :0.45)) (террорист-nn e0 x)))

(B (name vorjuga) (=> (^ (S#CRIME e0 :0.45) (SS#PERPETRATOR e0 e0 :0.45)) (вороватый-adj e0 x)))

;; From - Crime
(B (name vorovat-u) (=> (R#CRIME-VICTIM y e0 :0.9) (^ (S#CRIME x) (у-in e1 x y))))

(B (name nasilie-nad) (=> (^ (S#CRIME e0 :0.3) (SS#CRIME%TYPE x e0 :0.3) (R#CRIME-VICTIM y x :0.3)) (^ (насилие-nn e0 x) (над-in e1 x y))))
(B (name nasilie) (=> (^ (S#CRIME e0 :0.45) (SS#CRIME%TYPE x e0 :0.45)) (насилие-nn e0 x)))


;; Punishment

(B (name nakazanie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (наказание-nn e0 x)))
(B (name kara) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (кара-nn e0 x)))
(B (name prigovor) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (приговор-nn e0 x)))
(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (возмездие-nn e0 x)))
(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (взыскание-nn e0 x)))
(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (суд-nn e0 x)))
(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (осуждение-nn e0 x)))

(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (преследование-nn e0 x)))

(B (name vozmezdie) (=> (^ (S#CRIME u :0.45) (SS#PUNISHMENT x u :0.45)) (надзиратель-nn e0 x)))

(B (name nakazat) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (наказать-vb e0 x y u)))
(B (name nakazyvat) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (наказывать-vb e0 x y u)))
(B (name karat) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (карать-vb e0 x y u)))
(B (name pokarat) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (покарать-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (приговорить-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (приговаривать-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (взыскать-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (преследовать-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (осудить-vb e0 x y u)))
(B (name prigovorit) (=> (^ (S#CRIME u1 :0.2) (SS#PUNISHMENT e0 u1 :0.2) (R#PUNISHMENT-AGENT x e0 :0.2) (R#PUNISHMENT-VICTIM y e0 :0.2)) (осуждать-vb e0 x y u)))

;(B (name nakazannyj) (=> (^ (S#PUNISHMENT e0 :0.45) (R#PUNISHMENT-VICTIM x e0 :0.45)) (наказанный-adj e0 x)))
;(B (name nakazannyj) (=> (^ (S#PUNISHMENT e0 :0.45) (R#PUNISHMENT-VICTIM x e0 :0.45)) (приговоренный-adj e0 x)))
;(B (name nakazannyj) (=> (^ (S#PUNISHMENT e0 :0.45) (R#PUNISHMENT-VICTIM x e0 :0.45)) (приговорённый-adj e0 x)))

(B (name crimemap) (=> (I#CRIME x :0.9) (S#CRIME x)))
;(B (name crime-typemap) (=> (I#CRIME-TYPE x y :0.9) (SS#CRIME-TYPE x y)))
;(B (name theftmap) (=> (I#THEFT x :0.9) (SS#TYPE x)))
(B (name perpetratorsmap) (=> (I#PERPETRATORS x y :0.9) (SS#PERPETRATORS x y)))


;; Crime: Victim

(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM x e0 :0.3) (R#VICTIM x e0 :0.3)) (жертва-nn e0 x)))
(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM x e0 :0.3) (R#VICTIM x e0 :0.3)) (добыча-nn e0 x)))
(B (name zhertva) (=> (^ (SS#VICTIM x e0 :0.4) (R#VICTIM x e0 :0.4)) (^ (жертва-nn e0 x) (S#CRIME e1 :0.45) (SS#TYPE y e1 :0.45) (of-in e2 x y))))
(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM x e0 :0.3) (R#VICTIM x e0 :0.3)) (жертвами-nn e0 x)))

(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM x e0 :0.3) (R#VICTIM x e0 :0.3)) (пострадавший-nn e0 x)))
(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM x e0 :0.3) (R#VICTIM x e0 :0.3)) (пострадавший-adj e0 x)))

(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM e0 e0 :0.3) (R#VICTIM x e0 :0.3)) (пострадать-vb e0 x y z)))
(B (name zhertva) (=> (^ (S#CRIME e0 :0.3) (SS#VICTIM e0 e0 :0.3) (R#VICTIM x e0 :0.3)) (страдать-vb e0 x y z)))


;; Confinement

;; Confinement: Confined Space

(B (name zatochenie) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (заточение-nn e0 x)))
(B (name zatochenie) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (заключение-nn e0 x)))
(B (name turma) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (тюрьма-nn e0 x)))
(B (name kletka) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (клетка-nn e0 x)))
(B (name kletka) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (ограничение-nn e0 x)))

;(B (name boloto) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (болото-nn e0 x)))
;(B (name boloto) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINED_SPACE x e0 :0.45)) (трясина-nn e0 x)))


;; Confinement: Restraints

(B (name lovushka) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (ловушка-nn e0 x)))
(B (name zapadnja) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (западня-nn e0 x)))
(B (name kapkan) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (капкан-nn e0 x)))
(B (name silok) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (силок-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (путы-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (оковы-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (окова-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (кандалы-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (цепь-nn e0 x)))
(B (name udavka) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (удавка-nn e0 x)))
;(B (name barjer) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (барьер-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (привязка-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (сеть-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (потолок-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (рамка-nn e0 x)))
(B (name puty) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%RESTRAINTS x u :0.45)) (узда-nn e0 x)))

(B (name zatochit) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (заточить-vb e0 x y u)))
(B (name zatochit) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (заточать-vb e0 x y u)))
(B (name zagnat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (загнать-vb e0 x y u)))
(B (name zagnat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (загонять-vb e0 x y u)))
(B (name pojmat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (поймать-vb e0 x y u)))
(B (name lovit) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (ловить-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (связать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (связывать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (привязать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (привязывать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (сковать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (сковывать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (приковать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (приковывать-vb e0 x y u)))
(B (name svjazat) (=> (^ (S#CONFINEMENT u :0.2) (SS#CONFINEMENT%RESTRAINTS e0 u :0.2) (R#RESTRAINTS-AGENT x e0 :0.2) (R#RESTRAINTS-PATIENT y e0 :0.2)) (ограничить-vb e0 x y u)))


;; Confinement: Exit

(B (name vyhod) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (выход-nn e0 x)))
(B (name vyhod) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (амнистия-nn e0 x)))
;(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (дверь-nn e0 x)))
(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (бегство-nn e0 x)))
(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (побег-nn e0 x)))

(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (^ (свобода-nn e0 x) (от-in e1 x u))))
(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (^ (освобождение-nn e0 x) (от-in e1 x u))))

(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (свобода-nn e0 x)))
(B (name dver) (=> (^ (S#CONFINEMENT u :0.45) (SS#CONFINEMENT%EXIT x u :0.45)) (освобождение-nn e0 x)))

(B (name kletka) (=> (^ (S#CONFINEMENT e0 :0.45) (SS#CONFINEMENT%EXIT e0 e0 :0.45)) (безысходный-adj e0 x)))

(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (вырваться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (вырываться-vb e0 x y u) (из-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (сбежать-vb e0 x y u) (из-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (сбегать-vb e0 x y u) (из-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (выбраться-vb e0 x y u) (из-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (выбираться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (вытащить-vb e0 x y u) (из-in e1 e0 z))))
(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (вытаскить-vb e0 x y u) (из-in e1 e0 z))))

(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (освободиться-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (освобождаться-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (ускользать-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (ускользнуть-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (уходить-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (уйти-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (сбежать-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (сбегать-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (убежать-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (убегать-vb e0 x y u) (от-in e1 e0 z))))
(B (name exit) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (^ (бегать-vb e0 x y u) (от-in e1 e0 z))))

(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (освободить-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (освобождать-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (избавить-vb e0 x y u) (от-in e1 e0 z))))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (^ (избавлять-vb e0 x y u) (от-in e1 e0 z))))

(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (вырваться-vb e0 x y u)))
(B (name vyrvatsja-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (вырываться-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (сбежать-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (сбегать-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (убежать-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (убегать-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (выбраться-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (выбираться-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (освободиться-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT x e0 :0.3)) (освобождаться-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (вытащить-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (вытаскивать-vb e0 x y u)))

(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (освободить-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (освобождать-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (избавить-vb e0 x y u)))
(B (name sbezhat-iz) (=> (^ (S#CONFINEMENT u :0.3) (SS#CONFINEMENT%EXIT e0 u :0.3) (R#ESCAPE-AGENT y e0 :0.3)) (избавлять-vb e0 x y u)))

(B (name confinementmap) (=> (I#CONFINEMENT x :0.9) (S#CONFINEMENT x)))
(B (name confinedspacemap) (=> (I#CONFINED_SPACE x y :0.9) (SS#CONFINED_SPACE x y)))
(B (name confinement-restraintsmap) (=> (I#RESTRAINTS x y :0.9) (SS#CONFINEMENT%RESTRAINTS x y)))
(B (name exitmap) (=> (I#EXIT x y :0.9) (SS#CONFINEMENT%EXIT x y)))


;; Abyss

(B (name propast) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (пропасть-nn e0 x)))
(B (name propast) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (бездна-nn e0 x)))
(B (name ad) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (ад-nn e0 x)))
(B (name peshhera) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (пещера-nn e0 x)))
(B (name dyra) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (дыра-nn e0 x)))
(B (name dyra) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (яма-nn e0 x)))
(B (name chernaya-dyra) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (^ (черный-adj e0 x) (дыра-nn e1 x))))
(B (name chernaya-dyra2) (=> (^ (S#ABYSS e0 :0.45) (SS#ABYSS%TYPE x e0 :0.45)) (^ (чёрный-adj e0 x) (дыра-nn e1 x))))


;; Abyss: Depth

(B (name glubina) (=> (^ (S#ABYSS u :0.45) (SS#DEPTH x u :0.45)) (глубина-nn e0 x)))
(B (name glubokij) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (глубокий-adj e0 x)))
(B (name glubokij) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (глубочайший-adj e0 x)))
(B (name glubokij) (=> (^ (S#ABYSS u :0.45) (SS#DEPTH e0 u :0.45)) (глубже-rb e0 x)))
(B (name bezdonnyj) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (бездонный-adj e0 x)))
(B (name uglublenie) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (^ (углубление-nn e0 y) (of-in e1 y x))))

(B (name bezdonnyj) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (углубляться-vb e0 x y z)))
(B (name bezdonnyj) (=> (^ (S#ABYSS x :0.45) (SS#DEPTH e0 x :0.45)) (углубиться-vb e0 x y z)))


;; Abyss: Entrance

;(B (name pogruzitsja-v) (=> (^ (S#ABYSS z :0.33) (SS#ABYSS%ENTRANCE e0 z :0.33) (R#ABYSS-THEME x e0 :0.33)) (^ (погрузиться-vb e0 x y u) (в-in e1 e0 z))))
;(B (name pogruzhatsja-v) (=> (^ (S#ABYSS z :0.33) (SS#ABYSS%ENTRANCE e0 z :0.33) (R#ABYSS-THEME x e0 :0.33)) (^ (погружаться-vb e0 x y u) (в-in e1 e0 z))))
(B (name provalitsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (провалиться-vb e0 x y u) (в-in e1 e0 z))))
(B (name provalitsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (свалиться-vb e0 x y u) (в-in e1 e0 z))))
(B (name provalivatsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (проваливаться-vb e0 x y u) (в-in e1 e0 z))))
(B (name tolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (толкнуть-vb e0 x y u) (в-in e1 e0 z))))
(B (name stolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (столкнуть-vb e0 x y u) (в-in e1 e0 z))))
(B (name tolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (бросить-vb e0 x y u) (в-in e1 e0 z))))
(B (name stolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (сбросить-vb e0 x y u) (в-in e1 e0 z))))
(B (name tolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (кинуть-vb e0 x y u) (в-in e1 e0 z))))
(B (name stolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (скинуть-vb e0 x y u) (в-in e1 e0 z))))
(B (name stolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (сползти-vb e0 x y u) (в-in e1 e0 z))))
(B (name stolknut-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (сползать-vb e0 x y u) (в-in e1 e0 z))))

;(B (name pogruzitsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (погрузиться-vb e0 x y u)))
;(B (name pogruzhatsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (погружаться-vb e0 x y u)))
(B (name provalitsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (провалиться-vb e0 x y u)))
(B (name provalivatsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (проваливаться-vb e0 x y u)))

(B (name provalivatsja-v) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%ENTRANCE e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (балансировать-vb e0 x y u)))

(B (name kraj) (=> (^ (S#ABYSS u :0.45) (SS#ABYSS%ENTRANCE x u :0.45)) (край-nn e0 x)))
(B (name gran) (=> (^ (S#ABYSS u :0.45) (SS#ABYSS%ENTRANCE x u :0.45)) (грань-nn e0 x)))


;; Abyss: Exit

(B (name vybratsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (S#ABYSS e2) (выбраться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vybratsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (S#ABYSS e2) (выбираться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (выкарабкаться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (вылезти-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (вылезать-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (вытащить-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (вытаскивать-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (подняться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (подниматься-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (выскочить-vb e0 x y u) (из-in e1 e0 z))))

(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (выкарабкаться-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (вылезти-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (вылезать-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (выбраться-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (выбираться-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (вытащить-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (вытаскивать-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (подняться-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (подниматься-vb e0 x y u)))
(B (name vykarabkatsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (выскочить-vb e0 x y u)))

(B (name vybratsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (S#ABYSS e1) (выбраться-vb e0 x y u))))
(B (name vybratsja-iz) (=> (^ (S#ABYSS z :0.3) (SS#ABYSS%EXIT e0 z :0.3) (R#ABYSS-THEME x e0 :0.3)) (^ (S#ABYSS e1) (выбираться-vb e0 x y u))))

(B (name abyssmap) (=> (I#ABYSS x :0.9) (S#ABYSS x)))
(B (name abysstypemap) (=> (I#TYPE x y :0.9) (SS#ABYSS%TYPE x y)))
(B (name abyssentrancemap) (=> (I#ABYSS%ENTRANCE x y :0.9) (SS#ABYSS%ENTRANCE x y)))
(B (name abyssexitmap) (=> (I#ABYSS%EXIT x y :0.9) (SS#ABYSS%EXIT x y)))


;; Enslavement

;; Enslavement: Servant

(B (name rab) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (раб-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (слуга-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (прислуга-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (прислужник-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (холоп-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (невольник-nn e0 x)))
(B (name sluga) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#SERVANT x e0 :0.3) (R#ENSLAVEMENT-PATIENT x e0 :0.3)) (невольница-nn e0 x)))

(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#SERVANT x e0 :0.45)) (служить-vb e0 x y u)))
(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#SERVANT x e0 :0.45)) (прислуживать-vb e0 x y u)))


;; Enslavement: Oppression

(B (name rabstvo) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#OPPRESSION x e0 :0.45)) (рабство-nn e0 x)))
(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#OPPRESSION x e0 :0.45)) (порабощение-nn e0 x)))
(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#OPPRESSION x e0 :0.45)) (кабала-nn e0 x)))

(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#OPPRESSION e0 e0 :0.45)) (кабальный-adj e0 x)))
(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#OPPRESSION e0 e0 :0.45)) (рабский-adj e0 x)))

(B (name porabotit) (=> (^ (S#ENSLAVEMENT e0 :0.2) (SS#OPPRESSION e0 e0 :0.2) (R#ENSLAVEMENT-PATIENT y e0 :0.2) (R#ENSLAVEMENT-AGENT x e0 :0.2)) (поработить-nn e0 x y u)))
(B (name poraboshhat) (=> (^ (S#ENSLAVEMENT e0 :0.2) (SS#OPPRESSION e0 e0 :0.2) (R#ENSLAVEMENT-PATIENT y e0 :0.2) (R#ENSLAVEMENT-AGENT x e0 :0.2)) (порабощать-nn e0 x y u)))


;; Enslavement: Master

(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (хозяин-nn e0 x)))
(B (name goospodin) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (господин-nn e0 x)))
(B (name povelitel) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (повелитель-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (царь-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (царек-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (царёк-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (хан-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (пахан-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (король-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (князь-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (князек-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (князёк-nn e0 x)))
(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER x e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (рабовладелец-nn e0 x)))

(B (name hozjain) (=> (^ (S#ENSLAVEMENT e0 :0.3) (SS#MASTER e0 e0 :0.3) (R#ENSLAVEMENT-AGENT x e0 :0.3)) (рабовладельческий-adj e0 x)))

(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (править-vb e0 x y u)))
(B (name upravljat) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (управлять-vb e0 x y u)))
(B (name gospodstovat) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (господствовать-vb e0 x y u)))
(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (царить-vb e0 x y u)))

(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (владеть-vb e0 x y u)))
(B (name pravit) (=> (^ (S#ENSLAVEMENT e0 :0.33) (SS#MASTER e0 e0 :0.33) (R#ENSLAVEMENT-AGENT x e0 :0.33)) (овладеть-vb e0 x y u)))

(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#MASTER e0 e0 :0.45)) (господство-nn e0 x)))
(B (name poraboshhenie) (=> (^ (S#ENSLAVEMENT e0 :0.45) (SS#MASTER e0 e0 :0.45)) (власть-nn e0 x)))

(B (name enslavementmap) (=> (I#ENSLAVEMENT x :0.9) (S#ENSLAVEMENT x)))
(B (name servantmap) (=> (I#SERVANT x y :0.9) (SS#SERVANT x y)))
(B (name oppressionmap) (=> (I#OPPRESSION x y :0.9) (SS#OPPRESSION x y)))
(B (name mastermap) (=> (I#MASTER x y :0.9) (SS#MASTER x y)))


;; Organism

;; Organism: Growth

;(B (name rasti) (=> (^ (S#ORGANISM x :0.45) (SS#GROW e0 x :0.45)) (расти-vb e0 x u1 u2)))
;(B (name vyrasti) (=> (^ (S#ORGANISM x :0.45) (SS#GROW e0 x :0.45)) (вырасти-vb e0 x u1 u2)))
;(B (name vyrastat) (=> (^ (S#ORGANISM x :0.45) (SS#GROW e0 x :0.45)) (вырастать-vb e0 x u1 u2)))

;(B (name rost) (=> (^ (S#ORGANISM y :0.45) (SS#GROW e0 y :0.45)) (^ (of-in e1 x y) (рост-nn e0 x))))
;(B (name rost2) (=> (^ (S#ORGANISM y :0.45) (SS#GROW e0 y :0.45)) (рост-nn e0 x)))
;(B (name prirost) (=> (^ (S#ORGANISM y :0.45) (SS#GROW e0 y :0.45)) (^ (of-in e1 x y) (прирост-nn e0 x))))
;(B (name prirost2) (=> (^ (S#ORGANISM y :0.45) (SS#GROW e0 y :0.45)) (прирост-nn e0 x)))


;(B (name organismmap) (=> (I#ORGANISM x :0.9) (S#ORGANISM x)))
;(B (name growmap) (=> (I#GROW x y :0.9) (SS#GROW x y)))


;; Physical Burden

;; Physical Burden: Weight

(B (name nosha) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (ноша-nn e0 x)))
(B (name gruz) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (груз-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (обуза-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (бремя-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (давление-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (нагрузка-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (тяжесть-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (тягость-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (ярмо-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (хомут-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (гнет-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (гнёт-nn e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (вес-nn e0 x)))

(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT x e0 :0.45)) (весить-vb e0 x y z)))

(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT e0 e0 :0.45)) (тяжелый-adj e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT e0 e0 :0.45)) (тяжкий-adj e0 x)))
(B (name obuza) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#WEIGHT e0 e0 :0.45)) (обременительный-adj e0 x)))

(B (name nagruzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (нагрузить-vb e0 x y u)))
(B (name nagruzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (нагружать-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (загрузить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (загружать-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (давить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (надавить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (отягощать-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (отяготить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (обременять-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (обременить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (утяжелять-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (утяжелить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (обременить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (взвалить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (взваливать-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (вешать-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (повесить-vb e0 x y u)))
(B (name zarguzit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#WEIGHT e0 e0 :0.2) (R#BURDEN-CAUSE x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (навесить-vb e0 x y u)))


;; Physical Burden: Relief

(B (name oblegchenie) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#RELIEF x e0 :0.45)) (облегчение-nn e0 x)))
(B (name oblegchenie) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#RELIEF x e0 :0.45)) (разгрузка-nn e0 x)))

(B (name oblegchenie) (=> (^ (S#PHYSICAL_BURDEN e0 :0.45) (SS#RELIEF e0 e0 :0.45)) (легче-rb e0 x)))

(B (name oblegchit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#RELIEF e0 e0 :0.2) (R#CAUSE-RELIEF x e0) (R#BURDEN-VICTIM y e0 :0.2)) (облегчить-vb e0 x y u)))
(B (name oblegchat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#RELIEF e0 e0 :0.2) (R#CAUSE-RELIEF x e0) (R#BURDEN-VICTIM y e0 :0.2)) (облегчать-vb e0 x y u)))
(B (name oblegchat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#RELIEF e0 e0 :0.2) (R#CAUSE-RELIEF x e0) (R#BURDEN-VICTIM y e0 :0.2)) (снять-vb e0 x y u)))
(B (name oblegchat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#RELIEF e0 e0 :0.2) (R#CAUSE-RELIEF x e0) (R#BURDEN-VICTIM y e0 :0.2)) (снимать-vb e0 x y u)))
(B (name oblegchat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.2) (SS#RELIEF e0 e0 :0.2) (R#CAUSE-RELIEF x e0) (R#BURDEN-VICTIM y e0 :0.2)) (разгрузить-vb e0 x y u)))

(B (name oblegchat) (=> (^ (SS#RELIEF e0 e1 :0.2) (R#CAUSE-RELIEF x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (^ (сбросить-vb e0 x y u) (SS#WEIGHT y e1))))
(B (name oblegchat) (=> (^ (SS#RELIEF e0 e1 :0.2) (R#CAUSE-RELIEF x e0 :0.2) (R#BURDEN-VICTIM y e0 :0.2)) (^ (скинуть-vb e0 x y u) (SS#WEIGHT y e1))))

(B (name oblegchat) (=> (^ (SS#RELIEF e0 e1 :0.3) (R#CAUSE-RELIEF x e0 :0.3) (R#BURDEN-VICTIM y e0 :0.3)) (сбросить-vb e0 x y u)))
(B (name oblegchat) (=> (^ (SS#RELIEF e0 e1 :0.3) (R#CAUSE-RELIEF x e0 :0.3) (R#BURDEN-VICTIM y e0 :0.3)) (скинуть-vb e0 x y u)))

;(B (name exit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#RELIEF e0 e0 :0.3) (R#BURDEN-VICTIM x e0 :0.3)) (^ (уклоняться-vb e0 x y u) (от-in e1 e0 z))))
;(B (name exit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#RELIEF e0 e0 :0.3) (R#BURDEN-VICTIM x e0 :0.3)) (^ (уклониться-vb e0 x y u) (от-in e1 e0 z))))

(B (name exit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.4) (SS#RELIEF x e0 :0.4)) (^ (уход-vb e0 x) (от-in e1 x z))))
(B (name exit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.4) (SS#RELIEF x e0 :0.4)) (^ (уклонение-vb e0 x) (от-in e1 x z))))


;; Physical Burden: Physical Distress

(B (name sokrushat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (сокрушать-vb e0 x y u)))
(B (name sokrushit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (сокрушить-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (подавить-vb e0 x y u)))
(B (name podavljat) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (подавлять-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (придавить-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (придавливать-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (задавить-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (задавливать-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (раздавить-vb e0 x y u)))
(B (name podavit) (=> (^ (S#PHYSICAL_BURDEN e0 :0.3) (SS#PHYSICAL_DISTRESS e0 e0 :0.3) (R#PHYSICAL_BURDEN-CAUSE x e0 :0.3)) (раздавливать-vb e0 x y u)))

(B (name burdenmap) (=> (I#PHYSICAL_BURDEN x :0.9) (S#PHYSICAL_BURDEN x)))
(B (name weightmap) (=> (I#WEIGHT x :0.9) (SS#WEIGHT x y)))
(B (name reliefmap) (=> (I#RELIEF x :0.9) (SS#RELIEF x y)))


;; Physical Harm

;; Physical Harm: Type

;(B (name razdavit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (раздавить-vb e0 x y u2)))
(B (name unichtozhit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (уничтожить-vb e0 x y u2)))
(B (name unichtozhit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (уничтожать-vb e0 x y u2)))
(B (name pokalechit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (покалечить-vb e0 x y u2)))
(B (name kalechit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (калечить-vb e0 x y u2)))
(B (name travmirovat) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (травмировать-vb e0 x y u2)))
(B (name ranit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (ранить-vb e0 x y u2)))
(B (name ranit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (поранить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (ударить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (ударять-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (бить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (побить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (добить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (забить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (добивать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (сгибать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (согнуть-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (ломать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (сломать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (измордовать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (замордовать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (мордовать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (порвать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (мучать-vb e0 x y u2)))
;(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (душить-vb e0 x y u2)))
;(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (задушить-vb e0 x y u2)))

(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (истреблять-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (истребить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (убивать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (убить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (истощать-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (истощить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (губить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (загубить-vb e0 x y u2)))

(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (^ (пострадать-vb e0 y u2 u2) (от-in e1 e0 x))))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (^ (страдать-vb e0 y u2 u2) (от-in e1 e0 x))))

(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (грозить-vb e0 x y u2)))
(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (угрожать-vb e0 x y u2)))

(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (травма-nn e0 x)))
(B (name udar) (=> (^ (S#PHYSICAL_HARM e0 :0.4) (SS#PHYSICAL_HARM%TYPE x e0 :0.4)) (удар-nn e0 x)))
(B (name udar-po) (=> (^ (S#PHYSICAL_HARM e0 :0.4) (SS#TYPE x e0 :0.4)) (^ (удар-nn e0 x) (по-in e1 x y))))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (гибель-nn e0 x)))

(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (уничтожение-nn e0 x)))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (истребление-nn e0 x)))

(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (мука-nn e0 x)))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (мучение-nn e0 x)))

;(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE x e0 :0.2)) (ущербность-nn e0 x)))
;(B (name udarit) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2) (R#HARM-VICTIM y e0 :0.2) (R#HARM-AGENT x e0 :0.2)) (грозить-vb e0 x y u2)))

(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2)) (мучительный-adj e0 x)))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.2) (SS#PHYSICAL_HARM%TYPE e0 e0 :0.2)) (губительный-adj e0 x)))


;; Physical Harm: Restraint

(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT x e0 :0.45)) (удавка-nn e0 x)))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT x e0 :0.45)) (петля-nn e0 x)))
(B (name travma) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT x e0 :0.45)) (вилы-nn e0 x)))

(B (name dushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (душить-vb e0 x y u)))
(B (name zadushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (задушить-vb e0 x y u)))
(B (name zadushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (удушить-vb e0 x y u)))

(B (name zadushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (удушающий-adj e0 x)))

(B (name zadushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (задыхаться-vb e0 x y u)))
(B (name zadushit) (=> (^ (S#PHYSICAL_HARM e0 :0.45) (SS#PHYSICAL_HARM%RESTRAINT e0 e0 :0.45)) (задохнуться-vb e0 x y u)))


;; Physical Harm: Protection

(B (name zashhita) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (защита-nn e0 x)))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (укрытие-nn e0 x)))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (убежище-nn e0 x)))
(B (name shhit) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (щит-nn e0 x)))
(B (name shhit) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (броня-nn e0 x)))
(B (name shhit) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (доспех-nn e0 x)))
(B (name shhit) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (латы-nn e0 x)))
(B (name shhit) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (крепость-nn e0 x)))

(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (^ (уклонение-nn e0 x) (от-in e1 x u))))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (^ (уклониться-vb e0 x y z) (от-in e1 e0 u))))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (^ (уклоняться-vb e0 x y z) (от-in e1 e0 u))))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (^ (отгородиться-vb e0 x y z) (от-in e1 e0 u))))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (^ (отгораживаться-vb e0 x y z) (от-in e1 e0 u))))

(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (уклонение-nn e0 x)))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (уклониться-vb e0 x y z)))
(B (name ukrytie) (=> (^ (S#PHYSICAL_HARM u :0.45) (SS#PROTECTION x u :0.45)) (уклоняться-vb e0 x y z)))

(B (name ukryt) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (укрыть-vb e0 x y u2)))
(B (name ukryt) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (укрывать-vb e0 x y u2)))
(B (name ukryt) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (скрыть-vb e0 x y u2)))
(B (name ukryt) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (скрывать-vb e0 x y u2)))
(B (name zasshitit) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (защитить-vb e0 x y u2)))
(B (name zashhishhat) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (защищать-vb e0 x y u2)))
(B (name zashhishhat) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (охранять-vb e0 x y u2)))
(B (name zashhishhat) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (уберечь-vb e0 x y u2)))
(B (name zashhishhat) (=> (^ (S#PHYSICAL_HARM u :0.2) (SS#PROTECTION e0 u :0.2) (R#PROTECT-PATIENT y e0 :0.2) (R#PROTECT-AGENT x e0 :0.2)) (уберегать-vb e0 x y u2)))

(B (name physical-harm-map) (=> (I#PHYSICAL_HARM x :0.9) (S#PHYSICAL_HARM x)))
(B (name physical-harm-typemap) (=> (I#PHYSICAL_HARM%TYPE x y :0.9) (SS#PHYSICAL_HARM%TYPE x y)))
(B (name physical-harm-restraintmap) (=> (I#PHYSICAL_HARM%RESTRAINT x y :0.9) (SS#PHYSICAL_HARM%RESTRAINT x y)))
(B (name physical-harm-protectionmap) (=> (I#PROTECTION x y :0.9) (SS#PROTECTION x y)))


;; Maze

(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (лабиринт-nn e0 x)))
(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (терние-nn e0 x)))
;(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (петля-nn e0 x)))
;(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (паутина-nn e0 x)))
;(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (путаница-nn e0 x)))

(B (name jama) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS x e0 :0.45)) (^ (замкнутый-adj e1 x) (круг-nn e0 x))))

(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS e0 e0 :0.45)) (запутанный-adj e0 x)))
(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS e0 e0 :0.45)) (путанный-adj e0 x)))
(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS e0 e0 :0.45)) (запутать-vb e0 x y z)))
(B (name labirint) (=> (^ (S#MAZE e0 :0.45) (SS#CONFUSING_PATHWAYS e0 e0 :0.45)) (путать-vb e0 x y z)))


;; Maze: Navigation

(B (name pregrazhdat) (=> (^ (S#MAZE z :0.45) (SS#NAVIGATION e0 z :0.45)) (пробираться-vb e0 x y u)))
(B (name pregrazhdat) (=> (^ (S#MAZE z :0.45) (SS#NAVIGATION e0 z :0.45)) (пробраться-vb e0 x y u)))
(B (name pregrazhdat) (=> (^ (S#MAZE z :0.45) (SS#NAVIGATION e0 z :0.45)) (петлять-vb e0 x y u)))
(B (name pregrazhdat) (=> (^ (S#MAZE z :0.45) (SS#NAVIGATION e0 z :0.45)) (плутать-vb e0 x y u)))
(B (name pregrazhdat) (=> (^ (S#MAZE z :0.45) (SS#NAVIGATION e0 z :0.45)) (заплутать-vb e0 x y u)))


;; Maze: Obstruction

(B (name pomeha) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (помеха-nn e0 x)))
(B (name barjer) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (барьер-nn e0 x)))
(B (name pregrada) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (преграда-nn e0 x)))
(B (name pregrada) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (препятствие-nn e0 x)))
(B (name pregrada) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (препона-nn e0 x)))
(B (name pregrada) (=> (^ (S#MAZE e0 :0.45) (SS#OBSTRUCTION x e0 :0.45)) (стена-nn e0 x)))

(B (name pregrazhdat) (=> (^ (S#MAZE z :0.23) (SS#OBSTRUCTION e0 z :0.23) (R#OBSTRUCTION-AGENT x e0 :0.23) (R#OBSTRUCTION-PATIENT y e0 :0.23)) (преграждать-vb e0 x y u)))
(B (name pregradit) (=> (^ (S#MAZE z :0.23) (SS#OBSTRUCTION e0 z :0.23) (R#OBSTRUCTION-AGENT x e0 :0.23) (R#OBSTRUCTION-PATIENT y e0 :0.23)) (преградить-vb e0 x y u)))
(B (name pregradit) (=> (^ (S#MAZE z :0.23) (SS#OBSTRUCTION e0 z :0.23) (R#OBSTRUCTION-AGENT x e0 :0.23) (R#OBSTRUCTION-PATIENT y e0 :0.23)) (загородить-vb e0 x y u)))
(B (name pregradit) (=> (^ (S#MAZE z :0.23) (SS#OBSTRUCTION e0 z :0.23) (R#OBSTRUCTION-AGENT x e0 :0.23) (R#OBSTRUCTION-PATIENT y e0 :0.23)) (загораживать-vb e0 x y u)))

(B (name mazemap) (=> (I#MAZE x :0.9) (S#MAZE x)))
(B (name maze-confusing-pathwaysmap) (=> (I#CONFUSING_PATHWAYS x y :0.9) (SS#CONFUSING_PATHWAYS x y)))
(B (name maze-navigationmap) (=> (I#NAVIGATION x y :0.9) (SS#NAVIGATION x y)))
(B (name maze-obstructionmap) (=> (I#OBSTRUCTION x y :0.9) (SS#OBSTRUCTION x y)))


;; Resource

;; Resource: Substance

(B (name mass) (=> (^ (S#RESOURCE e0 :0.45) (SS#SUBSTANCE x e0 :0.45)) (масса-nn e0 x)))
(B (name material) (=> (^ (S#RESOURCE e0 :0.45) (SS#SUBSTANCE x e0 :0.45)) (материал-nn e0 x)))
(B (name concentration) (=> (^ (S#RESOURCE e0 :0.45) (SS#SUBSTANCE x e0 :0.45)) (концентрация-nn e0 x)))


;; Resource: Quantity Size

(B (name sliver) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#SMALL-AMOUNT x e0 :0.3)) (щепотка-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#SMALL-AMOUNT x e0 :0.3)) (ломтик-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (кипа-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (куча-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (груда-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (объем-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (объём-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (глыба-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (россыпь-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (россыпи-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (^ (золотой-adj e1 x) (жила-nn e0 x))))

(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#LARGE-AMOUNT x e0 :0.3)) (увеличение-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#SMALL-AMOUNT x e0 :0.3)) (уменьшение-nn e0 x)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE x e0 :0.3) (R#SMALL-AMOUNT x e0 :0.3)) (сокращение-nn e0 x)))

(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#LARGE-AMOUNT y e0 :0.3)) (увеличить-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#LARGE-AMOUNT y e0 :0.3)) (увеличивать-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (уменьшать-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (уменьшить-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (сокращать-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (сократить-vb e0 x y z)))

(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#LARGE-AMOUNT y e0 :0.3)) (увеличиться-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#LARGE-AMOUNT y e0 :0.3)) (увеличиваться-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (уменьшаться-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (уменьшиться-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (сокращаться-vb e0 x y z)))
(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#SMALL-AMOUNT y e0 :0.3)) (сократиться-vb e0 x y z)))

(B (name sparse) (=> (^ (S#RESOURCE e0 :0.3) (SS#QUANTITY_SIZE e0 e0 :0.3) (R#LARGE-AMOUNT y e0 :0.3)) (урезать-vb e0 x y z)))


;; Resource: Develop Resources

(B (name invest) (=> (^ (S#RESOURCE e0 :0.3) (SS#DEVELOP_RESOURCES x e0 :0.3) (R#DEVELOPER x e0 :0.3)) (инвестировать-vb e0 x y u)))
(B (name accumulate) (=> (^ (S#RESOURCE e0 :0.33) (SS#DEVELOP_RESOURCES x e0 :0.33) (R#DEVELOPER x e0 :0.33)) (собирать-vb e0 x y u)))
(B (name accumulate) (=> (^ (S#RESOURCE e0 :0.33) (SS#DEVELOP_RESOURCES x e0 :0.33) (R#DEVELOPER x e0 :0.33)) (собрать-vb e0 x y u)))
(B (name accumulate) (=> (^ (S#RESOURCE e0 :0.3) (SS#DEVELOP_RESOURCES x e0 :0.3) (R#DEVELOPER x e0 :0.3)) (аккумулировать-vb e0 x y u)))

(B (name investment) (=> (^ (S#RESOURCE e0 :0.45) (SS#DEVELOP_RESOURCES x e0 :0.45)) (инвестиция-nn e0 x)))
(B (name investment) (=> (^ (S#RESOURCE e0 :0.45) (SS#DEVELOP_RESOURCES x e0 :0.45)) (вложение-nn e0 x)))


;; Resource: Distribution

(B (name distribute) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (распределять-vb e0 x y u)))
(B (name distribute) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (распределить-vb e0 x y u)))
(B (name distribute) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (распростронять-vb e0 x y u)))
(B (name distribute) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (распростронить-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (соритировать-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (расточать-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (расточить-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (передавать-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (передать-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (получать-vb e0 x y u)))
(B (name sort) (=> (^ (S#RESOURCE e0 :0.33) (SS#DISTRIBUTION x e0 :0.33) (R#DISTRIBUTOR x e0 :0.33)) (получить-vb e0 x y u)))

(B (name distribution) (=> (^ (S#RESOURCE e0 :0.45) (SS#DISTRIBUTION x e0 :0.45)) (распределение-nn e0 x)))
(B (name distribution) (=> (^ (S#RESOURCE e0 :0.45) (SS#DISTRIBUTION x e0 :0.45)) (расточительство-nn e0 x)))

(B (name resourcemap) (=> (I#RESOURCE x :0.9) (S#RESOURCE x)))
(B (name substancemap) (=> (I#SUBSTANCE x y :0.9) (SS#SUBSTANCE x y)))
(B (name quantitymap) (=> (I#QUANTITY_SIZE x y :0.9) (SS#QUANTITY_SIZE x y)))
(B (name distributionmap) (=> (I#DISTRIBUTION x y :0.9) (SS#DISTRIBUTION x y)))
(B (name develop-resourcesmap) (=> (I#DEVELOP_RESOURCES x y :0.9) (SS#DEVELOP_RESOURCES x y)))


;; Human Body

;; Human Body: Component

(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (лицо-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (рука-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (голова-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (нога-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (кожа-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (сердце-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (мозг-nn e0 x)))
(B (name face) (=> (^ (S#HUMAN_BODY e0 :0.45) (SS#HUMAN_BODY%COMPONENT x e0 :0.45)) (глаз-nn e0 x)))


;; Human Body: Death

;(B (name umeret) (=> (^ (S#HUMAN_BODY u :0.3) (SS#DEATH e0 u :0.3) (R#DEATH-PATIENT x e0 :0.3)) (умереть-vb e0 x y u)))
;(B (name umirat) (=> (^ (S#HUMAN_BODY u :0.3) (SS#DEATH e0 u :0.3) (R#DEATH-PATIENT x e0 :0.3)) (умирать-vb e0 x y u)))
;(B (name smert) (=> (^ (S#HUMAN_BODY u :0.45) (SS#DEATH x u :0.45)) (смерть-nn e1 x)))


;; Human Body: Living

;(B (name zhit) (=> (^ (S#HUMAN_BODY u :0.3) (SS#LIVING e0 u :0.3) (R#LIVING-PATIENT x e0 :0.3)) (жить-vb e0 x y u)))

;(B (name HUMAN_BODYmap) (=> (I#HUMAN_BODY x :0.9) (S#HUMAN_BODY x)))
;(B (name deathmap) (=> (I#DEATH x y :0.9) (SS#DEATH x y)))
;(B (name livingmap) (=> (I#LIVING x y :0.9) (SS#LIVING x y)))


;; Victim

;; Victim: Sufferer

;(B (name victim) (=> (^ (S#VICTIM e0 :0.3) (SS#SUFFERER x e0 :0.3) (R#VICTIMIZE-PATIENT x e0 :0.3)) (жертва-nn e0 x)))
;(B (name victim) (=> (^ (S#VICTIM e0 :0.3) (SS#SUFFERER x e0 :0.3) (R#VICTIMIZE-PATIENT x e0 :0.3)) (добыча-nn e0 x)))

;(B (name victimmap) (=> (I#VICTIM x :0.9) (S#VICTIM x)))
;(B (name sufferermap) (=> (I#SUFFERER x y :0.9) (SS#SUFFERER x y)))
;(B (name victimizermap) (=> (I#VICTIMIZER x y :0.9) (SS#VICTIMIZER x y)))
;(B (name championmap) (=> (I#CHAMPION x y :0.9) (SS#CHAMPION x y)))


;; Building

;; Building: Type

(B (name basement) (=> (^ (S#BUILDING e0 :0.45) (SS#BUILDING%TYPE x e0 :0.45)) (здание-nn e0 x)))
(B (name house) (=> (^ (S#BUILDING e0 :0.45) (SS#BUILDING%TYPE x e0 :0.45)) (дом-nn e0 x)))
(B (name building) (=> (^ (S#BUILDING e0 :0.45) (SS#BUILDING%TYPE x e0 :0.45)) (постройка-nn e0 x)))
(B (name building) (=> (^ (S#BUILDING e0 :0.45) (SS#BUILDING%TYPE x e0 :0.45)) (строение-nn e0 x)))


;; Building: Structure

(B (name foundation) (=> (^ (S#BUILDING e0 :0.45) (SS#STRUCTURE x e0 :0.45)) (основа-nn e0 x)))
(B (name base) (=> (^ (S#BUILDING e0 :0.45) (SS#STRUCTURE x e0 :0.45)) (фундамент-nn e0 x)))
(B (name structure) (=> (^ (S#BUILDING e0 :0.45) (SS#STRUCTURE x e0 :0.45)) (структура-nn e0 x)))


;; Building: Creation-Destruction

(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (строитeльство-nn e0 x)))
(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (построение-nn e0 x)))
(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (выстраивание-nn e0 x)))
(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (отстраивание-nn e0 x)))

(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (строить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (построить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (выстроить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (выстраивать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (отстроить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (отстраивать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (конструировать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сконструировать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сколотить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сколачивать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (стабилизировать-vb e0 x y u)))

(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сломать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (ломать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (рушить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разрушить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разрушать-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (обрушить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (порушить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разнести-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разносить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сносить-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (снести-vb e0 x y u)))

(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (сломаться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (ломаться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (рушиться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разрушиться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (разрушаться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (обрушиться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (порушиться-vb e0 x y u)))
(B (name construct) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION e0 e0 :0.3 :0.3) (R#CREATING e0 e0 :0.3)) (рухнуть-vb e0 x y u)))

(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (снос-nn e0 x)))
(B (name build) (=> (^ (S#BUILDING e0 :0.3) (SS#CREATION_DESTRUCTION x e0 :0.3 :0.3)) (коллапс-nn e0 x)))


;; Building: Components

(B (name cement) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (цемент-nn e0 x)))
(B (name brick) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (кирпич-nn e0 x)))
(B (name concrete) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (^ (краеугольный-nn e1 x) (камень-nn e0 x))))
(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (стена-nn e0 x)))
(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (крыша-nn e0 x)))
(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (колонна-nn e0 x)))
(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (этаж-nn e0 x)))
(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (лифт-nn e0 x)))

;(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS x e0 :0.45)) (потолок-nn e0 x)))

(B (name mortar) (=> (^ (S#BUILDING e0 :0.45) (SS#COMPONENTS e0 e0 :0.45)) (многоэтажный-adj e0 x)))


;; Building: Support

(B (name cement) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT x e0 :0.45)) (поддержка-nn e0 x)))
(B (name cement) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT x e0 :0.45)) (опора-nn e0 x)))
(B (name cement) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT x e0 :0.45)) (столп-nn e0 x)))
(B (name cement) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT x e0 :0.45)) (столп-nn e0 x)))
(B (name build) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT e0 e0 :0.45)) (укрепление-vb e0 x y u)))
(B (name build) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT e0 e0 :0.45)) (поддерживать-vb e0 x y u)))
(B (name build) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT e0 e0 :0.45)) (укрепить-vb e0 x y u)))
(B (name build) (=> (^ (S#BUILDING e0 :0.45) (SS#SUPPORT e0 e0 :0.45)) (укреплять-vb e0 x y u)))

(B (name buildingmap) (=> (I#BUILDING x :0.9) (S#BUILDING x)))
(B (name structuremap) (=> (I#STRUCTURE x y :0.9) (SS#STRUCTURE x y)))
(B (name creation_destructionmap) (=> (I#CREATION-DESTRUCTION x y :0.9) (SS#CREATION_DESTRUCTION x y)))
(B (name componentsmap) (=> (I#COMPONENTS x y :0.9) (SS#COMPONENTS x y)))


;; Pathway

;; Pathway: Type

(B (name pathway) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (путь-nn e0 x)))
(B (name road-to) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (^ (дорога-nn e0 x) (к-in e1 x z))))
(B (name road) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (дорога-nn e0 x)))
(B (name path) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (тропа-nn e0 x)))
(B (name path) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (тропка-nn e0 x)))
(B (name path) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (тропинка-nn e0 x)))
(B (name bridge) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (мост-nn e0 x)))
(B (name bridge) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (мостик-nn e0 x)))
(B (name passage) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (улица-nn e0 x)))
(B (name passage) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (лестница-nn e0 x)))
(B (name passage) (=> (^ (S#PATHWAY e0 :0.45) (SS#PATHWAY%TYPE x e0 :0.45)) (лаз-nn e0 x)))


;; Pathway: Open Path

(B (name clear-path) (=> (^ (SS#OPEN_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (открыть-vb e0 u x u1)))
(B (name clear-path) (=> (^ (SS#OPEN_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (открывать-vb e0 u x u1)))
(B (name open-path) (=> (SS#OPEN_PATH e0 e1 :0.9) (^ (S#PATHWAY e1) (SS#TYPE x e1) (очистить-vb e0 u x u1))))
(B (name open-path) (=> (SS#OPEN_PATH e0 e1 :0.9) (^ (S#PATHWAY e1) (SS#TYPE x e1) (расчистить-vb e0 u x u1))))


;; Pathway: Obstructed Path

(B (name blocked-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (заблокированный-adj e0 x)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (закрытый-adj e0 x)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (непроходимый-adj e0 x)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (непролазный-adj e0 x)))

(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (заградительный-adj e0 x)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (тупиковый-adj e0 x)))

(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (заблокировать-vb e0 x y z)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (блокировать-vb e0 x y z)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (закрыть-vb e0 x y z)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (закрывать-vb e0 x y z)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (преградить-vb e0 x y z)))
(B (name closed-path) (=> (^ (SS#OBSTRUCTED_PATH e0 e1 :0.45) (S#PATHWAY e1 :0.45)) (преграждать-vb e0 x y z)))
(B (name pregradit) (=> (^ (S#PATHWAY z :0.4) (SS#OBSTRUCTED_PATH e0 z :0.4)) (загородить-vb e0 x y u)))
(B (name pregradit) (=> (^ (S#PATHWAY z :0.4) (SS#OBSTRUCTED_PATH e0 z :0.4)) (загораживать-vb e0 x y u)))
(B (name pregradit) (=> (^ (S#PATHWAY z :0.4) (SS#OBSTRUCTED_PATH e0 z :0.4)) (заградить-vb e0 x y u)))

(B (name pomeha) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (помеха-nn e0 x)))
(B (name barjer) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (барьер-nn e0 x)))
(B (name pregrada) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (преграда-nn e0 x)))
(B (name pomeha) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (препятствие-nn e0 x)))
(B (name barjer) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (препона-nn e0 x)))
(B (name pregrada) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (стена-nn e0 x)))
(B (name pregrada) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (шлагбаум-nn e0 x)))
(B (name pregrada) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (тупик-nn e0 x)))
(B (name barjer) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (забор-nn e0 x)))

(B (name barjer) (=> (^ (S#PATHWAY e0 :0.4) (SS#OBSTRUCTED_PATH x e0 :0.4)) (засада-nn e0 x)))

(B (name pathwaymap) (=> (I#PATHWAY x :0.9) (S#PATHWAY x)))
(B (name pathway-typemap) (=> (I#PATHWAY%TYPE x y :0.9) (SS#PATHWAY%TYPE x y)))
(B (name open-pathmap) (=> (I#OPEN_PATH x y :0.9) (SS#OPEN_PATH x y)))
(B (name obstructed-pathmap) (=> (I#OBSTRUCTED_PATH x y :0.9) (SS#OBSTRUCTED_PATH x y)))


;; Portal

;; Portal: Means of Entry

(B (name gateway) (=> (^ (S#PORTAL e0 :0.45) (SS#MEANS_OF_ENTRY x e0 :0.45)) (ворота-nn e0 x)))
(B (name door) (=> (^ (S#PORTAL e0 :0.45) (SS#MEANS_OF_ENTRY x e0 :0.45)) (дверь-nn e0 x)))
(B (name threshold) (=> (^ (S#PORTAL e0 :0.45) (SS#MEANS_OF_ENTRY x e0 :0.45)) (проход-nn e0 x)))
(B (name doorway) (=> (^ (S#PORTAL e0 :0.45) (SS#MEANS_OF_ENTRY x e0 :0.45)) (портал-nn e0 x)))
(B (name doorway) (=> (^ (S#PORTAL e0 :0.45) (SS#MEANS_OF_ENTRY x e0 :0.45)) (окно-nn e0 x)))


;; Portal: Obstacles

(B (name narrow) (=> (SS#OBSTACLES e0 e1 :0.9) (^ (S#PORTAL e1) (SS#MEANS_OF_ENTRY x e1) (узкий-adj e0 x))))
(B (name narrow) (=> (SS#OBSTACLES e0 e1 :0.9) (^ (S#PORTAL e1) (SS#MEANS_OF_ENTRY x e1) (непролазный-adj e0 x))))

(B (name portalmap) (=> (I#PORTAL e0 :0.9) (S#PORTAL x)))
(B (name meansofentrymap) (=> (I#MEANS_OF_ENTRY x y :0.9) (SS#MEANS_OF_ENTRY x y)))
(B (name obstaclesmap) (=> (I#OBSTACLES x y :0.9) (SS#OBSTACLES x y)))


;; Darkness

(B (name darkness) (=> (^ (S#DARKNESS e0 :0.45) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (темнота-nn e0 x)))
(B (name blackness) (=> (^ (S#DARKNESS e0 :0.45) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (чернота-nn e0 x)))
(B (name blackness) (=> (^ (S#DARKNESS e0 :0.45) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (мрак-nn e0 x)))
(B (name blackness) (=> (^ (S#DARKNESS e0 :0.45) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (тьма-nn e0 x)))
(B (name blackness) (=> (^ (S#DARKNESS e0 :0.45) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (тень-nn e0 x)))
(B (name dark-cloud) (=> (^ (S#DARKNESS e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (туча-nn e1 x)))

(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (черный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (чёрный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (темный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (тёмный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (мрачный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (сумрачный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (теневой-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (беспросветный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (непроглядный-adj e0 x)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3) (R#DARK x e0 :0.3)) (кромешный-adj e0 x)))

(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3)) (темно-rb e0 e1)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3)) (черно-rb e0 e1)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3)) (мрачно-rb e0 e1)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3)) (сумрачно-rb e0 e1)))
(B (name dark) (=> (^ (S#DARKNESS x e0 :0.3) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT e0 e0 :0.3)) (беспросветно-rb e0 e1)))

(B (name dark) (=> (^ (S#DARKNESS e0 e0 :0.3) (SS#MOVEMENT_IN_THE_RANGE e0 e0 :0.3) (R#DARK x e0 :0.3)) (темнеть-vb e0 x y z)))
(B (name dark) (=> (^ (S#DARKNESS e0 e0 :0.3) (SS#MOVEMENT_IN_THE_RANGE e0 e0 :0.3) (R#DARK x e0 :0.3)) (потемнеть-vb e0 x y z)))
(B (name dark) (=> (^ (S#DARKNESS e0 e0 :0.3) (SS#MOVEMENT_IN_THE_RANGE e0 e0 :0.3) (R#DARK x e0 :0.3)) (чернеть-vb e0 x y z)))
(B (name dark) (=> (^ (S#DARKNESS e0 e0 :0.3) (SS#MOVEMENT_IN_THE_RANGE e0 e0 :0.3) (R#DARK x e0 :0.3)) (почернеть-vb e0 x y z)))

(B (name darknessmap) (=> (I#DARKNESS x :0.9) (S#DARKNESS x)))
(B (name dark-end-of-rangemap) (=> (I#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x y :0.9) (SS#DARK_END_OF_RANGE_OF_DARKNESS_LIGHT x y)))
(B (name darkness-movementmap) (=> (I#MOVEMENT_IN_THE_RANGE x y :0.9) (SS#MOVEMENT_IN_THE_RANGE x y)))


;; Light

(B (name darkness) (=> (^ (S#LIGHT e0 :0.45) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (свет-nn e0 x)))
(B (name blackness) (=> (^ (S#LIGHT e0 :0.45) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (луч-nn e0 x)))
(B (name blackness) (=> (^ (S#LIGHT e0 :0.45) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.45)) (солнце-nn e0 x)))

(B (name dark) (=> (^ (S#LIGHT x e0 :0.3) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.3) (R#LIGHT x e0 :0.3)) (светлый-adj e0 x)))
(B (name dark) (=> (^ (S#LIGHT x e0 :0.3) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x e0 :0.3) (R#LIGHT x e0 :0.3)) (солнечный-adj e0 x)))

(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#MOVEMENT e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (светлеть-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#MOVEMENT e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (просветлеть-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#MOVEMENT e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (проясниться-vb e0 x y z)))


;; Light: Illumination

(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (светить-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (подсветить-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (подсвечивать-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (просвечивать-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (осветить-vb e0 x y z)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (освещать-vb e0 x y z)))

(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (факел-nn e0 x)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (лампа-nn e0 x)))
(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.3) (SS#ILLUMINATION e0 e0 :0.3) (R#LIGHT x e0 :0.3)) (лампочка-nn e0 x)))

(B (name dark) (=> (^ (S#LIGHT e0 e0 :0.45) (SS#ILLUMINATION e0 e0 :0.45)) (просвет-nn e0 x)))

(B (name darknessmap) (=> (I#LIGHT x :0.9) (S#LIGHT x)))
(B (name dark-end-of-rangemap) (=> (I#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x y :0.9) (SS#LIGHT_END_OF_RANGE_OF_DARKNESS_LIGHT x y)))
(B (name darkness-movementmap) (=> (I#MOVEMENT x y :0.9) (SS#MOVEMENT x y)))


;; Obesity

;; Obesity: Excess Body Weight

(B (name bloated) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (жирный-adj e0 x)))
(B (name bloated) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (толстый-adj e0 x)))
(B (name engorged) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (разжиревший-adj e0 x)))
(B (name engorged) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (жир-nn e0 x)))

(B (name engorged) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (разжиреть-vb e0 x y z)))
(B (name engorged) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (жиреть-vb e0 x y z)))
(B (name engorged) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_BODY_WEIGHT x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (жировать-vb e0 x y z)))


;; Obesity: Excess Consumption

(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (пожирать-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (сжирать-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (поглотить-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (поглощать-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (обожраться-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (обжираться-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (объесться-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (объедаться-vb e0 x y u)))

(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (жиреть-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (разжиреть-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (толстеть-vb e0 x y u)))
(B (name feast) (=> (^ (S#OBESITY e0 :0.3) (SS#EXCESS_CONSUMPTION x e0 :0.3) (R#OVERWEIGHT x e0 :0.3)) (растолстеть-vb e0 x y u)))

(B (name obesitymap) (=> (I#OBESITY x :0.9) (S#OBESITY x)))
(B (name excess-body-weightmap) (=> (I#BODY-WEIGHT x y :0.9) (SS#EXCESS_BODY_WEIGHT x y)))
(B (name excess-consumptionmap) (=> (I#CONSUMPTION x y :0.9) (SS#EXCESS_CONSUMPTION x y)))


;; Parasite

;; Parasite: Destructive Being

(B (name leech) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (пиявка-nn e0 x)))
(B (name parasite) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (паразит-nn e0 x)))
(B (name louse) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (вошь-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (кровосос-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (кровопийца-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (блоха-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (клоп-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (комар-nn e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (слепень-nn e0 x)))

(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (паразитный-adj e0 x)))
(B (name bloodsucker) (=> (^ (S#PARASITE e0 :0.45) (SS#DESTRUCTIVE_BEING x e0 :0.45)) (паразитарный-adj e0 x)))

(B (name leech) (=> (^ (S#PARASITE e0 :0.3) (SS#ACTION e0 e0 :0.3) (R#PARASITE-AGENT x e0 :0.3)) (присосаться-vb e0 x y u)))
(B (name leech) (=> (^ (S#PARASITE e0 :0.3) (SS#ACTION e0 e0 :0.3) (R#PARASITE-AGENT x e0 :0.3)) (присасываться-vb e0 x y u)))
(B (name leech) (=> (^ (S#PARASITE e0 :0.3) (SS#ACTION e0 e0 :0.3) (R#PARASITE-AGENT x e0 :0.3)) (паразитировать-vb e0 x y u)))
(B (name leech) (=> (^ (S#PARASITE e0 :0.3) (SS#ACTION e0 e0 :0.3) (R#PARASITE-AGENT x e0 :0.3)) (^ (пить-vb e0 x y u) (кровь-nn e1 y))))

(B (name parasitemap) (=> (I#PARASITE x :0.9) (S#PARASITE x)))
(B (name destructive-beingmap) (=> (I#DESTRUCTIVE_BEING x y :0.9) (SS#DESTRUCTIVE_BEING x y)))


;; Vision

;; Vision: Blindness

(B (name blind) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND x e0 :0.3)) (слепой-adj e0 x)))
(B (name myopic) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND x e0 :0.3)) (незрячий-adj e0 x)))
(B (name blind) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS x e0 :0.3) (R#BLIND x e0 :0.3)) (слепец-nn e0 x)))

(B (name blindness) (=> (^ (S#VISION e0 :0.45) (SS#BLINDNESS x e0 :0.45)) (слепота-nn e0 x)))
(B (name blindness) (=> (^ (S#VISION e0 :0.45) (SS#BLINDNESS x e0 :0.45)) (завеса-nn e0 x)))
(B (name blindness) (=> (^ (S#VISION e0 :0.45) (SS#BLINDNESS x e0 :0.45)) (завес-nn e0 x)))

(B (name blindvb) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND y e0 :0.3)) (ослеплять-vb e0 x y z)))
(B (name blindvb) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND y e0 :0.3)) (ослепить-vb e0 x y z)))
(B (name blindvb) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND y e0 :0.3)) (слепить-vb e0 x y z)))

(B (name blindvb) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND y e0 :0.3)) (ослепнуть-vb e0 x y z)))
(B (name blindvb) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#BLIND y e0 :0.3)) (слепнуть-vb e0 x y z)))

(B (name invisible) (=> (^ (S#VISION e0 :0.3) (SS#BLINDNESS e0 e0 :0.3) (R#INVISIBLE x e0 :0.3)) (невидимый-adj e0 x)))


;; Vision: Seeing

(B (name open-eyes) (=> (^ (S#VISION e0 :0.45) (SS#SEEING e0 e0 :0.45)) (^ (открыть-vb e0 x y z) (глаз-nn e1 y))))
(B (name open-eyes) (=> (^ (S#VISION e0 :0.45) (SS#SEEING e0 e0 :0.45)) (прозреть-vb e0 x y z)))
(B (name open-eyes) (=> (^ (S#VISION e0 :0.45) (SS#SEEING e0 e0 :0.45)) (прозревать-vb e0 x y z)))

(B (name open-eyes) (=> (^ (S#VISION e0 :0.45) (SS#SEEING x e0 :0.45)) (видимость-nn e0 x)))

(B (name visionmap) (=> (I#VISION x :0.9) (S#VISION x)))
(B (name blindnessmap) (=> (I#BLINDNESS x y :0.9) (SS#BLINDNESS x y)))
(B (name seeingmap) (=> (I#SEEING x y :0.9) (SS#SEEING x y)))


;; Monster

;; Monster: Type

(B (name monster) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (монстр-nn e0 x)))
(B (name troll) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (тролль-nn e0 x)))
(B (name werewolf) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (дракон-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (зомби-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (кащей-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (змей-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (демон-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (ведьма-nn e0 x)))
(B (name zombie) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE x e0 :0.45)) (чудовище-nn e0 x)))


;; Monster: Action

(B (name scare) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (пугать-vb e0 x y u)))
(B (name scare) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (испугать-vb e0 x y u)))
(B (name scare) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (напугать-vb e0 x y u)))
(B (name suck) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (страшить-vb e0 x y u)))
(B (name outlive) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (свирепствовать-vb e0 x y u)))
(B (name outlive) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (зверствовать-vb e0 x y u)))

(B (name outlive) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION x e0 :0.45)) (зверство-nn e0 x)))

(B (name suck) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (страшный-adj e0 x)))
(B (name suck) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%ACTION e0 e0 :0.45)) (страшнейший-adj e0 x)))
(B (name suck) (=> (^ (S#MONSTER e0 :0.45) (SS#MONSTER%TYPE e0 e0 :0.45)) (чудовищный-adj e0 x)))

(B (name monstermap) (=> (I#MONSTER x :0.9) (S#MONSTER x)))
(B (name monster-typemap) (=> (I#MONSTER%TYPE x y :0.9) (SS#MONSTER%TYPE x y)))
(B (name monster-typemap) (=> (I#MONSTER%ACTION x y :0.9) (SS#MONSTER%ACTION x y)))


;; Schism

;; Schism: Type

(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%TYPE x e0 :0.45)) (раскол-nn e0 x)))
(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%TYPE x e0 :0.45)) (стратификация-nn e0 x)))
(B (name gap) (=> (^ (S#SCHISM e0 :0.3) (SS#SCHISM%TYPE x e0 :0.3)) (^ (пропасть-nn e0 x) (между-in e1 x y))))

(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%TYPE x e0 :0.45)) (апартеид-nn e0 x)))

(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%TYPE e0 e0 :0.45)) (разделить-vb e0 x y z)))
(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%TYPE e0 e0 :0.45)) (разделять-vb e0 x y z)))


;; Schism: Distances

(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#DISTANCES x e0 :0.45)) (^ (расстояние-nn e0 x) (между-in e1 x y))))
(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%DISTANCES x e0 :0.45)) (разрыв-nn e0 x)))
(B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#SCHISM%DISTANCES x e0 :0.45)) (отрыв-nn e0 x)))

; (B (name schism) (=> (^ (S#SCHISM e0 :0.45) (SS#DISTANCES x e0 :0.45)) (мерило-nn e0 x)))

(B (name schismmap) (=> (I#SCHISM x :0.9) (S#SCHISM x)))
(B (name schism-typemap) (=> (I#TYPE x y :0.9) (SS#TYPE x y)))
(B (name schism-distancesmap) (=> (I#DISTANCES x y :0.9) (SS#DISTANCES x y)))


;; Forceful Extraction

;; Forceful Extraction: Type

(B (name squeeze) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдавить-vb e0 x y u)))
(B (name squeeze) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдавлить-vb e0 x y u)))
(B (name wring) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (вырвать-vb e0 x y u)))
(B (name wring) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (вырывать-vb e0 x y u)))
(B (name vacuum) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (оторвать-vb e0 x y u)))
(B (name vacuum) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (оторывать-vb e0 x y u)))
(B (name extract) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (сдирать-vb e0 x y u)))
(B (name wrest) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (содрать-vb e0 x y u)))
(B (name wrest) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (драть-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (доить-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (подоить-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдоить-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (стричь-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдернуть-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдергивать-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выдёргивать-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выкачивать-vb e0 x y u)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (выкачать-vb e0 x y u)))

(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (изымать-vb e0 x y z)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.45)) (изъятие-nn e0 x)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.45)) (выдавливание-nn e0 x)))
(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.45)) (доение-nn e0 x)))

(B (name tug) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.3) (SS#FORCEFUL_EXTRACTION%TYPE e0 e0 :0.3) (R#EXTRACTION-AGENT x e0 :0.3)) (доярка-nn e0 x)))

;(B (name leech) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE x e0 :0.45)) (пиявка-nn e0 x)))
;(B (name parasite) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE x e0 :0.45)) (паразит-nn e0 x)))
;(B (name bloodsucker_fe) (=> (^ (S#FORCEFUL_EXTRACTION e0 :0.45) (SS#FORCEFUL_EXTRACTION%TYPE x e0 :0.45)) (кровосос-nn e0 x)))

(B (name forceful-extractionmap) (=> (I#FORCEFUL_EXTRACTION x :0.9) (S#FORCEFUL_EXTRACTION x)))
(B (name forceful-extraction-typemap) (=> (I#FORCEFUL_EXTRACTION%TYPE x y :0.9) (SS#FORCEFUL_EXTRACTION%TYPE x y)))


;; Natural Physical Force

;; Natural Physical Force: Type

(B (name avalanche) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (сила-nn e0 x)))

(B (name avalanche) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (лавина-nn e0 x)))
(B (name tsunami) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (цунами-nn e0 x)))
(B (name deluge) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (потоп-nn e0 x)))
(B (name deluge) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (наводнение-nn e0 x)))
(B (name flood) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (ураган-nn e0 x)))
(B (name tornado) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (смерчь-nn e0 x)))
(B (name hurricane) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (землятресение-nn e0 x)))
(B (name cyclone) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (шторм-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (засуха-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (извержение-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (климат-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (буря-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (ветер-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (пожар-nn e0 x)))

(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (потрясение-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (взрыв-nn e0 x)))

;(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (слабость-nn e0 x)))

(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE x e0 :0.45)) (хаос-nn e0 x)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE e0 e0 :0.45)) (хаотический-adj e0 x)))

(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE e0 e0 :0.45)) (бушевать-vb e0 x y z)))
(B (name twister) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.45) (SS#NATURAL_PHYSICAL_FORCE%TYPE e0 e0 :0.45)) (разбушеваться-vb e0 x y z)))


;; Natural Physical Force: Result

(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (разрушить-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (разрушать-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (смести-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (сметать-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (сокрушить-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (сокрушать-vb e0 x y u)))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (^ (стереть-vb e0 x y u) (с-in e1 e0 z) (лицо-nn e2 z) (земля-nn e3 w))))
(B (name destroy) (=> (^ (S#NATURAL_PHYSICAL_FORCE e0 :0.23) (SS#NATURAL_PHYSICAL_FORCE%RESULT e0 e0 :0.23) (R#DESTROY-AGENT x e0 :0.23) (R#DESTROY-PATIENT y e0 :0.23)) (^ (стирать-vb e0 x y u) (с-in e1 e0 z) (лицо-nn e2 z) (земля-nn e3 w))))

(B (name natural-physical-forcemap) (=> (I#NATURAL_PHYSICAL_FORCE x :0.9) (S#NATURAL_PHYSICAL_FORCE x)))
(B (name natural-physical-force-typemap) (=> (I#NATURAL_PHYSICAL_FORCE%TYPE x y :0.9) (SS#NATURAL_PHYSICAL_FORCE%TYPE x y)))
(B (name natural-physical-force-resultmap) (=> (I#NATURAL_PHYSICAL_FORCE%RESULT x y :0.9) (SS#NATURAL_PHYSICAL_FORCE%RESULT x y)))


;; Accident

(B (name avalanche) (=> (^ (S#ACCIDENT e0 :0.45) (SS#ACCIDENT%TYPE x e0 :0.45)) (бедствие-nn e0 x)))
(B (name avalanche) (=> (^ (S#ACCIDENT e0 :0.45) (SS#ACCIDENT%TYPE x e0 :0.45)) (катастрофа-nn e0 x)))
(B (name avalanche) (=> (^ (S#ACCIDENT e0 :0.45) (SS#ACCIDENT%TYPE x e0 :0.45)) (авария-nn e0 x)))
(B (name avalanche) (=> (^ (S#ACCIDENT e0 :0.45) (SS#ACCIDENT%TYPE e0 e0 :0.45)) (катастрофический-adj e0 x)))
(B (name avalanche) (=> (^ (S#ACCIDENT e0 :0.45) (SS#ACCIDENT%TYPE x e0 :0.45)) (^ (несчастный-adj e1 x) (случай-nn e0 x))))


;; Physical Location

;; Physical Location: Defined Region

(B (name boundary) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (рай-nn e0 x)))
(B (name boundary) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (гавань-nn e0 x)))

(B (name boundary) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (край-nn e0 x)))
(B (name edge) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (граница-nn e0 x)))
(B (name margin) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (черта-nn e0 x)))
(B (name fringe) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (порог-nn e0 x)))

(B (name fringe) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (царство-nn e0 x)))
(B (name fringe) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION x e0 :0.45)) (планета-nn e0 x)))

(B (name live-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 0.45)) (^ (жить-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))
(B (name reside-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (проживать-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))
(B (name stay-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (находиться-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))
(B (name born-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (родиться-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))
(B (name born-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (рождаться-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))
(B (name born-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (оказаться-vb e0 x y z) (в-in e1 e0 w) (TS#POVERTY w))))

(B (name live-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 0.45)) (^ (жить-vb e0 x y z) (в-in e1 e0 w) (TS#WEALTH w))))
(B (name reside-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (проживать-vb e0 x y z) (в-in e1 e0 w) (TS#WEALTH w))))
(B (name stay-in) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (находиться-vb e0 x y z) (в-in e1 e0 w) (TS#WEALTH w))))
(B (name born-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (родиться-vb e0 x y z) (в-in e1 e0 w) (TS#WEALTH w))))
(B (name born-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#DEFINED_REGION e0 e0 :0.45)) (^ (рождаться-vb e0 x y z) (в-in e1 e0 w) (TS#WEALTH w))))


;; Physical Location: Movement Into

(B (name push-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (толкнуть-vb e0 x y z) (в-in e1 e0 w))))
(B (name drive-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (затянуть-vb e0 x y z) (в-in e1 e0 w))))
(B (name draw-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (привести-vb e0 x y z) (к-in e1 e0 w))))
(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (увлечь-vb e0 x y z) (в-in e1 e0 w))))
(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (бросить-vb e0 x y z) (в-in e1 e0 w))))
(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (входить-vb e0 x y z) (в-in e1 e0 w))))
(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#MOVEMENT_INTO e0 e0 :0.23) (R#PROPEL-AGENT x e0 :0.23) (R#PROPEL-PATIENT y e0 :0.23)) (^ (войти-vb e0 x y z) (в-in e1 e0 w))))

(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#MOVEMENT_INTO e0 e0 :0.23)) (^ (вхождение-nn e0 x) (в-in e1 x w))))
(B (name drag-into) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#MOVEMENT_INTO e0 e0 :0.23)) (^ (вхождения-nn e0 x) (в-in e1 x w))))


;; Physical Location: Exit

(B (name emerge) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#PHYSICAL_LOCATION%EXIT e0 e0 :0.23) (R#EXIT-AGENT x e0 :0.23)) (вырваться-vb e0 x y u)))
(B (name emerge) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#PHYSICAL_LOCATION%EXIT e0 e0 :0.23) (R#EXIT-AGENT x e0 :0.23)) (выбраться-vb e0 x y u)))
(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#PHYSICAL_LOCATION%EXIT e0 e0 :0.23) (R#EXIT-AGENT x e0 :0.23)) (выйти-vb e0 x y u)))
(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#PHYSICAL_LOCATION%EXIT e0 e0 :0.23) (R#EXIT-AGENT x e0 :0.23)) (^ (перейти-vb e0 x y u) (в-in e1 e0 z))))
(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.23) (SS#PHYSICAL_LOCATION%EXIT e0 e0 :0.23) (R#EXIT-AGENT x e0 :0.23)) (^ (переходить-vb e0 x y u) (в-in e1 e0 z))))

(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#PHYSICAL_LOCATION%EXIT x e0 :0.45)) (^ (уход-nn e0 x) (от-in e1 x z))))

(B (name ticket) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#PHYSICAL_LOCATION%EXIT x e0 :0.45)) (^ (путь-nn e0 x) (из-in e1 x y) (TS#POVERTY y))))
(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#PHYSICAL_LOCATION%EXIT x e0 :0.45)) (^ (выход-nn e0 x) (из-in e1 x y) (TS#POVERTY y))))
(B (name ticket) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#PHYSICAL_LOCATION%EXIT x e0 :0.45)) (^ (путь-nn e0 x) (из-in e1 x y) (TS#WEALTH y))))
(B (name exit) (=> (^ (S#PHYSICAL_LOCATION e0 :0.45) (SS#PHYSICAL_LOCATION%EXIT x e0 :0.45)) (^ (выход-nn e0 x) (из-in e1 x y) (TS#WEALTH y))))

(B (name physical-locationmap) (=> (I#PHYSICAL_LOCATION x :0.9) (S#PHYSICAL_LOCATION x)))
(B (name defined-regionmap) (=> (I#DEFINED_REGION x y :0.9) (SS#DEFINED_REGION x y)))
(B (name movement-intomap) (=> (I#MOVEMENT_INTO x y :0.9) (SS#MOVEMENT_INTO x y)))
(B (name physical-location-exitmap) (=> (I#PHYSICAL_LOCATION%EXIT x y :0.9) (SS#PHYSICAL_LOCATION%EXIT x y)))


;; Vertical Scale

;; Vertical Scale: Position on a Scale

(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#POSITION_ON_A_SCALE x e0 :0.3) (R#FIXED-POINT x e0 :0.3)) (уровень-nn e0 x)))
(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#POSITION_ON_A_SCALE x e0 :0.3) (R#FIXED-POINT x e0 :0.3)) (^ (ниже-rb e1 x) (черта-nn e0 x))))
(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#POSITION_ON_A_SCALE x e0 :0.3) (R#FIXED-POINT x e0 :0.3)) (^ (ниже-in e1 y x) (черта-nn e0 x))))
(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#POSITION_ON_A_SCALE x e0 :0.3) (R#FIXED-POINT x e0 :0.3)) (планка-nn e0 x)))
(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#POSITION_ON_A_SCALE x e0 :0.3) (R#FIXED-POINT x e0 :0.3)) (мерило-nn e0 x)))

(B (name peak) (=> (^ (S#VERTICAL_SCALE e0 :0.45) (SS#POSITION_ON_A_SCALE x e0 :0.45)) (шкала-nn e0 x)))

(B (name freeze) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#POSITION_ON_A_SCALE e0 e0 :0.23) (R#MOVE-STOP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (застыть-vb e0 x y u)))


;; Vertical Scale: Movement on the Scale

(B (name raise) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (подняться-vb e0 x y u)))
(B (name raise) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (подниматься-vb e0 x y u)))
(B (name rise) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (забраться-vb e0 x y u)))
(B (name rise) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (забираться-vb e0 x y u)))
(B (name leap) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (заползти-vb e0 x y u)))
(B (name leap) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (заползать-vb e0 x y u)))
(B (name leap) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (катиться-vb e0 x y u)))
(B (name leap) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (скатиться-vb e0 x y u)))
(B (name skyrocket) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (взлететь-vb e0 x y u)))
(B (name skyrocket) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (взлетать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (подскочить-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (подскакивать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (повышаться-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-UP e0 e0 :0.23) (R#MOVER x e0 :0.23)) (повыситься-vb e0 x y u)))

(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (повышать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (повысить-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (превышать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (превысить-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (поднять-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (поднимать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (задрать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (задирать-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (взвинтить-vb e0 x y u)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (взвинчивать-vb e0 x y u)))

(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (упасть-vb e0 x y u)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (падать-vb e0 x y u)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (cползти-vb e0 x y u)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (сползать-vb e0 x y u)))
(B (name fall) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (спуститься-vb e0 x y u)))
(B (name fall) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (спускаться-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (опуститься-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (опускаться-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (снижаться-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.23) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.23) (R#MOVE-DOWN e0 e0 :0.23) (R#MOVER x e0 :0.23)) (снизиться-vb e0 x y u)))

(B (name fall) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (спустить-vb e0 x y u)))
(B (name fall) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (спускать-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (опустить-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (опускать-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (снижать-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (снизить-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (понижать-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (понизить-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (занижать-vb e0 x y u)))
(B (name drop) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE e0 e0 :0.3) (R#MOVER y e0 :0.3)) (занизить-vb e0 x y u)))

(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (взлет-nn e0 x)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (скачок-nn e0 x)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (повышение-nn e0 x)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (поднятие-nn e0 x)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (подъем-nn e0 x)))
(B (name increase) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-UP x e0 :0.3)) (подъём-nn e0 x)))

(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-DOWN x e0 :0.3)) (падение-nn e0 x)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-DOWN x e0 :0.3)) (снижение-nn e0 x)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-DOWN x e0 :0.3)) (сокращение-nn e0 x)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-DOWN x e0 :0.3)) (скатывание-nn e0 x)))
(B (name decrease) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#MOVEMENT_ON_THE_SCALE x e0 :0.3) (R#MOVE-DOWN x e0 :0.3)) (спуск-nn e0 x)))


;; Vertical Scale: Contrast of Positions

(B (name higher) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#ABOVE x e0 :0.3)) (высокий-adj e0 x)))
(B (name above) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#ABOVE x e0 :0.3)) (выше-rb e0 x)))

(B (name lower) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#BELOW x e0 :0.3)) (низкий-adj e0 x)))
(B (name below) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#BELOW x e0 :0.3)) (ниже-rb e0 x)))
(B (name below) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#BELOW x e0 :0.3)) (ниже-in e0 y x)))
;(B (name below) (=> (^ (S#VERTICAL_SCALE e0 :0.3) (SS#CONTRAST_OF_POSITIONS e0 e0 :0.3) (R#BELOW x e0 :0.3)) (^ (ниже-rb e0 e1) (черта-nn e1 x))))

;(B (name below) (=> (^ (S#VERTICAL_SCALE e0 :0.45) (SS#CONTRAST_OF_POSITIONS x e0 :0.45)) (черта-nn e0 x)))

(B (name vertical-scalemap) (=> (I#VERTICAL_SCALE x :0.9) (S#VERTICAL_SCALE x)))
(B (name position-on-a-scalemap) (=> (I#POSITION_ON_A_SCALE x y :0.9) (SS#POSITION_ON_A_SCALE x y)))
(B (name movement-on-the-scalemap) (=> (I#MOVEMENT_ON_THE_SCALE x y :0.9) (SS#MOVEMENT_ON_THE_SCALE x y)))
(B (name contrast-of-positionsmap) (=> (I#CONTRAST_OF_POSITIONS x y :0.9) (SS#CONTRAST_OF_POSITIONS x y)))


;; Low Point

;; Low Point: Bottom of Economic Scale

(B (name dno) (=> (^ (S#LOW_POINT e0 :0.45) (SS#BOTTOM_OF_ECONOMIC_SCALE x e0 :0.45)) (дно-nn e0 x)))
(B (name niz) (=> (^ (S#LOW_POINT e0 :0.45) (SS#BOTTOM_OF_ECONOMIC_SCALE x e0 :0.45)) (низ-nn e0 x)))


;; Low Point: Movement Downward

(B (name spolzat) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (сползать-vb e0 x u u1))))
(B (name spolzti) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (сползти-vb e0 x u u1))))
(B (name spuskatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (спускаться-vb e0 x u u1))))
(B (name spustitsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (спуститься-vb e0 x u u1))))
(B (name spuskatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (опуститься-vb e0 x u u1))))
(B (name spustitsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (опускаться-vb e0 x u u1))))
(B (name upast) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (упасть-vb e0 x u u1))))
(B (name upast) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (пасть-vb e0 x u u1))))
(B (name padat) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (падать-vb e0 x u u1))))
(B (name padat) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (свалиться-vb e0 x u u1))))
(B (name padat) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (катиться-vb e0 x u u1))))
(B (name padat) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (скатиться-vb e0 x u u1))))


;; Low Point: Movement Upward

(B (name podnjatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (подняться-vb e0 x u u1))))
(B (name podnimatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (подниматься-vb e0 x u u1))))
(B (name podnimatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (взбираться-vb e0 x u u1))))
(B (name podnimatsja) (=> (^ (S#LOW_POINT u :0.3) (SS#MOVEMENT_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.3)) (^ (S#LOW_POINT e1) (взобраться-vb e0 x u u1))))

(B (name lowpointmap) (=> (I#LOW_POINT x :0.9) (S#LOW_POINT x)))
(B (name bottom-of-econ-scale-map) (=> (I#BOTTOM_OF_ECONOMIC_SCALE x y :0.9) (SS#BOTTOM_OF_ECONOMIC_SCALE x y)))
(B (name MOVEMENT_DOWNWARDmap) (=> (I#MOVEMENT_DOWNWARD x y :0.9) (SS#MOVEMENT_DOWNWARD x y)))
(B (name MOVEMENT_UPWARDmap) (=> (I#MOVEMENT_UPWARD x y 0.9) (SS#MOVEMENT_UPWARD xy )))


;; High Point

;; High Point: Top of Economic Scale

(B (name dno) (=> (^ (S#HIGH_POINT e0 :0.45) (SS#TOP_OF_ECONOMIC_SCALE x e0 :0.45)) (пик-nn e0 x)))
(B (name dno) (=> (^ (S#HIGH_POINT e0 :0.45) (SS#TOP_OF_ECONOMIC_SCALE x e0 :0.45)) (вершина-nn e0 x)))
(B (name dno) (=> (^ (S#HIGH_POINT e0 :0.45) (SS#TOP_OF_ECONOMIC_SCALE x e0 :0.45)) (высота-nn e0 x)))
(B (name dno) (=> (^ (S#HIGH_POINT e0 :0.45) (SS#TOP_OF_ECONOMIC_SCALE x e0 :0.45)) (небеса-nn e0 x)))
(B (name dno) (=> (^ (S#HIGH_POINT e0 :0.45) (SS#TOP_OF_ECONOMIC_SCALE x e0 :0.45)) (зенит-nn e0 x)))


;; High Point: Movement Backward/Downward

(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (упасть-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (падать-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (свалиться-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (опуститься-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (опускаться-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (спуститься-vb e0 x u u1))))
(B (name spolzat) (=> (^ (S#HIGH_POINT u :0.3) (SS#MOVEMENT_BACKWARD_DOWNWARD e0 u :0.3) (R#MOVE-D-PATIENT x e0 :0.3)) (^ (HIGH_POINT e1) (спускаться-vb e0 x u u1))))


;; High Point: Movement Forward/Upward

(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (подняться-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (подниматься-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (взлетать-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (взлететь-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (забраться-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (забираться-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (взбраться-vb e0 x u u1))))
(B (name podnjatsja) (=> (^ (S#HIGH_POINT u :0.33) (SS#MOVEMENT_FORWARD_UPWARD e0 u :0.3) (R#MOVE-U-PATIENT x e0 :0.33)) (^ (HIGH_POINT e1) (взобираться-vb e0 x u u1))))


;; Moral Duty

;; Moral Duty: Remuneration

(B (name duty) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION x e0 :0.45)) (обязанность-nn e0 x)))
(B (name duty) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION x e0 :0.45)) (обязательство-nn e0 x)))
(B (name due) (=> (^ (S#MORAL_DUTY e0 :0.48) (SS#REMUNERATION x e0 :0.48)) (долг-nn e0 x)))
(B (name due) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION x e0 :0.45)) (залог-nn e0 x)))
(B (name due) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION x e0 :0.45)) (мораль-nn e0 x)))

(B (name due) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION e0 e0 :0.45)) (священный-adj e0 x)))

(B (name due) (=> (^ (S#MORAL_DUTY e0 :0.45) (SS#REMUNERATION e0 e0 :0.45)) (обязать-vb e0 x y z)))

(B (name MORAL_DUTYmap) (=> (I#MORAL_DUTY e0 :0.9) (S#MORAL_DUTY x)))
(B (name remunerationmap) (=> (I#REMUNERATION x y :0.9) (SS#REMUNERATION x y)))


;; Medicine

;; Medicine: Administration

(B (name inject) (=> (^ (S#MEDICINE e0 :0.45) (SS#ADMINISTRATION e0 e0 :0.45)) (вколоть-vb e0 x y z)))
(B (name inject) (=> (^ (S#MEDICINE e0 :0.45) (SS#ADMINISTRATION e0 e0 :0.45)) (вкалывать-vb e0 x y z)))

(B (name inject) (=> (^ (S#MEDICINE e0 :0.45) (SS#RESULT e0 e0 :0.45)) (оздоровить-vb e0 x y z)))
(B (name inject) (=> (^ (S#MEDICINE e0 :0.45) (SS#RESULT x e0 :0.45)) (оздоровление-nn e0 x)))

;(B (name shot) (=> (^ (S#MEDICINE e0 :0.45) (SS#ADMINISTRATION x e0 :0.45)) (укол-nn e0 x)))
;(B (name injection) (=> (^ (S#MEDICINE e0 :0.45) (SS#ADMINISTRATION x e0 :0.45)) (инъекция-nn e0 x)))

(B (name medicinemap) (=> (I#MEDICINE x :0.9) (S#MEDICINE x)))
(B (name administrationmap) (=> (I#ADMINISTRATION x y :0.9) (SS#ADMINISTRATION x y)))


;; Right

;; Right: Type

(B (name right-to) (=> (^ (S#RIGHT e0 :0.45) (SS#RIGHT%TYPE x e0 :0.45)) (^ (право-nn e0 x) (на-in e1 x y ))))
(B (name right-to) (=> (^ (S#RIGHT e0 :0.45) (SS#RIGHT%TYPE x e0 :0.45)) (право-nn e0 x)))

(B (name rightmap) (=> (I#RIGHT x :0.9) (S#RIGHT x)))
(B (name right-typemap) (=> (I#RIGHT%TYPE x y :0.9) (SS#RIGHT%TYPE x y)))


;; Food

;; Food: Type

(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#FOOD%TYPE x e0 :0.45)) (пирог-nn e0 x)))
(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#FOOD%TYPE x e0 :0.45)) (хлеб-nn e0 x)))
(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#FOOD%TYPE x e0 :0.45)) (пища-nn e0 x)))
(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#FOOD%TYPE x e0 :0.45)) (еда-nn e0 x)))


;; Food: Consumption

(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#CONSUMPTION x e0 :0.45)) (вкус-nn e0 x)))
(B (name taste-of) (=> (^ (S#FOOD e0 :0.3) (SS#CONSUMPTION x e0 :0.3) (R#TASTE-OBJECT y e0 :0.3)) (^ (вкус-nn e0 x) (of-in e1 x y))))

(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#CONSUMPTION x e0 :0.45)) (поедание-nn e0 x)))
(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#CONSUMPTION x e0 :0.45)) (проедание-nn e0 x)))
(B (name taste) (=> (^ (S#FOOD e0 :0.45) (SS#CONSUMPTION x e0 :0.45)) (поглощение-nn e0 x)))

(B (name taste) (=> (^ (S#FOOD e0 :0.23) (SS#CONSUMPTION e0 e0 :0.23) (R#TASTE-AGENT x e0 :0.23) (R#TASTE-OBJECT y e0 :0.23)) (вкусить-vb e0 x y u)))
(B (name taste) (=> (^ (S#FOOD e0 :0.23) (SS#CONSUMPTION e0 e0 :0.23) (R#TASTE-AGENT x e0 :0.23) (R#TASTE-OBJECT y e0 :0.23)) (вкушать-vb e0 x y u)))
(B (name taste) (=> (^ (S#FOOD e0 :0.23) (SS#CONSUMPTION e0 e0 :0.23) (R#TASTE-AGENT x e0 :0.23) (R#TASTE-OBJECT y e0 :0.23)) (отведать-vb e0 x y u)))

(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (есть-vb e0 x y u) (TS#WEALTH y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (съесть-vb e0 x y u) (TS#WEALTH y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (съедать-vb e0 x y u) (TS#WEALTH y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (поедать-vb e0 x y u) (TS#WEALTH y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (проедать-vb e0 x y u) (TS#WEALTH y))))

(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (есть-vb e0 x y u) (TS#TAXATION y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (съесть-vb e0 x y u) (TS#TAXATION y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (съедать-vb e0 x y u) (TS#TAXATION y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (поедать-vb e0 x y u) (TS#TAXATION y))))
(B (name taste) (=> (^ (S#FOOD e0 :0.4) (SS#CONSUMPTION e0 e0 :0.4)) (^ (проедать-vb e0 x y u) (TS#TAXATION y))))

(B (name foodmap) (=> (I#FOOD x :0.9) (S#FOOD x)))
(B (name food-typemap) (=> (I#FOOD%TYPE x y :0.9) (SS#FOOD%TYPE x y)))
(B (name food-consumptionmap) (=> (I#CONSUMPTION x y :0.9) (SS#CONSUMPTION x y)))


;; Addiction

;; Addiction: Type

(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (накротик-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (кокаин-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (алкоголь-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (выпивка-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (водка-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (вино-nn e0 x)))
(B (name drug) (=> (^ (S#ADDICTION e0 :0.3) (SS#ADDICTION%TYPE x e0 :0.3) (R#SUBSTANCE x e0 :0.3)) (кайф-nn e0 x)))


;; Addiction: Result

(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (пьянить-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (опьянить-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (опьянять-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (одурманить-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (одурманивать-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (дурманить-vb e0 x y z)))

(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (упиваться-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#SUBSTANCE x e0 :0.2) (R#ADDICTED y e0 :0.2)) (упиться-vb e0 x y z)))

(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#ADDICTED x e0 :0.2)) (пьянеть-vb e0 x y z)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.2) (SS#ADDICTION%RESULT e0 e0 :0.2) (R#ADDICTED x e0 :0.2)) (опьянеть-vb e0 x y z)))

(B (name drunk) (=> (^ (S#ADDICTION e0 :0.3) (SS#RESULT e0 e0 :0.3) (R#ADDICTED x e0 :0.3)) (пьяный-adj e0 x)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.3) (SS#RESULT e0 e0 :0.3) (R#ADDICTED x e0 :0.3)) (опьяневший-adj e0 x)))
(B (name drunk) (=> (^ (S#ADDICTION e0 :0.3) (SS#RESULT e0 e0 :0.3) (R#ADDICTED x e0 :0.3)) (одурманенный-adj e0 x)))

(B (name intoxication) (=> (^ (S#ADDICTION e0 :0.45) (SS#RESULT x e0 :0.45)) (опъянение-nn e0 x)))
(B (name intoxication) (=> (^ (S#ADDICTION e0 :0.45) (SS#RESULT x e0 :0.45)) (передоз-nn e0 x)))
(B (name intoxication) (=> (^ (S#ADDICTION e0 :0.45) (SS#RESULT x e0 :0.45)) (передозировка-nn e0 x)))
(B (name intoxication) (=> (^ (S#ADDICTION e0 :0.45) (SS#RESULT x e0 :0.45)) (дурман-nn e0 x)))


;; Addiction: Compulsion

(B (name habit) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION x e0 :0.45)) (привычка-nn e0 x)))
(B (name habit) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION x e0 :0.45)) (порок-nn e0 x)))
(B (name addiction) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION x e0 :0.45)) (зависимость-nn e0 x)))
(B (name addiction) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION x e0 :0.45)) (пристрастие-nn e0 x)))
(B (name addiction) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION x e0 :0.45)) (тяга-nn e0 x)))

(B (name habit) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION e0 e0 :0.45)) (пристраститься-vb e0 x y z)))
(B (name habit) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION e0 e0 :0.45)) (^ (подсесть-vb e0 x y z) (на-in e1 e0 w))))

(B (name addiction) (=> (^ (S#ADDICTION e0 :0.45) (SS#COMPULSION e0 e0 :0.45)) (зависимый-adj e0 e0)))

(B (name addictionmap) (=> (I#ADDICTION x :0.9) (S#ADDICTION x)))
(B (name addiction-typemap) (=> (I#ADDICTION%TYPE x y :0.9) (SS#ADDICTION%TYPE x y)))
(B (name addiction-compulsionmap) (=> (I#COMPULSION x y :0.9) (SS#COMPULSION x y)))
(B (name addiction-resultmap) (=> (I#ADDICTION%RESULT x y :0.9) (SS#ADDICTION%RESULT x y)))


;; Blood System

;; Blood System: Components

(B (name blood) (=> (^ (S#BLOOD_SYSTEM e0 :0.3) (SS#COMPONENT x e0 :0.3) (R#BLOOD x e0 :0.3)) (кровь-nn e0 x)))
(B (name vein) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#COMPONENT x e0 :0.45)) (вена-nn e0 x)))
(B (name artery) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#COMPONENT x e0 :0.45)) (артерия-nn e0 x)))
(B (name blood) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#COMPONENT x e0 :0.45)) (^ (кровеносный-adj e0 x) (система-nn e1 x))))


;; Blood System: Movement

(B (name taste) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#MOVEMENT e1 e0 :0.45)) (^ (течь-vb e1 x y u) (SS#COMPONENT x e0))))
(B (name taste) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#MOVEMENT e1 e0 :0.45)) (^ (струиться-vb e1 x y u) (SS#COMPONENT x e0))))

(B (name taste) (=> (^ (S#BLOOD_SYSTEM e0 :0.45) (SS#MOVEMENT x e0 :0.45)) (кровообращение-nn e1 x)))

(B (name blood-systemmap) (=> (I#BLOOD_SYSTEM x :0.9) (S#BLOOD_SYSTEM x)))
(B (name blood-system-componentmap) (=> (I#COMPONENT x y :0.9) (SS#COMPONENT x y)))
(B (name blood-system-movementmap) (=> (I#MOVEMENT x y :0.9) (SS#MOVEMENT x y)))


;; Energy

;; Energy: Type

(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%TYPE x e0 :0.45)) (энергия-nn e0 x)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%TYPE x e0 :0.45)) (горючее-nn e0 x)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%TYPE x e0 :0.45)) (топливо-nn e0 x)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%TYPE x e0 :0.45)) (батарея-nn e0 x)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%TYPE x e0 :0.45)) (батарейка-nn e0 x)))


;; Energy: Result

(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%RESULT e0 e0 :0.45)) (зарядить-vb e0 x y z)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%RESULT e0 e0 :0.45)) (заряжать-vb e0 x y z)))

(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%RESULT e0 e0 :0.45)) (тепло-nn e0 x)))
(B (name energy) (=> (^ (S#ENERGY e0 :0.45) (SS#ENERGY%RESULT e0 e0 :0.45)) (заряд-nn e0 x)))


(B (name energymap) (=> (I#ENERGY x :0.9) (S#ENERGY x)))
(B (name energy-typemap) (=> (I#ENERGY%TYPE x y :0.9) (SS#ENERGY%TYPE x y)))
(B (name energy-resultmap) (=> (I#ENERGY%RESULT x y :0.9) (SS#ENERGY%RESULT x y)))


;; A God

;; A God: Type

(B (name god) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE x e0 :0.45)) (бог-nn e0 x)))
(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE x e0 :0.45)) (божество-nn e0 x)))
(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE x e0 :0.45)) (идол-nn e0 x)))

(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE e0 e0 :0.45)) (божеский-adj e0 x)))
(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE e0 e0 :0.45)) (божественный-adj e0 x)))

(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE e0 e0 :0.45)) (воскреснуть-vb e0 x y z)))
(B (name idol) (=> (^ (S#A_GOD e0 :0.45) (SS#A_GOD%TYPE e0 e0 :0.45)) (воскресать-vb e0 x y z)))


;; A God: Veneration

(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (поклоняться-vb e0 x y u)))
(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (преклоняться-vb e0 x y u)))
(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (кланяться-vb e0 x y u)))
(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (почитать-vb e0 x y u)))
(B (name pray) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (молиться-vb e0 x y u)))
(B (name pray) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (проповедовать-vb e0 x y u)))
(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (обожествлять-vb e0 x y u)))
(B (name worship) (=> (^ (S#A_GOD e0 :0.3) (SS#VENERATION e0 e0 :0.3) (R#WORSHIP-AGENT x e0 :0.3)) (обожествить-vb e0 x y u)))

(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (поклонение-nn e0 x)))
(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (преклонение-nn e0 x)))
(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (обожествление-nn e0 x)))

(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (храм-nn e0 x)))
(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (культ-nn e0 x)))
(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (алтарь-nn e0 x)))
(B (name worship) (=> (^ (S#A_GOD u :0.45) (SS#VENERATION x u :0.45)) (служитель-nn e0 x)))

(B (name godmap) (=> (I#GOD x :0.9) (S#A_GOD x)))
(B (name god-typemap) (=> (I#A_GOD%TYPE x y :0.9) (SS#A_GOD%TYPE x y)))
(B (name god-venerationmap) (=> (I#VENERATION x y :0.9) (SS#VENERATION x y)))


;; Plant

;; Plant: Type

(B (name plant) (=> (^ (S#PLANT e0 :0.45) (SS#PLANT%TYPE x e0 :0.45)) (растение-nn e0 x)))
(B (name tree) (=> (^ (S#PLANT e0 :0.45) (SS#PLANT%TYPE x e0 :0.45)) (дерево-nn e0 x)))
(B (name weed) (=> (^ (S#PLANT e0 :0.3) (SS#TYPE x e0 :0.3) (R#UNWANTED x e0 :0.3)) (сорняк-nn e0 x)))
(B (name flower) (=> (^ (S#PLANT e0 :0.45) (SS#PLANT%TYPE x e0 :0.45)) (цветок-nn e0 x)))
(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#PLANT%TYPE x e0 :0.45)) (трава-nn e0 x)))
(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#PLANT%TYPE x e0 :0.45)) (заросли-nn e0 x)))


;; Plant: Parts

(B (name root) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-ROOT x e0 :0.3)) (корень-nn e0 x)))
(B (name fruit) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-EXTERNAL x e0 :0.3)) (плод-nn e0 x)))
(B (name seed) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-GENESIS x e0 :0.3)) (семя-nn e0 x)))
(B (name leaf) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-EXTERNAL x e0 :0.3)) (лист-nn e0 x)))
(B (name leaf) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-EXTERNAL x e0 :0.3)) (ветвь-nn e0 x)))
(B (name leaf) (=> (^ (S#PLANT e0 :0.3) (SS#PARTS x e0 :0.3) (R#PLANT-EXTERNAL x e0 :0.3)) (ствол-nn e0 x)))


;; Plant: Change of State

(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (расти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (вырасти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (вырастать-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (прорасти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (прорастать-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (подрасти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (отрасти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (отрастать-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (зарасти-vb e0 x y u)))
(B (name grow) (=> (^ (S#PLANT e0 :0.3) (SS#CHANGE_OF_STATE e0 e0 :0.3) (R#CHANGING-THING x e0 :0.3)) (зарастать-vb e0 x y u)))

(B (name grow) (=> (^ (S#PLANT e0 :0.4) (SS#CHANGE_OF_STATE x e0 :0.4)) (рост-nn e0 x)))

(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#CHANGE_OF_STATE e0 e0 :0.45)) (цвести-vb e0 x y z)))
(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#CHANGE_OF_STATE e0 e0 :0.45)) (расцвести-vb e0 x y z)))
(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#CHANGE_OF_STATE e0 e0 :0.45)) (расцветать-vb e0 x y z)))
(B (name grass) (=> (^ (S#PLANT e0 :0.45) (SS#CHANGE_OF_STATE e0 e0 :0.45)) (разрастаться-vb e0 x y z)))

(B (name plantmap) (=> (I#PLANT x :0.9) (S#PLANT x)))
(B (name plant-typemap) (=> (I#PLANT%TYPE x y :0.9) (SS#PLANT%TYPE x y)))
(B (name plant-partsmap) (=> (I#PARTS x y :0.9) (SS#PARTS x y)))
(B (name plant-change-of-statemap) (=> (I#CHANGE_OF_STATE x y :0.9) (SS#CHANGE_OF_STATE x y)))


;; Crop

;; Crop: Planting

(B (name seed) (=> (^ (S#CROP e0 :0.3) (SS#PLANTING x e0 :0.3) (R#CROP x e0 :0.3)) (посев-nn e0 x)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (сеять-vb e0 x y u)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (посеять-vb e0 x y u)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (засеять-vb e0 x y u)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (посадить-vb e0 x y u)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (сажать-vb e0 x y u)))
(B (name sow) (=> (^ (S#CROP e0 :0.23) (SS#PLANTING e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (насаждать-vb e0 x y u)))

(B (name sow) (=> (^ (S#CROP e0 :0.45) (SS#PLANTING e0 e0 :0.45)) (посадка-nn e0 x)))
(B (name sow) (=> (^ (S#CROP e0 :0.45) (SS#PLANTING e0 e0 :0.45)) (насаждение-nn e0 x)))


;; Crop: Cultivation

(B (name grow) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (растить-vb e0 x y u)))
(B (name grow) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (вырастить-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (выращивать-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (поливать-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (полить-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (удобрять-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (удобрить-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (окучивать-vb e0 x y u)))
(B (name plant) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (окучить-vb e0 x y u)))

(B (name plant) (=> (^ (S#CROP e0 :0.45) (SS#CULTIVATION x e0 :0.45)) (выращивание-nn e0 x)))
(B (name plant) (=> (^ (S#CROP e0 :0.45) (SS#CULTIVATION x e0 :0.45)) (удобрение-nn e0 x)))
(B (name plant) (=> (^ (S#CROP e0 :0.45) (SS#CULTIVATION x e0 :0.45)) (полив-nn e0 x)))

(B (name grass) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (искоренить-vb e0 x y z)))
(B (name grass) (=> (^ (S#CROP e0 :0.23) (SS#CULTIVATION e0 e0 :0.23) (R#GARDENER x e0 :0.23) (R#CROP y e0 :0.23)) (искоренять-vb e0 x y z)))


;; Crop: Outcome

(B (name reap) (=> (^ (S#CROP e0 :0.45) (SS#OUTCOME x e0 :0.45)) (жатва-nn e0 x)))
(B (name crop) (=> (^ (S#CROP e0 :0.45) (SS#OUTCOME x e0 :0.45)) (урожай-nn e0 x)))
(B (name crop) (=> (^ (S#CROP e0 :0.45) (SS#OUTCOME x e0 :0.45)) (плод-nn e0 x)))

(B (name crop) (=> (^ (S#CROP e0 :0.45) (SS#OUTCOME e0 e0 :0.45)) (плодоносить-vb e0 x y z)))
(B (name crop) (=> (^ (S#CROP e0 :0.45) (SS#OUTCOME e0 e0 :0.45)) (плодить-vb e0 x y z)))

(B (name cropmap) (=> (I#CROP x :0.9) (S#CROP x)))
(B (name crop-plantingmap) (=> (I#PLANTING x y :0.9) (SS#PLANTING x y)))
(B (name crop-cultivationmap) (=> (I#CULTIVATION x y :0.9) (SS#CULTIVATION x y)))
(B (name crop-outcomemap) (=> (I#OUTCOME x y :0.9) (SS#OUTCOME x y)))
(B (name game-actionsmap) (=> (I#ACTIONS x y :0.9) (SS#ACTIONS x y)))
(B (name game-outcomesmap) (=> (I#OUTCOMES x y :0.9) (SS#OUTCOMES x y)))


;; Animal

;; Animal: Type

(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (животное-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (зверь-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (пес-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (пёс-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (собака-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (змея-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (удав-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (кошка-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (корова-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (бык-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (баран-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (слон-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (крыса-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (мышь-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (мышонок-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (сова-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (волк-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (лиса-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (медведь-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (заяц-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (кролик-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (павлин-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (ворона-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (осел-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (осёл-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (козел-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (козёл-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (свинья-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (обезьяна-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (хищник-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (краб-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (хомяк-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (грызун-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (рыба-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE x e0 :0.45)) (стадо-nn e0 x)))

(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%TYPE e0 e0 :0.45)) (хищный-adj e0 x)))


;; Animal: Component

(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (рыло-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (морда-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (лапа-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (пасть-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (клык-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (шкура-nn e0 x)))
(B (name face) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%COMPONENT x e0 :0.45)) (хвост-nn e0 x)))


;; Animal: Function

;(B (name swallow) (=> (^ (S#ANIMAL e0 :0.45) (SS#FUNCTION e0 e0 :0.45)) (доить-vb e0 x y u)))


;; Animal: Action

(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (есть-vb e0 x y u) (TS#WEALTH x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съесть-vb e0 x y u) (TS#WEALTH x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съедать-vb e0 x y u) (TS#WEALTH x))))

(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (есть-vb e0 x y u) (TS#POVERTY x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съесть-vb e0 x y u) (TS#POVERTY x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съедать-vb e0 x y u) (TS#POVERTY x))))

(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (есть-vb e0 x y u) (TS#TAXATION x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съесть-vb e0 x y u) (TS#TAXATION x))))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.4) (SS#ANIMAL%ACTION e0 e0 :0.4)) (^ (съедать-vb e0 x y u) (TS#TAXATION x))))

(B (name taste) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%ACTION e0 e0 :0.45)) (есть-vb e0 x y u)))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%ACTION e0 e0 :0.45)) (съесть-vb e0 x y u)))
(B (name taste) (=> (^ (S#ANIMAL e0 :0.45) (SS#ANIMAL%ACTION e0 e0 :0.45)) (съедать-vb e0 x y u)))

(B (name eat) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.2) (R#ACTION-AGENT x e0 :0.2) (R#ACTION-PATIENT y e0 :0.2)) (проглотить-vb e0 x y u)))
(B (name eat) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (кормиться-vb e0 x y u)))
(B (name digest) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (переварить-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (пережить-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (кусать-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (кусаться-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (грызть-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (загрызть-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (рычать-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (гавкать-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (лаять-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (бодаться-vb e0 x y u)))

(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (озвереть-vb e0 x y u)))

(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (лай-nn e0 x)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (бодание-nn e0 x)))

(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (вопиять-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (вопить-vb e0 x y u)))
(B (name outlive) (=> (^ (S#ANIMAL e0 :0.23) (SS#ANIMAL%ACTION e0 e0 :0.23) (R#ACTION-AGENT x e0 :0.23) (R#ACTION-PATIENT y e0 :0.23)) (возопить-vb e0 x y u)))

(B (name animalmap) (=> (I#ANIMAL x :0.9) (S#ANIMAL x)))
(B (name animal-typemap) (=> (I#ANIMAL%TYPE x y :0.9) (SS#ANIMAL%TYPE x y)))
(B (name animal-componentmap) (=> (I#ANIMAL%COMPONENT x y :0.9) (SS#ANIMAL%COMPONENT x y)))
(B (name animal-functionmap) (=> (I#FUNCTION x y :0.9) (SS#FUNCTION x y)))
(B (name animal-actionmap) (=> (I#ANIMAL%ACTION x y :0.9) (SS#ANIMAL%ACTION x y)))


;; Machine

;; Machine: Type

(B (name machine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (машина-nn e0 x)))
(B (name machine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (махина-nn e0 x)))
(B (name mechanism) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (механизм-nn e0 x)))

(B (name machine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (корабль-nn e0 x)))
(B (name machine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (поезд-nn e0 x)))

(B (name mechanism) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (гребенка-nn e0 x)))
(B (name mechanism) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%TYPE x e0 :0.45)) (гребёнка-nn e0 x)))


;; Machine: Parts

(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (двигатель-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (мотор-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (движок-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (поршень-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (шестерёнка-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (шестеренка-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (колесо-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (лопасть-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (руль-nn e0 x)))
(B (name engine) (=> (^ (S#MACHINE e0 :0.45) (SS#MACHINE%PARTS x e0 :0.45)) (рычаг-nn e0 x)))


;; Machine: Function

(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (завестись-vb e0 x y u)))
(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (заводиться-vb e0 x y u)))
(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (двигать-vb e0 x y u)))
(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (обкатать-vb e0 x y u)))
(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (наезжать-vb e0 x y u)))
(B (name turn) (=> (^ (S#MACHINE e0 :0.23) (SS#FUNCTION e0 e0 :0.23) (R#FUNCTION-AGENT x e0 :0.23) (R#FUNCTION-PATIENT y e0 :0.23)) (наехать-vb e0 x y u)))

(B (name turn) (=> (^ (S#MACHINE e0 :0.45) (SS#FUNCTION e0 e0 :0.45)) (автоматический-adj e0 x)))

(B (name turn) (=> (^ (S#MACHINE e0 :0.45) (SS#FUNCTION x e0 :0.45)) (наезд-nn e0 x)))

(B (name machinemap) (=> (I#MACHINE x :0.9) (S#MACHINE x)))
(B (name machine-typemap) (=> (I#MACHINE%TYPE x y :0.9) (SS#MACHINE%TYPE x y)))
(B (name machine-partsmap) (=> (I#MACHINE%PARTS x y :0.9) (SS#MACHINE%PARTS x y)))
(B (name machine-functionmap) (=> (I#FUNCTION x y :0.9) (SS#FUNCTION x y)))


;; Destroyer

;; Destroyer: Destructive Force

(B (name destroyer) (=> (^ (S#DESTROYER e0 :0.45) (SS#DESTRUCTIVE_FORCE x e0 :0.45)) (разрушитель-nn e0 x)))
(B (name destruction) (=> (^ (S#DESTROYER e0 :0.45) (SS#DESTRUCTIVE_FORCE x e0 :0.45)) (разрушение-nn e0 x)))
(B (name destruction) (=> (^ (S#DESTROYER e0 :0.45) (SS#DESTRUCTIVE_FORCE e0 e0 :0.45)) (разрушительный-adj e0 x)))

(B (name destroy) (=> (^ (S#DESTROYER e0 :0.23) (SS#DESTRUCTIVE_FORCE e0 e0 :0.23) (R#DESTRUCTIVE_FORCE-AGENT x e0 :0.23) (R#DESTRUCTIVE_FORCE-PATIENT y e0 :0.23)) (разрушать-vb e0 x y u)))
(B (name destroy) (=> (^ (S#DESTROYER e0 :0.23) (SS#DESTRUCTIVE_FORCE e0 e0 :0.23) (R#DESTRUCTIVE_FORCE-AGENT x e0 :0.23) (R#DESTRUCTIVE_FORCE-PATIENT y e0 :0.23)) (разрушить-vb e0 x y u)))
(B (name destroy) (=> (^ (S#DESTROYER e0 :0.23) (SS#DESTRUCTIVE_FORCE e0 e0 :0.23) (R#DESTRUCTIVE_FORCE-AGENT x e0 :0.23) (R#DESTRUCTIVE_FORCE-PATIENT y e0 :0.23)) (рушить-vb e0 x y u)))
(B (name destroy) (=> (^ (S#DESTROYER e0 :0.23) (SS#DESTRUCTIVE_FORCE e0 e0 :0.23) (R#DESTRUCTIVE_FORCE-AGENT x e0 :0.23) (R#DESTRUCTIVE_FORCE-PATIENT y e0 :0.23)) (крушить-vb e0 x y u)))

(B (name destroyermap) (=> (I#DESTROYER x :0.9) (S#DESTROYER x)))
(B (name destroyer-DESTRUCTIVE_FORCEmap) (=> (I#DESTRUCTIVE_FORCE x y :0.9) (SS#DESTRUCTIVE_FORCE x y)))


;; Geographic Feature

;; Geographic Feature: Type

(B (name mountain) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#MOUNTAIN x e0 :0.3)) (гора-nn e0 x)))
;(B (name himalayas) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#RIVER x e0 :0.3)) (река-nn e0 x)))
(B (name alps) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#FOREST x e0 :0.3)) (лес-nn e0 x)))
;(B (name ocean) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#OCEAN x e0 :0.3)) (океан-nn e0 x)))
;(B (name sea) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#OCEAN x e0 :0.3)) (море-nn e0 x)))
(B (name prairie) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#VALLEY x e0 :0.3)) (степь-nn e0 x)))
(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#VALLEY x e0 :0.3)) (далина-nn e0 x)))
(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#OASIS x e0 :0.3)) (оазис-nn e0 x)))
(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.45) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.45)) (остров-nn e0 x)))
(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.45) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.45)) (островок-nn e0 x)))
(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.45) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.45)) (материк-nn e0 x)))

;(B (name valley) (=> (^ (S#GEOGRAPHIC_FEATURE e0 :0.3) (SS#GEOGRAPHIC_FEATURE%TYPE x e0 :0.3) (R#CLIMATE x e0 :0.3)) (климат-nn e0 x)))

(B (name geographic-featuremap) (=> (I#GEOGRAPHIC_FEATURE x :0.9) (S#GEOGRAPHIC_FEATURE x)))
(B (name geographic-feature-typemap) (=> (I#GEOGRAPHIC_FEATURE%TYPE x y :0.9) (SS#GEOGRAPHIC_FEATURE%TYPE x y)))


;; Enabler

;; Enabler: Lubricant

(B (name lubrication) (=> (^ (S#ENABLER e0 :0.45) (SS#LUBRICANT x e0 :0.45)) (смазка-nn e0 x)))
(B (name oil) (=> (^ (S#ENABLER e0 :0.45) (SS#LUBRICANT x e0 :0.45)) (масло-nn e0 x)))

(B (name greasevb) (=> (^ (S#ENABLER e0 :0.3) (SS#LUBRICANT e0 e0 :0.3) (R#LUBRICATED y e0 :0.3)) (смазать-vb e0 x y u)))
(B (name lubricate) (=> (^ (S#ENABLER e0 :0.3) (SS#LUBRICANT e0 e0 :0.3) (R#LUBRICATED y e0 :0.3)) (смазывать-vb e0 x y u)))
(B (name oilvb) (=> (^ (S#ENABLER e0 :0.3) (SS#LUBRICANT e0 e0 :0.3) (R#LUBRICATED y e0 :0.3)) (умаслить-vb e0 x y u)))
(B (name oilvb) (=> (^ (S#ENABLER e0 :0.3) (SS#LUBRICANT e0 e0 :0.3) (R#LUBRICATED y e0 :0.3)) (умасливать-vb e0 x y u)))

(B (name enablermap) (=> (I#ENABLER x :0.9) (S#ENABLER x)))
(B (name enabler-lubricantmap) (=> (I#LUBRICANT x y :0.9) (SS#LUBRICANT x y)))


;; Game

;; Game: Type

(B (name chess) (=> (^ (S#GAME e0 :0.45) (SS#GAME%TYPE x e0 :0.45)) (игра-nn e0 x)))
(B (name chess) (=> (^ (S#GAME e0 :0.45) (SS#GAME%TYPE x e0 :0.45)) (шашки-nn e0 x)))
(B (name poker) (=> (^ (S#GAME e0 :0.45) (SS#GAME%TYPE x e0 :0.45)) (покер-nn e0 x)))
(B (name chess) (=> (^ (S#GAME e0 :0.45) (SS#GAME%TYPE x e0 :0.45)) (шахматы-nn e0 x)))
;(B (name chess) (=> (^ (S#GAME e0 :0.45) (SS#GAME%TYPE x e0 :0.45)) (гонка-nn e0 x)))


;; Game: Components

(B (name chip) (=> (^ (S#GAME e0 :0.45) (SS#GAME%COMPONENTS x e0 :0.45)) (пешка-nn e0 x)))
(B (name chip) (=> (^ (S#GAME e0 :0.45) (SS#GAME%COMPONENTS x e0 :0.45)) (карта-nn e0 x)))
(B (name chip) (=> (^ (S#GAME e0 :0.45) (SS#GAME%COMPONENTS x e0 :0.45)) (фишка-nn e0 x)))
(B (name chip) (=> (^ (S#GAME e0 :0.45) (SS#GAME%COMPONENTS x e0 :0.45)) (мяч-nn e0 x)))


;; Game: Actions

;(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#GAME%ACTIONS x e0 :0.45)) (старт-nn e0 x)))
;(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#GAME%ACTIONS e0 e0 :0.45)) (стартовый-adj e0 x)))
;(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#GAME%ACTIONS x e0 :0.45)) (финиш-nn e0 x)))
;(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#GAME%ACTIONS e0 e0 :0.45)) (финишный-adj e0 x)))

(B (name playvb) (=> (^ (S#GAME e0 :0.3) (SS#GAME%ACTIONS e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (играть-vb e0 x y u)))
(B (name playvb) (=> (^ (S#GAME e0 :0.3) (SS#GAME%ACTIONS e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (сыграть-vb e0 x y u)))
(B (name playvb) (=> (^ (S#GAME e0 :0.3) (SS#GAME%ACTIONS e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (пасовать-vb e0 x y u)))
(B (name playvb) (=> (^ (S#GAME e0 :0.3) (SS#GAME%ACTIONS e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (спасовать-vb e0 x y u)))


;; Game: Outcomes

;(B (name win) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (побеждать-vb e0 x y u)))
;(B (name win) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (победить-vb e0 x y u)))
(B (name win) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (выиграть-vb e0 x y u)))
(B (name win) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (выигрывать-vb e0 x y u)))
(B (name lose) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (проиграть-vb e0 x y u)))
(B (name lose) (=> (^ (S#GAME e0 :0.3) (SS#OUTCOMES e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (проигрывать-vb e0 x y u)))

;(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (победа-nn e0 x)))
(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (выигрыш-nn e0 x)))
(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (поражение-nn e0 x)))
(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (проигрыш-nn e0 x)))

(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (победитель-nn e0 x)))
(B (name lose) (=> (^ (S#GAME e0 :0.45) (SS#OUTCOMES x e0 :0.45)) (проигравший-nn e0 x)))

(B (name gamemap) (=> (I#GAME x :0.9) (S#GAME x)))
(B (name game-typemap) (=> (I#GAME%TYPE x y :0.9) (SS#GAME%TYPE x y)))
(B (name game-componentsmap) (=> (I#GAME%COMPONENTS x y :0.9) (SS#GAME%COMPONENTS x y)))


;; Game: Competition

(B (name chess) (=> (^ (S#COMPETITION e0 :0.45) (SS#COMPETITION%COMPONENT x e0 :0.45)) (гонка-nn e0 x)))
(B (name chess) (=> (^ (S#COMPETITION e0 :0.45) (SS#COMPETITION%COMPONENT x e0 :0.45)) (соревнование-nn e0 x)))
(B (name chess) (=> (^ (S#COMPETITION e0 :0.45) (SS#COMPETITION%COMPONENT x e0 :0.45)) (состязание-nn e0 x)))

(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS x e0 :0.45)) (старт-nn e0 x)))
(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS x e0 :0.45)) (стартовый-adj e0 x)))
(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS x e0 :0.45)) (финиш-nn e0 x)))
(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS x e0 :0.45)) (финишный-adj e0 x)))

(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS e0 e0 :0.45)) (стартовать-vb e0 x y z)))
(B (name play) (=> (^ (S#GAME e0 :0.45) (SS#COMPETITION%ACTIONS e0 e0 :0.45)) (финишировать-vb e0 x y z)))


;; Physical Object

(B (name thing) (=> (^ (S#PHYSICAL_OBJECT e0 :0.45) (SS#PHYSICAL_OBJECT%TYPE x e0 :0.45)) (вещь-nn e0 x)))
(B (name mass) (=> (^ (S#PHYSICAL_OBJECT e0 :0.45) (SS#PHYSICAL_OBJECT%TYPE x e0 :0.45)) (масса-nn e0 x)))

(B (name mass) (=> (^ (S#PHYSICAL_OBJECT e0 :0.45) (SS#PHYSICAL_OBJECT%TYPE x e0 :0.45)) (якорь-nn e0 x)))

(B (name fragile) (=> (^ (S#PHYSICAL_OBJECT e0 :0.45) (SS#PHYSICAL_OBJECT%TYPE e0 e0 :0.45)) (хрупкий-adj e0 x)))


;; Physical Object: Possession

(B (name possess) (=> (^ (S#PHYSICAL_OBJECT y :0.33) (SS#POSSESSION e0 y :0.33) (R#POSSESSOR x e0 :0.33)) (владеть-vb e0 x y u)))


;; Goal-Directed

(B (name win) (=> (^ (S#GOAL_DIRECTED e0 :0.3) (SS#GOAL_DIRECTED%TYPE e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (^ (стремиться-vb e0 x y u) (к-in e1 e0 z))))
(B (name win) (=> (^ (S#GOAL_DIRECTED e0 :0.3) (SS#GOAL_DIRECTED%TYPE e0 e0 :0.3) (R#PLAYER x e0 :0.3)) (^ (рваться-vb e0 x y u) (к-in e1 e0 z))))


;; A Right

;; A Right: Type

(B (name god) (=> (^ (S#A_RIGHT e0 :0.45) (SS#A_RIGHT%TYPE x e0 :0.45)) (право-nn e0 x)))
(B (name god) (=> (^ (S#A_RIGHT e0 :0.45) (SS#A_RIGHT%TYPE x e0 :0.45)) (^ (право-nn e0 x) (на-in e1 x y))))

;; Impurity

;; Impurity: Type

(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE x e0 :0.45)) (грязь-nn e0 x)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE x e0 :0.45)) (пыль-nn e0 x)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE x e0 :0.45)) (мусор-nn e0 x)))

(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (грязный-adj e0 x)))

(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (загрязнить-vb e0 x y z)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (загрязнять-vb e0 x y z)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (пачкать-vb e0 x y z)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (запачкать-vb e0 x y z)))

(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (отмывать-vb e0 x y z)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (отмыть-vb e0 x y z)))
(B (name god) (=> (^ (S#IMPURITY e0 :0.45) (SS#IMPURITY%TYPE e0 e0 :0.45)) (отмывание-nn e0 x)))


;; Movement

;; Movement: Movement

(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT x e0 :0.45)) (движение-nn e0 x)))
(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT x e0 :0.45)) (перемещение-nn e0 x)))
(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT x e0 :0.45)) (мобильность-nn e0 x)))

(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT e0 e0 :0.45)) (двигаться-vb e0 x y z)))
(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT e0 e0 :0.45)) (двинуться-vb e0 x y z)))
(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT e0 e0 :0.45)) (надвигаться-vb e0 x y z)))
(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT e0 e0 :0.45)) (перемещаться-vb e0 x y z)))

(B (name god) (=> (^ (S#MOVEMENT e0 :0.45) (SS#MOVEMENT%MOVEMENT e0 e0 :0.45)) (откатиться-vb e0 x y z)))
